@import url("https://fonts.googleapis.com/css2?family=Galada&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Fira+Sans:wght@100;200;300;400&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Work+Sans:wght@400;500;700&display=swap");

$normal-purple: rgb(221, 214, 243);
$normal-blue: rgba(159, 227, 255, 1);
$normal-hotter-pink: #faaca8;
$normal-pink: rgba(255, 177, 219, 1);

$medium-purple: #8377a6;
$dark-purple: rgb(97, 59, 128);
$dark-red: #683a38;

$opacity-pink: rgba(250, 172, 168, 0.5);
$opacity-hotter-pink: rgba(255, 177, 219, 0.5);
$opacity-purple: rgba(221, 214, 243, 0.5);
$opacity-blue: rgba(159, 227, 255, 0.55);

$opacity-red: rgba(231, 165, 171, 0.4);
$opacity-white: rgba(255, 255, 255, 0.4);
$opacity-black: rgba(0, 0, 0, 0.4);

:root {
  /* The intrinsic width of the underline stroke (in pixels). This is
   * the same as the height of the cap images. Don't specify the
   * units! This is because of some of the calculations we do later on. */
  --underline-intrinsic-width: 8;

  /* The actual width of the underline stroke we want to render (in pixels).
   * You can modify this, and the sizing and positioning should be calculated
   * accordingly. Again, Don't specify the units! */
  --underline-width: 12;

  /* The colour used to draw the underline. It should match the colour
   * used in the cap images... unfortunately we can't modify the SVG
   * fill via CSS because it's a background image. */
  --underline-color: #f1a1e3;

  /* We need to know the width of the cap images so that we
   * can position everything on the x axis accordingly. */
  --underline-cap-width: 4px;

  /* The border is positioned relative to the bottom of the line.
   * We can move it upwards a little to create an overlap effect. */
  --underline-offset-y: -2px;

  /* The padding to add to the x axis. By default, the caps would be
   * aligned with the beginning and end of the line. */
  --underline-padding-x: 0.12em;

  /* The cap images to use that form the left and right rounded
   * shape. I guess these could be any shape, they don't
   * necessarily have to be round ðŸ™‚.
   */
  --cap-image-left: url(https://files-d4s40otz1.now.sh/left.svg);
  --cap-image-right: url(https://files-4vvqilj8v.now.sh/right.svg);
}

* {
  box-sizing: border-box;
  margin-block-end: 0;
  margin-block-start: 0;
  margin-inline-start: 0;
  margin-inline-end: 0;
  font-family: "Roboto", sans-serif;
  font-size: 1em;
}
#tsparticles,
.tsparticles-canvas-el {
  max-width: 100vw;
  max-height: 100vh;
  overflow: hidden;
}

body,
#root {
  width: 100vw;
  height: 100vh;
}
.error-message {
  color: red;
}

.select-list-text {
  color: $normal-blue;
  text-shadow: 0 0 20px $opacity-blue;
}

.colorfulBg {
  background-color: $normal-pink;
  background-image: radial-gradient(
      circle at top right,
      $normal-pink,
      transparent
    ),
    radial-gradient(circle at bottom left, $normal-blue, transparent);
  //background-image: linear-gradient(19deg, #faaca8 0%, #ddd6f3 100%);
}

.login-container {
  background-color: #faaca8;
  background-image: linear-gradient(19deg, $normal-pink 0%, $normal-blue 100%);
  position: relative;
  height: 100vh;
}
.form-login-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  border: 3px solid rgba(255, 255, 255, 0.5);
  border-radius: 10px;
  padding: 3rem;
  background-color: rgba(255, 255, 255, 0.1);
  width: 45vw;
}
.form {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.input {
  margin: 0 0 1.5rem 0;
  border-radius: 5px;
  height: 2rem;
  width: 20rem;
  background-color: rgba(255, 255, 255, 0.1);
  border: 2px solid rgba(255, 255, 255, 0.3);
  padding: 0.5rem;
  color: $dark-red;
}

.input:focus {
  box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
}

h1 {
  color: rgba(255, 255, 255, 1);
  font-size: 3em;
  font-family: "Galada", cursive;
}

.hello {
  text-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
}

.button {
  //width: 6rem;
  border-radius: 5px;
  border: none;
  background: $opacity-white;
  margin: 1rem;
  height: 2rem;
  color: $dark-red;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
}

.button-list {
  background: $opacity-blue;
}

.button:hover {
  box-shadow: 0 0 20px $opacity-blue;
  transition: box-shadow 0.3s ease-in-out;
}
.button-list:hover {
  box-shadow: 0 0 20px $opacity-blue;
  transition: box-shadow 0.3s ease-in-out;
}
.header-icon:hover {
  filter: drop-shadow(0 0 5px $normal-blue);
  transition: drop-shadow 0.3s ease-in-out;
}
.button-inside-td {
  width: 6rem;
  margin: 0 5rem 0 5rem;
}
.delete-button {
  background: $opacity-red;
}
.delete-button:hover {
  box-shadow: 0 0 20px $opacity-red;
  transition: box-shadow 0.3s ease-in-out;
}

.header-container {
  background-color: $normal-pink;
  background-image: radial-gradient(
      circle at top right,
      $normal-pink,
      transparent
    ),
    radial-gradient(circle at bottom left, $normal-blue, transparent);
  position: relative;
  height: 10vh;
  top: 0;
  box-shadow: 0 0 20px $opacity-pink;
}

.content-header-container {
  position: absolute;
  top: 0;
  left: 0;
  text-align: center;
  height: 100%;
}
header {
  width: 100vw;
  height: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.hello-profile {
  margin: 0 1rem 0 1rem;
  color: white;
  text-shadow: 0 0 20px $opacity-white;
}
.list-container {
  margin: 1rem;
  display: flex;
  flex-direction: column;
}
.cards {
  display: flex;
  flex-wrap: wrap;
}

.container-list-card {
  max-width: 30vw;
  box-shadow: 0 10px 20px $opacity-black;
  border-radius: 5px;
  height: auto;
  margin: 1.5rem;
  min-width: 20vw;
}

.list-container-row {
  width: 100%;
  max-width: 100vw;
  margin: 2em auto;
}

.header-right {
  display: flex;
  align-items: center;
}
.header-icon {
  color: white;
  font-size: 2em;
  margin-right: 1.5rem;
  margin-left: 1.5rem;
}

.list-header {
  background-color: $normal-pink;
  background-image: radial-gradient(
      circle at top right,
      $normal-pink,
      transparent
    ),
    radial-gradient(circle at bottom left, $normal-blue, transparent);
  position: relative;
  border-top-left-radius: 5px;
  border-top-right-radius: 5px;
  height: 5vh;
}
.list-header-flex {
  display: flex;
  align-items: center;
  justify-content: space-between;
  height: 100%;
}
.list-title {
  color: white;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  margin: 0.3rem 0.3rem 0.3rem 0.5rem;
}
.category-name-in-list {
  font-family: "Work Sans", sans-serif;
  font-weight: lighter;
  margin: 0.5rem;
  padding: 0.3rem;
  //letter-spacing: 1.5px;
  //background-color: #faaca8;
  background-image: radial-gradient(
      circle at top right,
      $opacity-hotter-pink,
      transparent
    ),
    radial-gradient(circle at bottom left, $opacity-blue, transparent);
  border-radius: 5px;
}

#display-list ul:not(:first-child) .category-name-display {
  border-top: 2px solid;
  border-image-slice: 1;
  border-image-source: radial-gradient(
      circle at top right,
      $opacity-hotter-pink,
      transparent
    ),
    radial-gradient(circle at bottom left, $opacity-blue, transparent);
}

.category-name-in-homepage {
  background-image: radial-gradient(
      circle at top right,
      $opacity-blue,
      transparent
    ),
    radial-gradient(circle at bottom left, $opacity-hotter-pink, transparent);
}
.list-content {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  flex: 0 1 auto;
}

.list-items {
  max-height: 30vh;
}

table {
  width: 100%;
}

.inside-td {
  text-align: left;
  //padding: 5rem;
}
.scroll-items {
  //height: 50%;
  overflow-y: scroll;
  margin: 0.5rem;
}

.scroll-items::-webkit-scrollbar {
  width: 4px;
}

.scroll-items::-webkit-scrollbar-track {
  background: #f3f3f344;
  border-radius: 10px;
}

/* Handle */
.scroll-items::-webkit-scrollbar-thumb {
  background: $normal-blue;
  border-radius: 10px;
}

/* Handle on hover */
.scroll-items::-webkit-scrollbar-thumb:hover {
  background: $dark-purple;
  border-radius: 10px;
}

.list-button {
  font-size: 1em;
  width: 3.5rem;
}

.add-item-button {
  background-color: $normal-pink;
  background-image: radial-gradient(
      circle at bottom left,
      $normal-blue,
      transparent
    ),
    radial-gradient(circle at top right, $normal-pink, transparent);
  color: white;
  font-weight: 400;
  align-self: flex-end;
}

.add-item-button:hover {
  box-shadow: 0 0 20px $opacity-blue;
  transition: box-shadow 0.3s ease-in-out;
}

.loading-style {
  color: $normal-pink;
  font-size: 5em;
}

.header-button {
  width: 13em;
}
.list-container-title {
  background: -webkit-radial-gradient(
      circle at top left,
      $normal-blue,
      transparent
    ),
    radial-gradient(circle at bottom right, $normal-pink, transparent);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 20px rgba(206, 203, 212, 0.5);
  text-align: center;
}

.select-add-list {
  margin: 0 0 1rem 0;
}

.text-modal {
  color: white;
  margin-bottom: 0.5rem;
}

.modal-title {
  color: white;
  text-transform: uppercase;
}

.tag {
  border-radius: 5px;
  border: none;
  background: $opacity-white;
  color: $dark-red;
  font-family: "Roboto", sans-serif;
  font-weight: 300;
  font-size: small;
  padding: 0.5rem;
  margin: 0.5rem 0.5rem 1.5rem 0;
}

.tagInput {
  margin-top: 1rem;
}

.selected {
  max-width: 500px;
  display: flex;
  flex-flow: row wrap;
}

.tags {
  max-width: 100%;
  /* display: flex;
  flex-direction: row;
  flex-wrap: wrap;*/
}

.removeTag {
  color: red;
  margin: 0.2rem;
  font-size: 1.1em;
}

ul {
  list-style: none;
  padding-left: 0;
  margin: 0.3rem;
}

.item {
  margin: 0.2rem 0 0 0.2rem;
}
input[type="radio"] {
  border: 1px solid $normal-pink;
}

input[type="radio"]:checked:before {
  content: "";
  display: block;
  position: relative;
  top: 3px;
  left: 3px;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background: $normal-pink;
}

.MuiDialog-paper {
  width: 40vw;
}

.input-new-list,
.select-add-list,
.input-new-item {
  width: 100%;
}

.input-new-item {
  margin: 0;
}

.input-description {
  height: 7vh;
  margin-bottom: 1.5rem;
}

.menu-items {
  max-height: 50%;
}

.menu-lists {
  margin: 1rem;
  display: flex;
  flex-direction: column;
  height: 85vh;
}

.menu-lists-container {
  height: 100%;
  border-radius: 10px;
  max-width: 25vw;
}

.menu-list-name {
  margin: 0 0 0.3rem 0;
  max-width: 20vw;
}
.menu-list-name:hover {
  cursor: pointer;
}
.category-name-homepage {
  width: 75vw;
}
.list-name-homepage {
  color: $medium-purple;
  font-family: "Galada", cursive;
  letter-spacing: normal;
  padding-left: 1rem;
  font-size: 1.9em;
  margin-bottom: 0 !important;
}
.category-name-display {
  padding-top: 1rem;
  font-size: 1.5em;
}

.lds-heart {
  display: inline-block;
  position: relative;
  width: 80px;
  height: 80px;
  transform: rotate(45deg);
  transform-origin: 40px 40px;
}
.lds-heart div {
  top: 32px;
  left: 32px;
  position: absolute;
  width: 32px;
  height: 32px;
  background: $normal-blue;
  filter: drop-shadow(0 0 5px $normal-blue);
  animation: lds-heart 1.2s infinite cubic-bezier(0.215, 0.61, 0.355, 1);
}
.lds-heart div:after,
.lds-heart div:before {
  content: " ";
  position: absolute;
  display: block;
  width: 32px;
  height: 32px;
  background: $normal-blue;
  filter: drop-shadow(0 0 5px $normal-blue);
}
.lds-heart div:before {
  left: -24px;
  border-radius: 50% 0 0 50%;
}
.lds-heart div:after {
  top: -24px;
  border-radius: 50% 50% 0 0;
}
@keyframes lds-heart {
  0% {
    transform: scale(0.95);
  }
  5% {
    transform: scale(1.1);
  }
  39% {
    transform: scale(0.85);
  }
  45% {
    transform: scale(1);
  }
  60% {
    transform: scale(0.95);
  }
  100% {
    transform: scale(0.9);
  }
}

.select-manage-categories {
  margin: 0 1rem 0 1rem;
}

.MuiDialogContent-root {
  height: 100%;
}

.date-select {
  width: 100%;
}

.cute-underline {
  display: inline;
  --underline-width-scale: calc(
    var(--underline-width) / var(--underline-intrinsic-width)
  );
  padding: 0
    calc(
      var(--underline-padding-x) +
        calc(var(--underline-cap-width) * var(--underline-width-scale))
    );
  box-decoration-break: clone;
  background-repeat: no-repeat;
  background-position-x: calc(
      var(--underline-cap-width) * var(--underline-width-scale)
    ),
    0, 100%;
  background-position-y: calc(100% - var(--underline-offset-y) * -5);
  transform: skewY(20deg);
  background-size: calc(
        100% -
          calc(var(--underline-cap-width) * var(--underline-width-scale) * 2)
      )
      calc(var(--underline-width) * 1px),
    auto calc(var(--underline-width) * 1px),
    auto calc(var(--underline-width) * 1px);
}
