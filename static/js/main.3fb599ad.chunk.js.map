{"version":3,"sources":["Redux/lists/listsActions.js","Redux/user/userActions.js","Pages/Login.jsx","Redux/login/loginActions.js","Pages/Signup.jsx","Redux/signup/signupActions.js","Pages/Homepage/Utilities/ShareWithUsers.jsx","Pages/Homepage/Modals/CreateList.jsx","Pages/Homepage/Modals/ManageCategories.jsx","Pages/Homepage/Header.jsx","Pages/Homepage/MenuLists.jsx","Pages/Homepage/DisplayListContent.jsx","Pages/Homepage/Modals/AddShoppingItem.jsx","Pages/Homepage/Modals/AddTodoItem.jsx","Pages/Homepage/DisplayList.jsx","Pages/Homepage/HomepageContent.jsx","Pages/Homepage/Homepage.jsx","App.js","serviceWorker.js","Redux/login/loginReducer.js","Redux/signup/signupReducer.js","Redux/lists/listsReducer.js","Redux/user/userReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["loadShoppingLists","type","payload","id","name","items","description","isFav","category","isChecked","categories","label","getTodoLists","todos","dueDate","Date","sharedWith","addList","typeOfList","sharingWith","dispatch","getState","existingShoppingLists","obj","length","push","addShoppingList","lists","shoppingLists","existingTodos","addTodoList","todoLists","loadSingleListInHomepage","listId","isAListAlreadySelected","listDisplayed","Object","keys","constructor","clearDisplayedList","rightList","find","list","loadShoppingList","console","log","loadTodoList","addCategoryToDisplayedList","categoryName","newListDisplayed","user","getCategories","addNewCategory","allCategories","Login","_","handleSubmit","useForm","useDispatch","history","useHistory","useState","username","setUsername","password","setPassword","usernameRef","useRef","errorMessage","setErrorMessage","useEffect","current","focus","className","width","window","innerWidth","height","innerHeight","params","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","onSubmit","localStorage","setItem","axios","post","then","response","data","userId","catch","error","message","login","getItem","toLocaleLowerCase","placeholder","ref","onChange","event","target","style","to","Signup","errorUsername","setErrorUsername","email","setEmail","errorEmail","setErrorEmail","errorPassword","setErrorPassword","clear","test","String","toLowerCase","signup","onClick","e","preventDefault","goBack","ShareWithUsers","props","existingUsers","useSelector","state","users","delimiters","userTags","setUserTags","errorUserDoesntExist","setErrorUser","ReactTags","tags","handleDelete","i","filter","tag","index","handleAddition","includes","text","allowUnique","classNames","tagInputField","tagInput","remove","selected","allowDragDrop","inputFieldPosition","autofocus","SelectListType","changeSelected","options","styles","menuPortal","base","zIndex","isSearchable","menuPortalTarget","document","body","isClearable","SelectCategories","categoriesFromRedux","selectedCategories","setSelectedCategories","reduxCategories","map","cat","isMulti","CreateList","createShoppingList","onClose","rest","existingShopppingListsNames","existingTodoListsNames","listName","setListName","changeTypeOfList","setCategories","setSharingWith","errorListName","setErrorListName","errorListNameLength","setErrorListNameLength","errorTypeOfList","setErrorTypeOfList","listNameRef","useCallback","node","Dialog","formData","DialogTitle","DialogContent","marginBottom","position","Index","display","justifyContent","errors","alreadyThere","getElementById","checkIfThereAreErrors","EditCategory","selectedCategory","setSelectedCategory","newName","setNewName","store","categoryNames","errorNameModifiedCategory","setErrorModifiedCategory","categoriesInsideList","editedCategoryName","idToEdit","errorModifiedCategory","margin","DeleteCategory","ManageCategories","newCategory","setNewCategory","errorCategoryAlreadyExists","setErrorCategoryAlreadyExists","newEditedName","setNewEditedName","setIdToEdit","idToDelete","setIdToDelete","existingCategories","forEach","filteredCategories","deleteCategory","Accordion","flexDirection","Toggle","eventKey","Collapse","Header","useModal","open","in","onExited","hideCreateList","showCreateList","hideManageCategories","showManageCategories","LogoutOutlined","ShoppingLists","showContent","setShowContent","cursor","ul","layout","initial","animate","exit","transition","key","TodoLists","MenuLists","DisplayListContent","loadTheItems","categoryId","item","checked","itemId","HeartTwoTone","twoToneColor","minWidth","getDate","getMonth","getFullYear","getHours","getMinutes","textAlign","shoppingList","deleteItem","categoriesInListWithDuplicates","uniqueSet","Set","removeDuplicatesFromCategories","names","getTheNamesOfTheCategories","Fragment","setError","userCategoriesLength","__isNew__","AddShoppingItem","register","itemName","setItemName","errorItemName","setErrorItemName","errorItemNameLength","setErrorItemLength","setFav","itemNameRef","newItem","newShoppingList","addShoppingItem","alignItems","marginLeft","fontSize","required","AddTodoItem","startDate","setStartDate","dateAndTime","newTask","todoDisplayed","newTodoList","addTask","minLength","maxLength","showTimeSelect","dateFormat","withPortal","placeholderText","DisplayListHeader","hideAddShoppingItem","showAddShoppingItem","hideAddSTodoItem","showAddTodoItem","listType","DisplayList","selectedList","ListNotSelected","color","textShadow","HomepageContent","Homepage","maxHeight","maxWidth","App","basename","process","exact","path","Boolean","location","hostname","match","initialState","loginReducer","action","signupReducer","listsReducer","userReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","rootComponent","TransitionGroup","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3fb599ad.chunk.js","sourcesContent":["export const LOAD_LISTS = \"LOAD_LISTS\";\nexport const ADD_SHOPPING_LIST = \"CREATE_SHOPPING_LIST\";\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODOLIST = \"ADD_TODOLIST\";\nexport const CLEAN_LISTS = \"CLEAN_LISTS\";\nexport const CHANGE_CHECK_SHOPPING = \"CHANGE_CHECK_SHOPPING\";\nexport const CHANGE_CHECK_TODO = \"CHANGE_CHECK_TODO\";\nexport const GET_USERS = \"GET_USERS\";\nexport const LOAD_SHOPPING_LIST_IN_HOMEPAGE = \"LOAD_SHOPPING_LIST_IN_HOMEPAGE\";\nexport const LOAD_TODO_LIST_IN_HOMEPAGE = \"LOAD_TODO_LIST_IN_HOMEPAGE\";\nexport const CLEAR_DISPLAYED_LIST = \"CLEAR_DISPLAYED_LIST\";\nexport const ADD_ITEM_TO_SHOPPING_LIST = \"ADD_ITEM_TO_SHOPPING_LIST\";\nexport const ADD_NEW_CATEGORY_TO_LIST_DISPLAYED =\n  \"ADD_NEW_CATEGORY_TO_LIST_DISPLAYED\";\nexport const CHECK_ITEM = \"CHECK_ITEM\";\nexport const DELETE_ITEM = \"DELETE ITEM\";\nexport const ADD_TASK = \"ADD_TASK\";\n\nexport const loadShoppingLists = () => {\n  const lists = [\n    {\n      id: 0,\n      name: \"Cibo da comprare\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: true,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"Clothes\" },\n        { id: 2, label: \"Stuff\" },\n      ],\n    },\n    {\n      id: 1,\n      name: \"Seconda lista\",\n      items: [],\n      categories: [{ id: 0, label: \"Food\" }],\n    },\n    {\n      id: 2,\n      name: \"AAA\",\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"Clothes\" },\n        { id: 2, label: \"Stuff\" },\n      ],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: \"BBB\",\n      categories: [{ id: 0, label: \"Food\" }],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 4,\n      name: \"CCC\",\n      categories: [{ id: 0, label: \"Food\" }],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: \"DDD\",\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"Clothes\" },\n        { id: 2, label: \"Stuff\" },\n      ],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n  ];\n\n  return {\n    type: LOAD_LISTS,\n    payload: [...lists],\n  };\n};\n\nexport const getTodoLists = () => {\n  const todos = [\n    {\n      id: 0,\n      name: \"todo list 1\",\n      items: [\n        {\n          name: \"nome 1\",\n          isFav: true,\n          description: \"descrizione\",\n          dueDate: new Date(2020, 8, 27, 10, 33, 30, 0),\n          sharedWith: [\"prokkius\"],\n          category: 0,\n        },\n      ],\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"AAA\" },\n      ],\n    },\n    {\n      id: 1,\n      name: \"todo list 2\",\n      items: [],\n      categories: [{ id: 0, label: \"Food\" }],\n    },\n  ];\n  return {\n    type: GET_TODOS,\n    payload: [...todos],\n  };\n};\n\nconst addTodoList = (existingTodos, name, categories, sharingWith) => {\n  const obj = {\n    id: existingTodos.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingTodos.push(obj);\n  return {\n    type: ADD_TODOLIST,\n    payload: [...existingTodos],\n  };\n};\n\nconst addShoppingList = (\n  existingShoppingLists,\n  name,\n  categories,\n  sharingWith\n) => {\n  const obj = {\n    id: existingShoppingLists.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingShoppingLists.push(obj);\n\n  return {\n    type: ADD_SHOPPING_LIST,\n    payload: [...existingShoppingLists],\n  };\n};\n\n/**\n * It invokes the right function to add a new list according to the type of the list that is being added (@see addShoppingList and @see addTodoList)\n * @param {string} name name of the list\n * @param {string} typeOfList either shopping or todo\n * @param {[number]} categories array containing the ids of the categories selected by the user\n * @param {[]} sharingWith array containing the users the list is shared with\n */\n\nexport const addList = (name, typeOfList, categories, sharingWith) => {\n  return (dispatch, getState) => {\n    if (typeOfList === \"shopping\") {\n      const existingLists = [...getState().lists.shoppingLists];\n      dispatch(addShoppingList(existingLists, name, categories, sharingWith));\n    } else if (typeOfList === \"todo\") {\n      const existingLists = [...getState().lists.todoLists];\n      dispatch(addTodoList(existingLists, name, categories, sharingWith));\n    }\n  };\n};\n\nexport const cleanLists = () => {\n  return {\n    type: CLEAN_LISTS,\n  };\n};\n\nexport const checkItem = (itemId) => {\n  return (dispatch, getState) => {\n    // here there will also be an API call\n    const newListDisplayed = { ...getState().lists.listDisplayed };\n    newListDisplayed.items.forEach((item) => {\n      if (item.id === itemId) {\n        item.isChecked = !item.isChecked;\n      }\n    });\n    dispatch({\n      type: CHECK_ITEM,\n      payload: { ...newListDisplayed },\n    });\n  };\n};\n\nexport const getUsers = () => {\n  const users = [\"boba\", \"banana\", \"prokkius\"];\n  return {\n    type: GET_USERS,\n    payload: [...users],\n  };\n};\n\n/**\n * Loads the right shopping list in the store so that the user can see it on their homnepace\n * @param {number}  listId id of the list\n * @param {Array} shoppingLists array of existing shopping lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadShoppingList = (listId, shoppingLists) => {\n  const rightList = shoppingLists.find((list) => list.id === listId);\n  rightList.type = \"shopping\";\n  if (rightList) {\n    return {\n      type: LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n/**\n * Loads the right todo list in the store so that the user can see it on their homepage\n * @param {number} listId id of the list\n * @param {Array} todoLists array of existing todo lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadTodoList = (listId, todoLists) => {\n  const rightList = todoLists.find((list) => list.id === listId);\n  rightList.type = \"todo\";\n  console.log(rightList);\n  if (rightList) {\n    return {\n      type: LOAD_TODO_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n\n/**\n * Loads a specific list in the store after the user clicked it from the sidebar.\n * This function is invoked after the user has clicked one of the lists on the homepage's sidebar. To load the correct list,\n * it invokes the right function: @see loadShoppingList() @see loadTodoList\n * @param {number} listId id of the list the user has chosen to display\n * @param {string} type type of list, whether it'' a shopping or a todo list\n */\nexport const loadSingleListInHomepage = (listId, type) => {\n  return (dispatch, getState) => {\n    // if listDisplayed is empty, we don't need to clean it\n    const isAListAlreadySelected = { ...getState().lists.listDisplayed };\n    if (\n      Object.keys(isAListAlreadySelected).length !== 0 &&\n      isAListAlreadySelected.constructor === Object\n    ) {\n      dispatch(clearDisplayedList());\n    }\n    if (type === \"shopping\") {\n      const shoppingLists = [...getState().lists.shoppingLists];\n      dispatch(loadShoppingList(listId, shoppingLists));\n    }\n    if (type === \"todo\") {\n      const todoLists = [...getState().lists.todoLists];\n      dispatch(loadTodoList(listId, todoLists));\n    }\n  };\n};\n\nconst clearDisplayedList = () => {\n  return {\n    type: CLEAR_DISPLAYED_LIST,\n  };\n};\n/**\n * Add an item to a shopping list.\n * @param {number} id list id\n * @param {string} name name of the item\n * @param {string} description description of the item\n * @param {boolean} isFav is favourite\n * @param {number }category\n */\nexport const addShoppingItem = (id, name, description, isFav, category) => {\n  const newItem = {\n    name,\n    description,\n    isFav,\n    category,\n  };\n  return (dispatch, getState) => {\n    const shoppingList = [...getState().lists.shoppingLists];\n    const listDisplayed = { ...getState().lists.listDisplayed };\n    listDisplayed.items = [...listDisplayed.items, newItem];\n    shoppingList.forEach((list) => {\n      if (list.id === id) {\n        list.items = [...list.items, newItem];\n      }\n    });\n    dispatch({\n      type: ADD_ITEM_TO_SHOPPING_LIST,\n      newShoppingList: [...shoppingList],\n      newListDisplayed: { ...listDisplayed },\n    });\n  };\n};\n\nexport const addCategoryToDisplayedList = (categoryName) => {\n  return (dispatch, getState) => {\n    const newListDisplayed = { ...getState().lists.listDisplayed };\n    if (getState().lists.listDisplayed.categories) {\n      newListDisplayed.categories = [\n        ...getState().lists.listDisplayed.categories,\n        { id: getState().user.categories.length, label: categoryName },\n      ];\n    } else {\n      newListDisplayed.categories = [\n        { id: getState().user.categories.length, label: categoryName },\n      ];\n    }\n    dispatch({\n      type: ADD_NEW_CATEGORY_TO_LIST_DISPLAYED,\n      newListDisplayed: { ...newListDisplayed },\n    });\n  };\n};\n\n/**\n * Deletes an item from a shopping or a to do list, given the item id\n * @param {number} itemId\n * @param {string} typeOfList can be either \"shopping\" or \"todo\"\n * @returns {function(...[*]=)}\n */\n\nexport const deleteItem = (itemId, typeOfList) => {\n  return (dispatch, getState) => {\n    const listId = getState().lists.listDisplayed.id;\n    var list = [];\n    if (typeOfList === \"shopping\") {\n      getState().lists.shoppingLists.forEach((shoppingList) => {\n        if (shoppingList.id === listId) {\n          list = shoppingList;\n        }\n      });\n\n      console.log(list);\n    }\n  };\n};\n\n/**\n * Adds a task to a to do list\n * @param {string} name of the task\n * @param {boolean} isFav if the task is favourite or not\n * @param {string} description of the task\n * @param {number} category\n * @param {Date} dateAndTime\n * @param {String[]}sharedWith\n */\n\nexport const addTask = (\n  name,\n  isFav,\n  description,\n  category,\n  dateAndTime,\n  sharedWith\n) => {\n  const newTask = {\n    name,\n    isFav,\n    description,\n    category,\n    dueDate: dateAndTime,\n    sharedWith,\n  };\n  return (dispatch, getState) => {\n    const todoDisplayed = { ...getState().lists.listDisplayed };\n    const todoLists = [...getState().lists.todoLists];\n    todoDisplayed.items = [...todoDisplayed.items, newTask];\n    todoLists.forEach((list) => {\n      if (list.id === todoDisplayed.id) {\n        list.items = [...list.items, newTask];\n      }\n    });\n    dispatch({\n      type: ADD_TASK,\n      newTodoList: [...todoLists],\n      newListDisplayed: { ...todoDisplayed },\n    });\n  };\n};\n","export const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\";\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\n\nexport const getCategories = () => {\n  const categories = [\n    { id: 0, name: \"Food\" },\n    { id: 1, name: \"Clothes\" },\n    { id: 2, name: \"Stuff\" },\n    { id: 3, name: \"AAA\" },\n  ];\n  return {\n    type: GET_CATEGORIES,\n    payload: [...categories],\n  };\n};\n\n/**\n * Adds new category to the user and also associates it to the list currently on display\n * @param {string} categoryName name of the new category\n * @returns {function(*): {payload: *[], type: string}}\n */\n\nexport const addNewCategory = (categoryName) => {\n  return (dispatch, getState) => {\n    /**\n     * adding to all catergories in redux is useless.\n     * I'll replace this with an api call to add this in the db\n     */\n    const allCategories = [\n      ...getState().user.categories,\n      { id: getState().user.categories.length, name: categoryName },\n    ];\n    //dispatch(addCategoryToDisplayedList(categoryName));\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: [...allCategories],\n    });\n  };\n};\n\n/**\n * Edits the name of an existing category\n * @param {number} id id of the category to edit\n * @param {string} newName new name of the category\n * @returns {function(...[*]=)}\n */\nexport const editCategory = (id, newName) => {\n  return (dispatch, getState) => {\n    const existingCategories = [...getState().user.categories];\n    existingCategories.forEach((cat) => {\n      if (cat.id === id) {\n        cat.name = newName;\n      }\n    });\n    dispatch({\n      type: EDIT_CATEGORY,\n      payload: [...existingCategories],\n    });\n  };\n};\n\n/**\n * Deletes an existing category\n * @param {number} id id of the category to delete\n * @returns {function(...[*]=)}\n */\n\nexport const deleteCategory = (id) => {\n  return (dispatch, getState) => {\n    const existingCategories = [...getState().user.categories];\n    const filteredCategories = existingCategories.filter(\n      (cat) => cat.id !== id\n    );\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: [...filteredCategories],\n    });\n  };\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = (_: void): React$Element<*> => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const usernameRef = useRef(null);\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    usernameRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (username && password) setErrorMessage(null);\n  }, [username, password]);\n\n  const onSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    if (username && password && !errorMessage) {\n      dispatch(login(username, password));\n      history.push(\n        `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n      );\n    } else {\n      setErrorMessage(\"Please insert username and password\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">Hello{username ? `, ${username}` : null}</h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={usernameRef}\n            className=\"input\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            className=\"input\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n          />\n          <p className=\"error-message\">{errorMessage}</p>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          />\n          <Link to=\"/signup\">\n            <button className=\"button\" style={{ width: \"5.5rem\" }}>\n              Sign up\n            </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nexport const LOGIN = \"LOGIN\";\n\nconst url = \"http://localhost:9487\";\n\nexport const login = (username, password) => {\n  // chiamata API per il login\n  localStorage.setItem(\"username\", username);\n  return (dispatch) => {\n    const obj = {\n      username,\n      password,\n    };\n    axios\n      .post(`${url}/users/login`, obj)\n      .then((response) => {\n        if (response) {\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"userId\", response.data.userId);\n        }\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n    return {\n      type: LOGIN,\n      payload: username,\n    };\n  };\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = (_: void): React$Element<*> => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(null);\n  const [errorUsername, setErrorUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [errorEmail, setErrorEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [errorPassword, setErrorPassword] = useState(null);\n  const usernameRef = useRef();\n\n  useEffect(() => {\n    localStorage.clear();\n    usernameRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (email) {\n      const regex = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!regex.test(String(email).toLowerCase())) {\n        setErrorEmail(\"Email format not valid\");\n      } else {\n        setErrorEmail(null);\n      }\n    }\n  }, [email]);\n  useEffect(() => {\n    if (username) {\n      if (username.length < 3)\n        setErrorUsername(\"The chosen username is too short\");\n      if (username.length > 32)\n        setErrorUsername(\"The chosen username is too long\");\n      if (username.length >= 3 && username.length <= 32) setErrorUsername(null);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (password) {\n      if (password.length < 3)\n        setErrorPassword(\"The chosen password is too short\");\n      if (password.length > 32)\n        setErrorPassword(\"The chosen password is too long\");\n      if (password.length >= 3 && password.length <= 32) setErrorPassword(null);\n    }\n  }, [password]);\n\n  const onSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    dispatch(signup(username, email, password));\n    history.push(\n      `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n    );\n  };\n  const history = useHistory();\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">Welcome{username ? `, ${username}` : null}</h1>\n        <form\n          onSubmit={\n            !errorUsername &&\n            !errorEmail &&\n            !errorPassword &&\n            username &&\n            password &&\n            email\n              ? handleSubmit(onSubmit)\n              : null\n          }\n          className=\"form\"\n        >\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={usernameRef}\n            className=\"input\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <p className=\"error-message\">{errorUsername}</p>\n          <input\n            name=\"email\"\n            placeholder=\"Insert your email\"\n            type=\"email\"\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n            className=\"input\"\n          />\n          <p className=\"error-message\">{errorEmail}</p>\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n              console.log(password);\n            }}\n            className=\"input\"\n          />\n          <p className=\"error-message\">{errorPassword}</p>\n\n          <input\n            type=\"submit\"\n            value=\"Confirm\"\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          />\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              history.goBack();\n            }}\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          >\n            Go back\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","export const SIGNUP = \"SIGNUP\";\n\n/**\n * Esegue la chiamata API per registrare un utente al db.\n * @param {string} name nome dell'utente\n * @param {string} email email dell'utente\n * @param {string} username username dell'utente\n * @param {string} password password dell'utente\n */\nexport const signup = (name, email, username, password) => {\n  /**\n   * chiamate api per registrare l'utente\n   * .then( (response) => {\n   *   localStorage.setItem('token', response.data.token);\n   *   localStorage.setItem('username', response.data.username)\n   * })\n   */\n  localStorage.setItem(\"username\", username);\n  return {\n    type: SIGNUP,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../../../Redux\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nconst ShareWithUsers = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n  const existingUsers = useSelector((state) => state.lists.users);\n  const keyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  const delimiters = [keyCodes.comma, keyCodes.enter];\n  // I have the tags in userTags\n  const [userTags, setUserTags] = useState([]);\n\n  //error if user does not exist\n  const [errorUserDoesntExist, setErrorUser] = useState(null);\n\n  const { users } = props;\n  useEffect(() => {\n    users(userTags);\n    setErrorUser(null);\n  }, [userTags, users]);\n\n  const handleDelete = (i) => {\n    const tags = userTags.filter((tag, index) => index !== i);\n    setUserTags([...tags]);\n  };\n\n  const handleAddition = (tag) => {\n    if (existingUsers.includes(tag.text))\n      setUserTags((userTags) => [...userTags, tag]);\n    else setErrorUser(`The user ${tag.text} does not exist`);\n  };\n\n  return (\n    <div>\n      {/*<p className=\"text-modal\">Share with</p>*/}\n      <span>\n        <ReactTags\n          tags={userTags}\n          handleDelete={handleDelete}\n          handleAddition={handleAddition}\n          delimiters={delimiters}\n          allowUnique={true}\n          classNames={{\n            tagInputField: \"input input-new-list\",\n            tag: \"tag\",\n            tagInput: \"tagInput\",\n            tags: \"tags\",\n            remove: \"removeTag\",\n            selected: \"selected\",\n          }}\n          allowDragDrop={false}\n          inputFieldPosition=\"bottom\"\n          placeholder={\n            props.type === \"todo\" ? \"Share task with...\" : \"Share list with...\"\n          }\n          autofocus={false}\n        />\n      </span>\n      {errorUserDoesntExist ? (\n        <p className=\"error-message\">{errorUserDoesntExist}</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ShareWithUsers;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addList } from \"../../../Redux\";\n\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst SelectListType = (props) => {\n  const [selected, changeSelected] = useState(null);\n  const listTypes = [\n    { value: \"shopping\", label: \"Shopping list\" },\n    { value: \"todo\", label: \"Todo list\" },\n  ];\n\n  /**\n   * Callback to pass data from the child component SelectListType to parent component CreateList!\n   * I used the useEffect hook that gets called every time *selected* changes, and it calls the type function inside the props.\n   */\n\n  const { type } = props;\n  useEffect(() => {\n    type(selected);\n  }, [selected, type]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">What kind of list is this?</p>\n      <Select\n        options={listTypes}\n        onChange={(event) => {\n          if (event) {\n            changeSelected(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />\n    </div>\n  );\n};\n\nconst SelectCategories = (props) => {\n  const categoriesFromRedux = useSelector((state) => state.user.categories);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  //const [categories, selectCategories] = useState([...categoriesFromRedux]);\n  const reduxCategories = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.name };\n  });\n  /*useEffect(() => {\n    console.log(selectedCategories);\n\t}, [selectedCategories]);\n\n\t* inside selectedCategories there are the ids of the categories that the user selected\n\t*/\n\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <Select\n        options={reduxCategories}\n        isMulti\n        onChange={(event) => {\n          if (event && event.length !== 0) {\n            setSelectedCategories((selectedCategories) => [\n              ...selectedCategories,\n              {\n                id: event[event.length - 1].value,\n                label: event[event.length - 1].label,\n              },\n            ]);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />{\" \"}\n    </div>\n  );\n};\n\nconst CreateList = ({ createShoppingList, onClose, ...rest }) => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const existingShopppingListsNames = useSelector((state) =>\n    state.lists.shoppingLists.map((list) => list.name)\n  );\n  const existingTodoListsNames = useSelector((state) =>\n    state.lists.todoLists.map((list) => list.name)\n  );\n\n  const [listName, setListName] = useState(null);\n  // what kind of list is the user adding\n  const [typeOfList, changeTypeOfList] = useState(null);\n  //which categories\n  const [categories, setCategories] = useState([]);\n  // who is this shared with\n  const [sharingWith, setSharingWith] = useState([]);\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error: name length not right\n  const [errorListNameLength, setErrorListNameLength] = useState(null);\n  // error a category wasn't selected\n  const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const listNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Select at least one category\");\n  }, [categories, typeOfList]);\n\n  useEffect(() => {\n    if (listName === \"\") {\n      setErrorListName(\"Please write a name\");\n    } else if (listName) {\n      if (listName.length < 3) {\n        setErrorListNameLength(\"List name is too short\");\n      }\n      if (listName.length > 32) {\n        setErrorListNameLength(\"List name is too long\");\n      }\n      if (listName.length <= 32 && listName.length >= 3) {\n        setErrorListNameLength(null);\n      }\n    }\n  }, [listName]);\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n\n    dispatch(addList(listName, typeOfList, categories, sharingWith));\n  };\n\n  /**\n   * Called when the user clicks the button to confirm they want to add a new list.\n   * Checks if:\n   * 1. the user selected the type of list\n   * 2. a list with that name already exists\n   * @returns {boolean}\n   */\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (!typeOfList) {\n      setErrorTypeOfList(\"Select a type of list to add\");\n      errors = true;\n    }\n    if (typeOfList === \"shopping\") {\n      const alreadyThere = existingShopppingListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A shopping list with this name already exists\");\n        errors = true;\n      } else if (!alreadyThere) {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    if (typeOfList === \"todo\") {\n      const alreadyThere = existingTodoListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A todo list with this name already exists\");\n        errors = true;\n      } else {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form\n          onSubmit={\n            !errorListName && !errorTypeOfList && !errorListNameLength\n              ? handleSubmit(onSubmit)\n              : null\n          }\n        >\n          <DialogTitle className=\"modal-title\">\n            <strong>Create a new list</strong>\n          </DialogTitle>\n          <DialogContent>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Insert the name of the new todo list\"\n              ref={listNameRef}\n              className=\"input input-new-list\"\n              onChange={(event) => setListName(event.target.value)}\n            />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListNameLength}\n            </p>\n            <SelectListType type={changeTypeOfList} />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorTypeOfList}\n            </p>\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <ShareWithUsers users={setSharingWith} />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new list\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error || errorListNameLength || errorListName)\n                    e.preventDefault();\n                  else onClose();\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default CreateList;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addNewCategory, deleteCategory, editCategory } from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nconst EditCategory = (props) => {\n  // selectedCategory contains the id of the category selected\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [newName, setNewName] = useState(null);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.user.categories,\n  ]);\n  const categoryNames = useSelector((store) =>\n    store.user.categories.map((category) => category.name)\n  );\n  const [errorNameModifiedCategory, setErrorModifiedCategory] = useState(null);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.name };\n  });\n  const {\n    category,\n    editedCategoryName,\n    idToEdit,\n    errorModifiedCategory,\n  } = props;\n  useEffect(() => {\n    category(selectedCategory);\n    editedCategoryName(newName);\n    errorModifiedCategory(errorNameModifiedCategory);\n  }, [\n    selectedCategory,\n    category,\n    editedCategoryName,\n    idToEdit,\n    newName,\n    errorModifiedCategory,\n    errorNameModifiedCategory,\n  ]);\n\n  return (\n    <div className=\"select-manage-categories\">\n      <Select\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            setSelectedCategory(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list \"\n        placeholder=\"Select the category you want to edit\"\n      />\n      <input\n        id=\"newName\"\n        type=\"text\"\n        name=\"newName\"\n        placeholder=\"Insert the new name\"\n        className=\"input input-new-item\"\n        style={{ margin: \"0\" }}\n        onChange={(event) => {\n          if (categoryNames.includes(event.target.value)) {\n            setErrorModifiedCategory(\n              \"A category with that name already exists\"\n            );\n          } else {\n            setErrorModifiedCategory(null);\n            setNewName(event.target.value);\n          }\n        }}\n      />\n      <p className=\"error-message\">{errorNameModifiedCategory}</p>\n    </div>\n  );\n};\n\nconst DeleteCategory = (props) => {\n  // selectedCategory contains the id of the category selected\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.user.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.name };\n  });\n  const { category } = props;\n  useEffect(() => {\n    category(selectedCategory);\n  }, [selectedCategory, category]);\n\n  return (\n    <Select\n      options={categoriesInsideList}\n      onChange={(event) => {\n        if (event) {\n          setSelectedCategory(event.value);\n        }\n      }}\n      styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n      isSearchable\n      isClearable\n      menuPortalTarget={document.body}\n      className=\"select-add-list\"\n      placeholder=\"Select the category you want to delete\"\n    />\n  );\n};\n\nconst ManageCategories = ({ createShoppingList, onClose, ...rest }) => {\n  const { handleSubmit } = useForm();\n\n  const [newCategory, setNewCategory] = useState(null);\n  const [errorCategoryAlreadyExists, setErrorCategoryAlreadyExists] = useState(\n    null\n  );\n  //edit the category name\n  const [newEditedName, setNewEditedName] = useState(null);\n  const [idToEdit, setIdToEdit] = useState(null);\n  const [errorModifiedCategory, setErrorModifiedCategory] = useState(null);\n  // delete a category\n  const [idToDelete, setIdToDelete] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const categoryNames = useSelector((store) =>\n    store.user.categories.map((cat) => cat.name)\n  );\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    if (newCategory) {\n      dispatch(addNewCategory(newCategory));\n    }\n    if (idToEdit) {\n      dispatch(editCategory(idToEdit, newEditedName));\n    }\n    if (idToDelete) {\n      dispatch(deleteCategory(idToDelete));\n    }\n  };\n\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form\n          onSubmit={\n            errorCategoryAlreadyExists || errorModifiedCategory\n              ? null\n              : handleSubmit(onSubmit)\n          }\n        >\n          <DialogTitle className=\"modal-title\">\n            <strong>Manage the categories</strong>\n          </DialogTitle>\n          <DialogContent>\n            <Accordion\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n              }}\n            >\n              <Accordion.Toggle eventKey=\"0\" className=\"button header-button \">\n                Add a new category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <div className=\"select-manage-categories\">\n                  <input\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Insert the name of the new category\"\n                    className=\"input input-new-item\"\n                    style={{ margin: \"0\" }}\n                    onChange={(event) => {\n                      if (categoryNames.includes(event.target.value)) {\n                        setErrorCategoryAlreadyExists(\n                          \"A category with that name already exists!\"\n                        );\n                      } else {\n                        setErrorCategoryAlreadyExists(null);\n                        setNewCategory(event.target.value);\n                      }\n                    }}\n                  />\n                  <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n                </div>\n              </Accordion.Collapse>\n              <Accordion.Toggle eventKey=\"1\" className=\"button header-button \">\n                Edit an existing category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <div>\n                  {/*category contains the id of the category i'm editing*/}\n                  <EditCategory\n                    category={setIdToEdit}\n                    editedCategoryName={setNewEditedName}\n                    errorModifiedCategory={setErrorModifiedCategory}\n                  />\n                </div>\n              </Accordion.Collapse>\n              <Accordion.Toggle eventKey=\"2\" className=\"button header-button \">\n                Delete an existing category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <div className=\"select-manage-categories\">\n                  <DeleteCategory category={setIdToDelete} />\n                </div>\n              </Accordion.Collapse>\n            </Accordion>\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Confirm\"\n                onClick={(e) => {\n                  if (!errorCategoryAlreadyExists && !errorModifiedCategory)\n                    onClose();\n                  else e.preventDefault();\n                  //}\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ManageCategories;\n","import React from \"react\";\n\nimport Particles from \"react-particles-js\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport { useModal } from \"react-modal-hook\";\nimport CreateList from \"./Modals/CreateList\";\nimport ManageCategories from \"./Modals/ManageCategories\";\n\nconst Header = () => {\n  const history = useHistory();\n  const [\n    showCreateList,\n    hideCreateList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateList open={open} onExited={onExited} onClose={hideCreateList} />\n  ));\n  const [\n    showManageCategories,\n    hideManageCategories,\n  ] = useModal(({ in: open, onExited }) => (\n    <ManageCategories\n      open={open}\n      onExited={onExited}\n      onClose={hideManageCategories}\n    />\n  ));\n  /*const [\n    showCreateShoppingList,\n    hideCreateShoppingList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateShoppingList\n      open={open}\n      onExited={onExited}\n      onClose={hideCreateShoppingList}\n    />\n  ));*/\n\n  return (\n    <div className=\"header-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`10vh`}\n        params={{\n          particles: {\n            number: {\n              value: 60,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 4,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"content-header-container\">\n        <header>\n          <span>\n            <h1 className=\"hello-profile\">\n              Hello, {localStorage.getItem(\"username\")}\n            </h1>\n          </span>\n          <span className=\"header-right\">\n            <button\n              className=\"button header-button\"\n              onClick={showManageCategories}\n            >\n              Manage the categories\n            </button>\n            <button className=\"button header-button\" onClick={showCreateList}>\n              Create a new list\n            </button>\n\n            <LogoutOutlined\n              className=\"header-icon\"\n              onClick={() => {\n                localStorage.clear();\n                history.push(\"/\");\n              }}\n            />\n          </span>\n        </header>\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { loadSingleListInHomepage } from \"../../Redux\";\n//import Select from \"react-select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nconst ShoppingLists = () => {\n  const shoppingLists = useSelector((state) => state.lists.shoppingLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        Shopping lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {shoppingLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      dispatch(loadSingleListInHomepage(list.id, \"shopping\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst TodoLists = () => {\n  const todoLists = useSelector((state) => state.lists.todoLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        To do lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {todoLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      dispatch(loadSingleListInHomepage(list.id, \"todo\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst MenuLists = () => {\n  return (\n    <div className=\"menu-lists\">\n      <div className=\"menu-lists-container\">\n        <AnimateSharedLayout>\n          <motion.ul layout initial={{ height: \"auto\" }}>\n            <ShoppingLists />\n            <TodoLists />\n          </motion.ul>\n        </AnimateSharedLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuLists;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport { checkItem, deleteItem } from \"../../Redux\";\nimport { useDispatch } from \"react-redux\";\n\nconst DisplayListContent = (props) => {\n  const allCategories = useSelector((store) => store.user.categories);\n  const dispatch = useDispatch();\n  const items = useSelector((store) => [...store.lists.listDisplayed.items]);\n  const typeOfList = useSelector((store) => store.lists.listDisplayed.type);\n  /**\n   * Removes any duplicates from the category array I get from the items inside the list\n   * @returns {number[]} contains the ids of the categories that are present inside this list\n   */\n  const removeDuplicatesFromCategories = () => {\n    const categoriesInListWithDuplicates = props.list.items.map(\n      (item) => item.category\n    );\n    const uniqueSet = new Set(categoriesInListWithDuplicates);\n    return [...uniqueSet];\n  };\n\n  /**\n   * Returns the names of the categories contained in the specific list associated with their id.\n   * It also uses the generic list of categories to find the names.\n   * @param {number[]} categories array containing the ids of the categories associated with the specific list\n   * @returns {string[]}\n   */\n\n  const getTheNamesOfTheCategories = (categories) => {\n    let names = [];\n    categories.forEach((category) => {\n      return allCategories.map((cat) => {\n        if (cat.id === category) {\n          return (names = [...names, { name: cat.name, id: cat.id }]);\n        }\n      });\n    });\n    return names;\n  };\n\n  const loadTheItems = (categoryId) => {\n    return items.map((item, index) =>\n      item.category === categoryId ? (\n        <tr key={index} className=\"single-item-in-list\">\n          <td style={{ width: \"1rem\" }}>\n            <input\n              type=\"checkbox\"\n              className=\"inside-td\"\n              checked={item.isChecked}\n              onChange={() => {\n                dispatch(checkItem(item.id));\n              }}\n            />\n          </td>\n          <td>\n            <span className=\"inside-td\">{item.name}</span>\n          </td>\n          <td>{item.isFav ? <HeartTwoTone twoToneColor=\"#faaca8\" /> : null}</td>\n          {typeOfList === \"todo\" ? (\n            <td style={{ minWidth: \"3rem\" }}>\n              <span className=\"inside-td\" style={{ width: \"100%\" }}>\n                {item.dueDate.getDate()}-{item.dueDate.getMonth() + 1}-\n                {item.dueDate.getFullYear()} {item.dueDate.getHours()}:\n                {item.dueDate.getMinutes()}\n              </span>\n            </td>\n          ) : null}\n          <td style={{ width: \"3rem\", textAlign: \"center\" }}>\n            <button className=\"button button-list button-inside-td\">\n              Edit item\n            </button>\n          </td>\n          <td style={{ width: \"3rem\" }}>\n            <button\n              className=\"button button-list button-inside-td delete-button\"\n              onClick={() => dispatch(deleteItem(item.id, typeOfList))}\n            >\n              Delete item\n            </button>\n          </td>\n        </tr>\n      ) : null\n    );\n  };\n\n  const categories = removeDuplicatesFromCategories(props.list);\n  const categoryNames = [...getTheNamesOfTheCategories(categories)];\n  return (\n    <div id=\"display-list\">\n      <table>\n        {categoryNames.map((cat, index) => (\n          <React.Fragment key={index}>\n            <thead className=\"list-name-homepage category-name-display\">\n              {cat.name}\n            </thead>\n            <tbody>{loadTheItems(cat.id)}</tbody>\n          </React.Fragment>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayListContent;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport {\n  addShoppingItem,\n  addNewCategory,\n  addCategoryToDisplayedList,\n} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport CreatableSelect from \"react-select/creatable\";\n\nconst SelectCategories = (props) => {\n  const [selectedCategories, setSelectedCategories] = useState(null);\n  const [errorCategoryAlreadyExists, setError] = useState(null);\n  const dispatch = useDispatch();\n  const userCategoriesLength = useSelector(\n    (store) => store.user.categories.length\n  );\n\n  const categoryNames = useSelector((store) => [\n    ...store.user.categories.map((cat) => cat.name),\n  ]);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.lists.listDisplayed.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.label };\n  });\n  const { categories } = props;\n\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories, categoryNames]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <CreatableSelect\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            if (!event.__isNew__) setSelectedCategories(event.value);\n            else {\n              const alreadyThere = categoryNames.includes(event.label);\n              if (!alreadyThere) {\n                setError(null);\n                dispatch(addNewCategory(event.label));\n                dispatch(addCategoryToDisplayedList(event.label));\n                setSelectedCategories(userCategoriesLength);\n              } else {\n                setError(\n                  \"A category with that name already exists! Please link it to this list, if needed.\"\n                );\n              }\n            }\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />\n      <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n    </div>\n  );\n};\n\nconst AddShoppingItem = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n\n  const [itemName, setItemName] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [errorItemName, setErrorItemName] = useState(null);\n  const [errorItemNameLength, setErrorItemLength] = useState(null);\n  const [isFav, setFav] = useState(false);\n\n  const listId = useSelector((store) => store.lists.listDisplayed.id);\n\n  const itemNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  const listName = useSelector((store) => store.lists.listDisplayed.name);\n\n  useEffect(() => {\n    if (itemName) {\n      if (itemName.length < 3) setErrorItemLength(\"The item name is too short\");\n      if (itemName.length > 32) setErrorItemLength(\"The item name is too long\");\n      if (itemName.length >= 3 && itemName.length <= 32)\n        setErrorItemLength(null);\n    }\n  }, [itemName]);\n\n  const dispatch = useDispatch();\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    dispatch(\n      addShoppingItem(listId, itemName, formData.description, isFav, categories)\n    );\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorItemName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\">\n            <strong>Add a shopping item to {listName}</strong>\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Insert the name of the new todo list\"\n                ref={itemNameRef}\n                className=\"input input-new-item\"\n                style={{ margin: \"0\" }}\n                onChange={(event) => {\n                  setItemName(event.target.value);\n                }}\n              />\n              <HeartTwoTone\n                twoToneColor={isFav ? \"#faaca8\" : \"#fff\"}\n                onClick={() => {\n                  setFav(!isFav);\n                }}\n                style={{ marginLeft: \"1rem\", fontSize: \"1.5em\" }}\n              />\n            </div>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorItemName}\n            </p>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorItemNameLength}\n            </p>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Insert a description\"\n              ref={register({\n                required: {\n                  value: false,\n                },\n              })}\n              className=\"input input-new-item input-description scroll-items\"\n            />\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new item\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error && !errorItemNameLength) e.preventDefault();\n                  else {\n                    onClose();\n                  }\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default AddShoppingItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport {\n  addTask,\n  addNewCategory,\n  addCategoryToDisplayedList,\n} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport CreatableSelect from \"react-select/creatable\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst SelectCategories = (props) => {\n  const [selectedCategories, setSelectedCategories] = useState(null);\n  const [errorCategoryAlreadyExists, setError] = useState(null);\n  const categoryNames = useSelector((store) => [\n    ...store.user.categories.map((cat) => cat.name),\n  ]);\n  const dispatch = useDispatch();\n  const userCategoriesLength = useSelector(\n    (store) => store.user.categories.length\n  );\n  const categoriesFromRedux = useSelector((store) =>\n    store.lists.listDisplayed.categories\n      ? [...store.lists.listDisplayed.categories]\n      : []\n  );\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.label };\n  });\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n  console.log(categoriesInsideList, categoriesFromRedux);\n  return (\n    <div>\n      <CreatableSelect\n        placeholder=\"Select the category...\"\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            if (!event.__isNew__) setSelectedCategories(event.value);\n            else {\n              const alreadyThere = categoryNames.includes(event.label);\n              if (!alreadyThere) {\n                setError(null);\n                dispatch(addNewCategory(event.label));\n                dispatch(addCategoryToDisplayedList(event.label));\n                setSelectedCategories(userCategoriesLength);\n              } else {\n                setError(\n                  \"A category with that name already exists! Please link it to this list, if needed.\"\n                );\n              }\n            }\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />\n      <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n    </div>\n  );\n};\n\nconst AddTodoItem = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n  // what kind of list is the user adding\n  //which categories\n  const [categories, setCategories] = useState(null);\n  // who is this shared with\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error a category wasn't selected\n  //const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const [isFav, setFav] = useState(false);\n\n  const listName = useSelector((store) => store.lists.listDisplayed.name);\n  const [startDate, setStartDate] = useState(\n    //setHours(setMinutes(new Date(), 30), 17)\n    null\n  );\n\n  const [sharingWith, setSharingWith] = useState([]);\n  /*\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Seleziona delle categorie\");\n  }, []);\n  */\n  const dispatch = useDispatch();\n\n  const onSubmit = (formData, event) => {\n    console.log(formData, isFav, startDate, sharingWith);\n    event.preventDefault();\n    dispatch(\n      addTask(\n        formData.name,\n        isFav,\n        formData.description,\n        categories,\n        startDate,\n        sharingWith\n      )\n    );\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorListName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\">\n            <strong>Add a new task to {listName}</strong>\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Insert the name of the new task\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: \"Please insert a name\",\n                  },\n                  minLength: {\n                    value: 3,\n                    message: \"Name too short\",\n                  },\n                  maxLength: {\n                    value: 32,\n                    message: \"Name too long\",\n                  },\n                })}\n                className=\"input input-new-item\"\n                style={{ margin: \"0\" }}\n              />\n              <HeartTwoTone\n                twoToneColor={isFav ? \"#faaca8\" : \"#fff\"}\n                onClick={() => {\n                  setFav(!isFav);\n                }}\n                style={{ marginLeft: \"1rem\", fontSize: \"1.5em\" }}\n              />\n            </div>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Insert a description\"\n              ref={register({\n                required: {\n                  value: false,\n                },\n              })}\n              className=\"input input-new-item input-description scroll-items\"\n            />\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <DatePicker\n              selected={startDate}\n              onChange={(event) => {\n                setStartDate(event);\n                console.log(event);\n              }}\n              showTimeSelect\n              //minTime={setHours(setMinutes(new Date(), 0), 17)}\n              //maxTime={setHours(setMinutes(new Date(), 30), 20)}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              style={{\n                position: \"relative\",\n                zIndex: \"9999\",\n              }}\n              withPortal\n              placeholderText=\"Select a due date and time\"\n              className=\"date-select input\"\n            />\n            <ShareWithUsers users={setSharingWith} type=\"todo\" />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new task\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error) e.preventDefault();\n                  else {\n                    onClose();\n                  }\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default AddTodoItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DisplayListContent from \"./DisplayListContent\";\nimport { useModal } from \"react-modal-hook\";\nimport AddShoppingItem from \"./Modals/AddShoppingItem\";\nimport AddTodoItem from \"./Modals/AddTodoItem\";\nconst DisplayListHeader = (props) => {\n  const [\n    showAddShoppingItem,\n    hideAddShoppingItem,\n  ] = useModal(({ in: open, onExited }) => (\n    <AddShoppingItem\n      open={open}\n      onExited={onExited}\n      onClose={hideAddShoppingItem}\n    />\n  ));\n\n  const [\n    showAddTodoItem,\n    hideAddSTodoItem,\n  ] = useModal(({ in: open, onExited }) => (\n    <AddTodoItem open={open} onExited={onExited} onClose={hideAddSTodoItem} />\n  ));\n  return (\n    <div\n      className=\"category-name-in-list category-name-in-homepage\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 className=\"list-name-homepage\">{props.listName}</h2>\n      <button\n        className=\"button\"\n        onClick={\n          props.listType === \"shopping\" ? showAddShoppingItem : showAddTodoItem\n        }\n      >\n        {props.listType === \"shopping\" ? (\n          <span>Add item</span>\n        ) : (\n          <span>Add task</span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nconst DisplayList = () => {\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n  return (\n    <div style={{ margin: \"1.5rem\" }}>\n      <DisplayListHeader\n        listName={selectedList.name}\n        listType={selectedList.type}\n        categories={selectedList.categories}\n      />\n      <DisplayListContent list={selectedList} />\n    </div>\n  );\n};\n\nexport default DisplayList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\n//import { ReactComponent as Image } from \"../../img/undraw_conceptual_idea_xw7k.svg\";\nimport DisplayList from \"./DisplayList\";\n\nconst ListNotSelected = (props) => {\n  const loadRightText = () => {\n    if (props.shoppingLists.length === 0 && props.todoLists.length === 0) {\n      return (\n        <h1 style={{ color: \"#ddd6f3\", textShadow: \" 0 0 20px #ddd6f3\" }}>\n          Create a list to start\n        </h1>\n      );\n    } else {\n      return <h1 className=\"select-list-text\">Select a list to start</h1>;\n    }\n  };\n\n  return (\n    <span\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/*<Image style={{ width: \"25vw\" }} />*/}\n      <div className=\"lds-heart\">\n        <div>{\"\"}</div>\n      </div>\n      {loadRightText()}\n    </span>\n  );\n};\n\nconst HomepageContent = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  const shoppingLists = useSelector((store) => store.lists.shoppingLists);\n  const todoLists = useSelector((store) => store.lists.todoLists);\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n\n  return (\n    <div style={{ width: \"75vw\" }}>\n      {shoppingLists.length === 0 ||\n      todoLists.length === 0 ||\n      // checks if object is empty\n      Object.keys(selectedList).length === 0 ? (\n        <ListNotSelected shoppingLists={shoppingLists} todoLists={todoLists} />\n      ) : (\n        <DisplayList />\n      )}\n    </div>\n  );\n};\nexport default HomepageContent;\n","// @flow\n\nimport React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\nimport MenuLists from \"./MenuLists\";\nimport HomepageContent from \"./HomepageContent\";\n\nconst Homepage = (_: void): React$Element<*> => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"profile-container\">\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100vw\",\n          maxHeight: \"100vh\",\n        }}\n      >\n        <div style={{ width: \"25vw\", maxWidth: \"25vw\" }}>\n          <MenuLists />\n        </div>\n        <HomepageContent />\n      </div>\n    </div>\n  );\n};\nexport default Homepage;\n","import React from \"react\";\nimport Login from \"./Pages/Login\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Style/style.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./Pages/Signup\";\nimport Profile from \"./Pages/Homepage/Homepage\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/profile/:username\">\n          <Profile />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN } from \"./loginActions\";\n\nconst initialState = {\n  username: null,\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        username: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import { SIGNUP } from \"./signupActions\";\n\nconst initialState = {};\n\nconst signupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNUP:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default signupReducer;\n","import {\n  LOAD_LISTS,\n  ADD_SHOPPING_LIST,\n  GET_TODOS,\n  ADD_TODOLIST,\n  CLEAN_LISTS,\n  CHANGE_CHECK_TODO,\n  CHANGE_CHECK_SHOPPING,\n  GET_USERS,\n  LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n  LOAD_TODO_LIST_IN_HOMEPAGE,\n  CLEAR_DISPLAYED_LIST,\n  ADD_ITEM_TO_SHOPPING_LIST,\n  ADD_NEW_CATEGORY_TO_LIST_DISPLAYED,\n  CHECK_ITEM,\n  ADD_TASK,\n} from \"./listsActions\";\n\nconst initialState = {\n  shoppingLists: [],\n  todoLists: [],\n  //categories: [],\n  users: [],\n  listDisplayed: {},\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_LISTS:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case GET_TODOS:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_TODOLIST:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n\n    case CLEAN_LISTS:\n      return {\n        ...state,\n        categories: [],\n        todoLists: [],\n        shoppingLists: [],\n        listDisplayed: {},\n      };\n    case CHANGE_CHECK_SHOPPING:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case CHANGE_CHECK_TODO:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: [...action.payload],\n      };\n    case LOAD_SHOPPING_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case LOAD_TODO_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case CLEAR_DISPLAYED_LIST:\n      return {\n        ...state,\n        listDisplayed: {},\n      };\n    case ADD_ITEM_TO_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.newShoppingList],\n        listDisplayed: { ...action.newListDisplayed },\n      };\n    case ADD_NEW_CATEGORY_TO_LIST_DISPLAYED:\n      return {\n        ...state,\n        //categories: [...action.payload],\n        listDisplayed: { ...action.newListDisplayed },\n      };\n    case CHECK_ITEM:\n      return { ...state, listDisplayed: { ...action.payload } };\n    case ADD_TASK:\n      return {\n        ...state,\n        listDisplayed: { ...action.newListDisplayed },\n        todoLists: [...action.newTodoList],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import {\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  DELETE_CATEGORY,\n  GET_CATEGORIES,\n} from \"./userActions\";\n\nconst initialState = {\n  categories: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.payload],\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    case EDIT_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    case DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login/loginReducer\";\nimport signupReducer from \"./signup/signupReducer\";\nimport listsReducer from \"./lists/listsReducer\";\nimport userReducer from \"./user/userReducer\";\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  signup: signupReducer,\n  lists: listsReducer,\n  user: userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ModalProvider rootComponent={TransitionGroup}>\n      <App />\n    </ModalProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}