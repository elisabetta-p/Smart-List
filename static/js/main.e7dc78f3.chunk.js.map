{"version":3,"sources":["Redux/lists/listsActions.js","Redux/user/userActions.js","Pages/Login.jsx","Redux/login/loginActions.js","Pages/Signup.jsx","Redux/signup/signupActions.js","Pages/Homepage/Utilities/ShareWithUsers.jsx","Pages/Homepage/Modals/CreateList.jsx","Pages/Homepage/Modals/ManageCategories.jsx","Pages/Homepage/Header.jsx","Pages/Homepage/MenuLists.jsx","Pages/Homepage/DisplayListContent.jsx","Pages/Homepage/Modals/AddShoppingItem.jsx","Pages/Homepage/Modals/AddTodoItem.jsx","Pages/Homepage/DisplayList.jsx","Pages/Homepage/HomepageContent.jsx","Pages/Homepage/Homepage.jsx","App.js","serviceWorker.js","Redux/login/loginReducer.js","Redux/signup/signupReducer.js","Redux/lists/listsReducer.js","Redux/user/userReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["loadShoppingLists","type","payload","id","name","items","description","isFav","category","isChecked","categories","label","getTodoLists","addList","typeOfList","sharingWith","dispatch","getState","existingShoppingLists","obj","length","push","addShoppingList","lists","shoppingLists","existingTodos","addTodoList","todoLists","loadSingleListInHomepage","listId","isAListAlreadySelected","listDisplayed","Object","keys","constructor","clearDisplayedList","rightList","find","list","loadShoppingList","loadTodoList","addShoppingItem","newItem","shoppingList","forEach","executeAddShoppingItem","newShoppingList","newListDisplayed","addCategoryToDisplayedList","categoryName","user","getCategories","addNewCategory","allCategories","Login","_","handleSubmit","useForm","useDispatch","history","useHistory","useState","username","setUsername","password","setPassword","usernameRef","useRef","errorMessage","setErrorMessage","useEffect","current","focus","className","width","window","innerWidth","height","innerHeight","params","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","onSubmit","localStorage","setItem","axios","post","then","response","data","userId","catch","error","console","log","message","login","getItem","toLocaleLowerCase","placeholder","ref","onChange","event","target","style","to","Signup","errorUsername","setErrorUsername","email","setEmail","errorEmail","setErrorEmail","errorPassword","setErrorPassword","clear","test","String","toLowerCase","signup","onClick","e","preventDefault","goBack","ShareWithUsers","props","existingUsers","useSelector","state","users","delimiters","userTags","setUserTags","errorUserDoesntExist","setErrorUser","ReactTags","tags","handleDelete","i","filter","tag","index","handleAddition","includes","text","allowUnique","classNames","tagInputField","tagInput","remove","selected","allowDragDrop","inputFieldPosition","autofocus","SelectListType","changeSelected","options","styles","menuPortal","base","zIndex","isSearchable","menuPortalTarget","document","body","isClearable","SelectCategories","categoriesFromRedux","selectedCategories","setSelectedCategories","reduxCategories","map","cat","isMulti","CreateList","createShoppingList","onClose","rest","existingShopppingListsNames","existingTodoListsNames","listName","setListName","changeTypeOfList","setCategories","setSharingWith","errorListName","setErrorListName","errorListNameLength","setErrorListNameLength","errorTypeOfList","setErrorTypeOfList","listNameRef","useCallback","node","Dialog","formData","DialogTitle","DialogContent","marginBottom","position","Index","display","justifyContent","errors","alreadyThere","getElementById","checkIfThereAreErrors","EditCategory","selectedCategory","setSelectedCategory","newName","setNewName","categoriesInsideList","store","editedCategoryName","idToEdit","margin","DeleteCategory","ManageCategories","newCategory","setNewCategory","newEditedName","setNewEditedName","setIdToEdit","idToDelete","setIdToDelete","existingCategories","filteredCategories","deleteCategory","Accordion","flexDirection","Toggle","eventKey","Collapse","Header","useModal","open","in","onExited","hideCreateList","showCreateList","hideManageCategories","showManageCategories","LogoutOutlined","ShoppingLists","showContent","setShowContent","cursor","ul","layout","initial","animate","exit","transition","key","TodoLists","MenuLists","DisplayListContent","loadTheItems","categoryId","item","checked","itemId","HeartTwoTone","twoToneColor","categoriesInListWithDuplicates","uniqueSet","Set","removeDuplicatesFromCategories","categoryNames","names","getTheNamesOfTheCategories","Fragment","errorCategoryAlreadyExists","setError","userCategoriesLength","__isNew__","AddShoppingItem","register","itemName","setItemName","errorItemName","setErrorItemName","errorItemNameLength","setErrorItemLength","setFav","itemNameRef","alignItems","marginLeft","fontSize","required","startDate","setStartDate","minLength","maxLength","showTimeSelect","dateFormat","withPortal","DisplayListHeader","hideAddShoppingItem","showAddShoppingItem","AddTodoItem","hideAddSTodoItem","showAddTodoItem","listType","DisplayList","selectedList","ListNotSelected","color","textShadow","HomepageContent","Homepage","maxHeight","maxWidth","App","basename","process","exact","path","Boolean","location","hostname","match","initialState","loginReducer","action","signupReducer","listsReducer","userReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","rootComponent","TransitionGroup","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e7dc78f3.chunk.js","sourcesContent":["export const LOAD_LISTS = \"LOAD_LISTS\";\nexport const ADD_SHOPPING_LIST = \"CREATE_SHOPPING_LIST\";\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODOLIST = \"ADD_TODOLIST\";\nexport const CLEAN_LISTS = \"CLEAN_LISTS\";\nexport const CHANGE_CHECK_SHOPPING = \"CHANGE_CHECK_SHOPPING\";\nexport const CHANGE_CHECK_TODO = \"CHANGE_CHECK_TODO\";\nexport const GET_USERS = \"GET_USERS\";\nexport const LOAD_SHOPPING_LIST_IN_HOMEPAGE = \"LOAD_SHOPPING_LIST_IN_HOMEPAGE\";\nexport const LOAD_TODO_LIST_IN_HOMEPAGE = \"LOAD_TODO_LIST_IN_HOMEPAGE\";\nexport const CLEAR_DISPLAYED_LIST = \"CLEAR_DISPLAYED_LIST\";\nexport const ADD_ITEM_TO_SHOPPING_LIST = \"ADD_ITEM_TO_SHOPPING_LIST\";\nexport const ADD_NEW_CATEGORY_TO_LIST_DISPLAYED =\n  \"ADD_NEW_CATEGORY_TO_LIST_DISPLAYED\";\nexport const CHECK_ITEM = \"CHECK_ITEM\";\n\nexport const loadShoppingLists = () => {\n  const lists = [\n    {\n      id: 0,\n      name: \"Cibo da comprare\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: true,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"Clothes\" },\n        { id: 2, label: \"Stuff\" },\n      ],\n    },\n    {\n      id: 1,\n      name: \"Seconda lista\",\n      items: [],\n      categories: [{ id: 0, label: \"Food\" }],\n    },\n    {\n      id: 2,\n      name: \"AAA\",\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"Clothes\" },\n        { id: 2, label: \"Stuff\" },\n      ],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: \"BBB\",\n      categories: [{ id: 0, label: \"Food\" }],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 4,\n      name: \"CCC\",\n      categories: [{ id: 0, label: \"Food\" }],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: \"DDD\",\n      categories: [\n        { id: 0, label: \"Food\" },\n        { id: 1, label: \"Clothes\" },\n        { id: 2, label: \"Stuff\" },\n      ],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n  ];\n\n  return {\n    type: LOAD_LISTS,\n    payload: [...lists],\n  };\n};\n\nexport const getTodoLists = () => {\n  const todos = [\n    { id: 0, name: \"todo list 1\", items: [] },\n    { id: 1, name: \"todo list 2\", items: [] },\n  ];\n  return {\n    type: GET_TODOS,\n    payload: [...todos],\n  };\n};\n\nconst addTodoList = (existingTodos, name, categories, sharingWith) => {\n  const obj = {\n    id: existingTodos.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingTodos.push(obj);\n  return {\n    type: ADD_TODOLIST,\n    payload: [...existingTodos],\n  };\n};\n\nconst addShoppingList = (\n  existingShoppingLists,\n  name,\n  categories,\n  sharingWith\n) => {\n  const obj = {\n    id: existingShoppingLists.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingShoppingLists.push(obj);\n\n  return {\n    type: ADD_SHOPPING_LIST,\n    payload: [...existingShoppingLists],\n  };\n};\n\n/**\n * It invokes the right function to add a new list according to the type of the list that is being added (@see addShoppingList and @see addTodoList)\n * @param {string} name name of the list\n * @param {string} typeOfList either shopping or todo\n * @param {[number]} categories array containing the ids of the categories selected by the user\n * @param {[]} sharingWith array containing the users the list is shared with\n */\n\nexport const addList = (name, typeOfList, categories, sharingWith) => {\n  return (dispatch, getState) => {\n    if (typeOfList === \"shopping\") {\n      const existingLists = [...getState().lists.shoppingLists];\n      dispatch(addShoppingList(existingLists, name, categories, sharingWith));\n    } else if (typeOfList === \"todo\") {\n      const existingLists = [...getState().lists.todoLists];\n      dispatch(addTodoList(existingLists, name, categories, sharingWith));\n    }\n  };\n};\n\nexport const cleanLists = () => {\n  return {\n    type: CLEAN_LISTS,\n  };\n};\n\nexport const checkItem = (itemId) => {\n  return (dispatch, getState) => {\n    // here there will also be an API call\n    const newListDisplayed = { ...getState().lists.listDisplayed };\n    newListDisplayed.items.forEach((item) => {\n      if (item.id === itemId) {\n        item.isChecked = !item.isChecked;\n      }\n    });\n    dispatch({\n      type: CHECK_ITEM,\n      payload: { ...newListDisplayed },\n    });\n  };\n};\n\nexport const getUsers = () => {\n  const users = [\"boba\", \"banana\", \"prokkius\"];\n  return {\n    type: GET_USERS,\n    payload: [...users],\n  };\n};\n\n/**\n * Loads the right shopping list in the store so that the user can see it on their homnepace\n * @param {number}  listId id of the list\n * @param {Array} shoppingLists array of existing shopping lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadShoppingList = (listId, shoppingLists) => {\n  const rightList = shoppingLists.find((list) => list.id === listId);\n  rightList.type = \"shopping\";\n  if (rightList) {\n    return {\n      type: LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n/**\n * Loads the right todo list in the store so that the user can see it on their homepage\n * @param {number} listId id of the list\n * @param {Array} todoLists array of existing todo lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadTodoList = (listId, todoLists) => {\n  const rightList = todoLists.find((list) => list.id === listId);\n  rightList.type = \"todo\";\n  if (rightList) {\n    return {\n      type: LOAD_TODO_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n\n/**\n * Loads a specific list in the store after the user clicked it from the sidebar.\n * This function is invoked after the user has clicked one of the lists on the homepage's sidebar. To load the correct list,\n * it invokes the right function: @see loadShoppingList() @see loadTodoList\n * @param {number} listId id of the list the user has chosen to display\n * @param {string} type type of list, whether it'' a shopping or a todo list\n */\nexport const loadSingleListInHomepage = (listId, type) => {\n  return (dispatch, getState) => {\n    // if listDisplayed is empty, we don't need to clean it\n    const isAListAlreadySelected = { ...getState().lists.listDisplayed };\n    if (\n      Object.keys(isAListAlreadySelected).length !== 0 &&\n      isAListAlreadySelected.constructor === Object\n    ) {\n      dispatch(clearDisplayedList());\n    }\n    if (type === \"shopping\") {\n      const shoppingLists = [...getState().lists.shoppingLists];\n      dispatch(loadShoppingList(listId, shoppingLists));\n    }\n    if (type === \"todo\") {\n      const todoLists = [...getState().lists.todoLists];\n      dispatch(loadTodoList(listId, todoLists));\n    }\n  };\n};\n\nconst clearDisplayedList = () => {\n  return {\n    type: CLEAR_DISPLAYED_LIST,\n  };\n};\n/**\n * Add an item to a shopping list.\n * @param {number} id list id\n * @param {string} name name of the item\n * @param {string} description description of the item\n * @param {boolean} isFav is favourite\n * @param {number }category\n */\nexport const addShoppingItem = (id, name, description, isFav, category) => {\n  const newItem = {\n    name,\n    description,\n    isFav,\n    category,\n  };\n  return (dispatch, getState) => {\n    const shoppingList = [...getState().lists.shoppingLists];\n    const listDisplayed = { ...getState().lists.listDisplayed };\n    listDisplayed.items.push(newItem);\n    shoppingList.forEach((list) => {\n      if (list.id === id) {\n        list.items = [...list.items, newItem];\n      }\n    });\n    dispatch(executeAddShoppingItem([...shoppingList], { ...listDisplayed }));\n  };\n};\n\nconst executeAddShoppingItem = (newShoppingList, listDisplayed) => {\n  return {\n    type: ADD_ITEM_TO_SHOPPING_LIST,\n    newShoppingList: [...newShoppingList],\n    newListDisplayed: { ...listDisplayed },\n  };\n};\n\nexport const addCategoryToDisplayedList = (categoryName) => {\n  return (dispatch, getState) => {\n    const newListDisplayed = { ...getState().lists.listDisplayed };\n    if (getState().lists.listDisplayed.categories) {\n      newListDisplayed.categories = [\n        ...getState().lists.listDisplayed.categories,\n        { id: getState().user.categories.length, label: categoryName },\n      ];\n    } else {\n      newListDisplayed.categories = [\n        { id: getState().user.categories.length, label: categoryName },\n      ];\n    }\n    dispatch({\n      type: ADD_NEW_CATEGORY_TO_LIST_DISPLAYED,\n      newListDisplayed: { ...newListDisplayed },\n    });\n  };\n};\n","import { addCategoryToDisplayedList } from \"../lists/listsActions\";\n\nexport const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\";\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\n\nexport const getCategories = () => {\n  const categories = [\n    { id: 0, name: \"Food\" },\n    { id: 1, name: \"Clothes\" },\n    { id: 2, name: \"Stuff\" },\n    { id: 3, name: \"AAA\" },\n  ];\n  return {\n    type: GET_CATEGORIES,\n    payload: [...categories],\n  };\n};\n\n/**\n * Adds new category to the user and also associates it to the list currently on display\n * @param {string} categoryName name of the new category\n * @returns {function(*): {payload: *[], type: string}}\n */\n\nexport const addNewCategory = (categoryName) => {\n  return (dispatch, getState) => {\n    /**\n     * adding to all catergories in redux is useless.\n     * I'll replace this with an api call to add this in the db\n     */\n    const allCategories = [\n      ...getState().user.categories,\n      { id: getState().user.categories.length, name: categoryName },\n    ];\n    //dispatch(addCategoryToDisplayedList(categoryName));\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: [...allCategories],\n    });\n  };\n};\n\n/**\n * Edits the name of an existing category\n * @param {number} id id of the category to edit\n * @param {string} newName new name of the category\n * @returns {function(...[*]=)}\n */\nexport const editCategory = (id, newName) => {\n  return (dispatch, getState) => {\n    const existingCategories = [...getState().user.categories];\n    existingCategories.forEach((cat) => {\n      if (cat.id === id) {\n        cat.name = newName;\n      }\n    });\n    dispatch({\n      type: EDIT_CATEGORY,\n      payload: [...existingCategories],\n    });\n  };\n};\n\n/**\n * Deletes an existing category\n * @param {number} id id of the category to delete\n * @returns {function(...[*]=)}\n */\n\nexport const deleteCategory = (id) => {\n  return (dispatch, getState) => {\n    const existingCategories = [...getState().user.categories];\n    const filteredCategories = existingCategories.filter(\n      (cat) => cat.id !== id\n    );\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: [...filteredCategories],\n    });\n  };\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = (_: void): React$Element<*> => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const usernameRef = useRef(null);\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    usernameRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (username && password) setErrorMessage(null);\n  }, [username, password]);\n\n  const onSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    if (username && password && !errorMessage) {\n      dispatch(login(username, password));\n      history.push(\n        `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n      );\n    } else {\n      setErrorMessage(\"Please insert username and password\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">Hello{username ? `, ${username}` : null}</h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={usernameRef}\n            className=\"input\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            className=\"input\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n          />\n          <p className=\"error-message\">{errorMessage}</p>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          />\n          <Link to=\"/signup\">\n            <button className=\"button\" style={{ width: \"5.5rem\" }}>\n              Sign up\n            </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nexport const LOGIN = \"LOGIN\";\n\nconst url = \"http://localhost:9487\";\n\nexport const login = (username, password) => {\n  // chiamata API per il login\n  localStorage.setItem(\"username\", username);\n  return (dispatch) => {\n    const obj = {\n      username,\n      password,\n    };\n    axios\n      .post(`${url}/users/login`, obj)\n      .then((response) => {\n        if (response) {\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"userId\", response.data.userId);\n        }\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n    return {\n      type: LOGIN,\n      payload: username,\n    };\n  };\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = (_: void): React$Element<*> => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(null);\n  const [errorUsername, setErrorUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [errorEmail, setErrorEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [errorPassword, setErrorPassword] = useState(null);\n  const usernameRef = useRef();\n\n  useEffect(() => {\n    localStorage.clear();\n    usernameRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (email) {\n      const regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!regex.test(String(email).toLowerCase())) {\n        setErrorEmail(\"Email format not valid\");\n      } else {\n        setErrorEmail(null);\n      }\n    }\n  }, [email]);\n  useEffect(() => {\n    if (username) {\n      if (username.length < 3)\n        setErrorUsername(\"The chosen username is too short\");\n      if (username.length > 32)\n        setErrorUsername(\"The chosen username is too long\");\n      if (username.length >= 3 && username.length <= 32) setErrorUsername(null);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (password) {\n      if (password.length < 3)\n        setErrorPassword(\"The chosen password is too short\");\n      if (password.length > 32)\n        setErrorPassword(\"The chosen password is too long\");\n      if (password.length >= 3 && password.length <= 32) setErrorPassword(null);\n    }\n  }, [password]);\n\n  const onSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    dispatch(signup(username, email, password));\n    history.push(\n      `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n    );\n  };\n  const history = useHistory();\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">Welcome{username ? `, ${username}` : null}</h1>\n        <form\n          onSubmit={\n            !errorUsername &&\n            !errorEmail &&\n            !errorPassword &&\n            username &&\n            password &&\n            email\n              ? handleSubmit(onSubmit)\n              : null\n          }\n          className=\"form\"\n        >\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={usernameRef}\n            className=\"input\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <p className=\"error-message\">{errorUsername}</p>\n          <input\n            name=\"email\"\n            placeholder=\"Insert your email\"\n            type=\"email\"\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n            className=\"input\"\n          />\n          <p className=\"error-message\">{errorEmail}</p>\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n              console.log(password);\n            }}\n            className=\"input\"\n          />\n          <p className=\"error-message\">{errorPassword}</p>\n\n          <input\n            type=\"submit\"\n            value=\"Confirm\"\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          />\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              history.goBack();\n            }}\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          >\n            Go back\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","export const SIGNUP = \"SIGNUP\";\n\n/**\n * Esegue la chiamata API per registrare un utente al db.\n * @param {string} name nome dell'utente\n * @param {string} email email dell'utente\n * @param {string} username username dell'utente\n * @param {string} password password dell'utente\n */\nexport const signup = (name, email, username, password) => {\n  /**\n   * chiamate api per registrare l'utente\n   * .then( (response) => {\n   *   localStorage.setItem('token', response.data.token);\n   *   localStorage.setItem('username', response.data.username)\n   * })\n   */\n  localStorage.setItem(\"username\", username);\n  return {\n    type: SIGNUP,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../../../Redux\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nconst ShareWithUsers = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n  const existingUsers = useSelector((state) => state.lists.users);\n  const keyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  const delimiters = [keyCodes.comma, keyCodes.enter];\n  // I have the tags in userTags\n  const [userTags, setUserTags] = useState([]);\n\n  //error if user does not exist\n  const [errorUserDoesntExist, setErrorUser] = useState(null);\n\n  const { users } = props;\n  useEffect(() => {\n    users(userTags);\n    setErrorUser(null);\n  }, [userTags, users]);\n\n  const handleDelete = (i) => {\n    const tags = userTags.filter((tag, index) => index !== i);\n    setUserTags([...tags]);\n  };\n\n  const handleAddition = (tag) => {\n    if (existingUsers.includes(tag.text))\n      setUserTags((userTags) => [...userTags, tag]);\n    else setErrorUser(`The user ${tag.text} does not exist`);\n  };\n\n  return (\n    <div>\n      <p className=\"text-modal\">Share with</p>\n      <span>\n        <ReactTags\n          tags={userTags}\n          handleDelete={handleDelete}\n          handleAddition={handleAddition}\n          delimiters={delimiters}\n          allowUnique={true}\n          classNames={{\n            tagInputField: \"input input-new-list\",\n            tag: \"tag\",\n            tagInput: \"tagInput\",\n            tags: \"tags\",\n            remove: \"removeTag\",\n            selected: \"selected\",\n          }}\n          allowDragDrop={false}\n          inputFieldPosition=\"bottom\"\n          placeholder=\"Write the usernames\"\n          autofocus={false}\n        />\n      </span>\n      {errorUserDoesntExist ? (\n        <p className=\"error-message\">{errorUserDoesntExist}</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ShareWithUsers;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addList } from \"../../../Redux\";\n\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst SelectListType = (props) => {\n  const [selected, changeSelected] = useState(null);\n  const listTypes = [\n    { value: \"shopping\", label: \"Shopping list\" },\n    { value: \"todo\", label: \"Todo list\" },\n  ];\n\n  /**\n   * Callback to pass data from the child component SelectListType to parent component CreateList!\n   * I used the useEffect hook that gets called every time *selected* changes, and it calls the type function inside the props.\n   */\n\n  const { type } = props;\n  useEffect(() => {\n    type(selected);\n  }, [selected, type]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">What kind of list is this?</p>\n      <Select\n        options={listTypes}\n        onChange={(event) => {\n          if (event) {\n            changeSelected(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />\n    </div>\n  );\n};\n\nconst SelectCategories = (props) => {\n  const categoriesFromRedux = useSelector((state) => state.user.categories);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  //const [categories, selectCategories] = useState([...categoriesFromRedux]);\n  const reduxCategories = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.name };\n  });\n  /*useEffect(() => {\n    console.log(selectedCategories);\n\t}, [selectedCategories]);\n\n\t* inside selectedCategories there are the ids of the categories that the user selected\n\t*/\n\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <Select\n        options={reduxCategories}\n        isMulti\n        onChange={(event) => {\n          if (event && event.length !== 0) {\n            setSelectedCategories((selectedCategories) => [\n              ...selectedCategories,\n              {\n                id: event[event.length - 1].value,\n                label: event[event.length - 1].label,\n              },\n            ]);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />{\" \"}\n    </div>\n  );\n};\n\nconst CreateList = ({ createShoppingList, onClose, ...rest }) => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const existingShopppingListsNames = useSelector((state) =>\n    state.lists.shoppingLists.map((list) => list.name)\n  );\n  const existingTodoListsNames = useSelector((state) =>\n    state.lists.todoLists.map((list) => list.name)\n  );\n\n  const [listName, setListName] = useState(null);\n  // what kind of list is the user adding\n  const [typeOfList, changeTypeOfList] = useState(null);\n  //which categories\n  const [categories, setCategories] = useState([]);\n  // who is this shared with\n  const [sharingWith, setSharingWith] = useState([]);\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error: name length not right\n  const [errorListNameLength, setErrorListNameLength] = useState(null);\n  // error a category wasn't selected\n  const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const listNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Select at least one category\");\n  }, [categories, typeOfList]);\n\n  useEffect(() => {\n    if (listName === \"\") {\n      setErrorListName(\"Please write a name\");\n    } else if (listName) {\n      if (listName.length < 3) {\n        setErrorListNameLength(\"List name is too short\");\n      }\n      if (listName.length > 32) {\n        setErrorListNameLength(\"List name is too long\");\n      }\n      if (listName.length <= 32 && listName.length >= 3) {\n        setErrorListNameLength(null);\n      }\n    }\n  }, [listName]);\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n\n    dispatch(addList(listName, typeOfList, categories, sharingWith));\n  };\n\n  /**\n   * Called when the user clicks the button to confirm they want to add a new list.\n   * Checks if:\n   * 1. the user selected the type of list\n   * 2. a list with that name already exists\n   * @returns {boolean}\n   */\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (!typeOfList) {\n      setErrorTypeOfList(\"Select a type of list to add\");\n      errors = true;\n    }\n    if (typeOfList === \"shopping\") {\n      const alreadyThere = existingShopppingListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A shopping list with this name already exists\");\n        errors = true;\n      } else if (!alreadyThere) {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    if (typeOfList === \"todo\") {\n      const alreadyThere = existingTodoListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A todo list with this name already exists\");\n        errors = true;\n      } else {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form\n          onSubmit={\n            !errorListName && !errorTypeOfList && !errorListNameLength\n              ? handleSubmit(onSubmit)\n              : null\n          }\n        >\n          <DialogTitle className=\"modal-title\">\n            <strong>Create a new list</strong>\n          </DialogTitle>\n          <DialogContent>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Insert the name of the new todo list\"\n              ref={listNameRef}\n              className=\"input input-new-list\"\n              onChange={(event) => setListName(event.target.value)}\n            />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListNameLength}\n            </p>\n            <SelectListType type={changeTypeOfList} />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorTypeOfList}\n            </p>\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <ShareWithUsers users={setSharingWith} />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new list\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error || errorListNameLength || errorListName)\n                    e.preventDefault();\n                  else onClose();\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default CreateList;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addNewCategory, deleteCategory, editCategory } from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport Accordion from \"react-bootstrap/Accordion\";\n\nconst EditCategory = (props) => {\n  // selectedCategory contains the id of the category selected\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [newName, setNewName] = useState(null);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.user.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.name };\n  });\n  const { category, editedCategoryName, idToEdit } = props;\n  useEffect(() => {\n    category(selectedCategory);\n    editedCategoryName(newName);\n  }, [selectedCategory, category, editedCategoryName, idToEdit, newName]);\n\n  return (\n    <div className=\"select-manage-categories\">\n      <Select\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            setSelectedCategory(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list \"\n        placeholder=\"Select the category you want to edit\"\n      />\n      <input\n        id=\"newName\"\n        type=\"text\"\n        name=\"newName\"\n        placeholder=\"Insert the new name\"\n        className=\"input input-new-item\"\n        style={{ margin: \"0\" }}\n        onChange={(event) => {\n          console.log(event.target.value);\n          setNewName(event.target.value);\n          console.log(newName);\n        }}\n      />\n    </div>\n  );\n};\n\nconst DeleteCategory = (props) => {\n  // selectedCategory contains the id of the category selected\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.user.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.name };\n  });\n  const { category } = props;\n  useEffect(() => {\n    category(selectedCategory);\n  }, [selectedCategory, category]);\n\n  return (\n    <Select\n      options={categoriesInsideList}\n      onChange={(event) => {\n        if (event) {\n          setSelectedCategory(event.value);\n        }\n      }}\n      styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n      isSearchable\n      isClearable\n      menuPortalTarget={document.body}\n      className=\"select-add-list\"\n      placeholder=\"Select the category you want to delete\"\n    />\n  );\n};\n\nconst ManageCategories = ({ createShoppingList, onClose, ...rest }) => {\n  const { handleSubmit } = useForm();\n\n  const [newCategory, setNewCategory] = useState(null);\n  //edit the category name\n  const [newEditedName, setNewEditedName] = useState(null);\n  const [idToEdit, setIdToEdit] = useState(null);\n  // delete a category\n  const [idToDelete, setIdToDelete] = useState(null);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log(idToDelete);\n  }, [idToDelete]);\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    if (newCategory) {\n      dispatch(addNewCategory(newCategory));\n    }\n    if (idToEdit) {\n      dispatch(editCategory(idToEdit, newEditedName));\n    }\n    if (idToDelete) {\n      console.log(\"s\");\n      dispatch(deleteCategory(idToDelete));\n    }\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      //setErrorListName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\">\n            <strong>Manage the categories</strong>\n          </DialogTitle>\n          <DialogContent>\n            <Accordion\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n              }}\n            >\n              <Accordion.Toggle eventKey=\"0\" className=\"button header-button \">\n                Add a new category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <div className=\"select-manage-categories\">\n                  <input\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Insert the name of the new category\"\n                    className=\"input input-new-item\"\n                    style={{ margin: \"0\" }}\n                    onChange={(event) => {\n                      setNewCategory(event.target.value);\n                    }}\n                  />\n                </div>\n              </Accordion.Collapse>\n              <Accordion.Toggle eventKey=\"1\" className=\"button header-button \">\n                Edit an existing category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <div>\n                  {/*category contains the id of the category i'm editing*/}\n                  <EditCategory\n                    category={setIdToEdit}\n                    editedCategoryName={setNewEditedName}\n                  />\n                </div>\n              </Accordion.Collapse>\n              <Accordion.Toggle eventKey=\"2\" className=\"button header-button \">\n                Delete an existing category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <div className=\"select-manage-categories\">\n                  <DeleteCategory category={setIdToDelete} />\n                </div>\n              </Accordion.Collapse>\n            </Accordion>\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Confirm\"\n                onClick={(e) => {\n                  /*const error = checkIfThereAreErrors();\n                  if (error) e.preventDefault();\n                  else {*/\n                  onClose();\n                  //}\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ManageCategories;\n","import React from \"react\";\n\nimport Particles from \"react-particles-js\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport { useModal } from \"react-modal-hook\";\nimport CreateList from \"./Modals/CreateList\";\nimport ManageCategories from \"./Modals/ManageCategories\";\n\nconst Header = () => {\n  const history = useHistory();\n  const [\n    showCreateList,\n    hideCreateList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateList open={open} onExited={onExited} onClose={hideCreateList} />\n  ));\n  const [\n    showManageCategories,\n    hideManageCategories,\n  ] = useModal(({ in: open, onExited }) => (\n    <ManageCategories\n      open={open}\n      onExited={onExited}\n      onClose={hideManageCategories}\n    />\n  ));\n  /*const [\n    showCreateShoppingList,\n    hideCreateShoppingList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateShoppingList\n      open={open}\n      onExited={onExited}\n      onClose={hideCreateShoppingList}\n    />\n  ));*/\n\n  return (\n    <div className=\"header-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`10vh`}\n        params={{\n          particles: {\n            number: {\n              value: 60,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 4,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"content-header-container\">\n        <header>\n          <span>\n            <h1 className=\"hello-profile\">\n              Hello, {localStorage.getItem(\"username\")}\n            </h1>\n          </span>\n          <span className=\"header-right\">\n            <button\n              className=\"button header-button\"\n              onClick={showManageCategories}\n            >\n              Manage the categories\n            </button>\n            <button className=\"button header-button\" onClick={showCreateList}>\n              Create a new list\n            </button>\n\n            <LogoutOutlined\n              className=\"header-icon\"\n              onClick={() => {\n                localStorage.clear();\n                history.push(\"/\");\n              }}\n            />\n          </span>\n        </header>\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { loadSingleListInHomepage } from \"../../Redux\";\n//import Select from \"react-select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nconst ShoppingLists = () => {\n  const shoppingLists = useSelector((state) => state.lists.shoppingLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        Shopping lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {shoppingLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      dispatch(loadSingleListInHomepage(list.id, \"shopping\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst TodoLists = () => {\n  const todoLists = useSelector((state) => state.lists.todoLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        To do lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {todoLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      dispatch(loadSingleListInHomepage(list.id, \"todo\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst MenuLists = () => {\n  return (\n    <div className=\"menu-lists\">\n      <div className=\"menu-lists-container\">\n        <AnimateSharedLayout>\n          <motion.ul layout initial={{ height: \"auto\" }}>\n            <ShoppingLists />\n            <TodoLists />\n          </motion.ul>\n        </AnimateSharedLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuLists;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport { checkItem } from \"../../Redux\";\nimport { useDispatch } from \"react-redux\";\n\nconst DisplayListContent = (props) => {\n  const allCategories = useSelector((store) => store.user.categories);\n  const dispatch = useDispatch();\n  const items = useSelector((store) => [...store.lists.listDisplayed.items]);\n  /**\n   * Removes any duplicates from the category array I get from the items inside the list\n   * @returns {number[]} contains the ids of the categories that are present inside this list\n   */\n  const removeDuplicatesFromCategories = () => {\n    const categoriesInListWithDuplicates = props.list.items.map(\n      (item) => item.category\n    );\n    const uniqueSet = new Set(categoriesInListWithDuplicates);\n    return [...uniqueSet];\n  };\n\n  /**\n   * Returns the names of the categories contained in the specific list associated with their id.\n   * It also uses the generic list of categories to find the names.\n   * @param {number[]} categories array containing the ids of the categories associated with the specific list\n   * @returns {string[]}\n   */\n\n  const getTheNamesOfTheCategories = (categories) => {\n    let names = [];\n    categories.forEach((category) => {\n      allCategories.map((cat) => {\n        if (cat.id === category) {\n          names = [...names, { name: cat.name, id: cat.id }];\n        }\n      });\n    });\n    return names;\n  };\n\n  const loadTheItems = (categoryId) => {\n    return items.map((item, index) =>\n      item.category === categoryId ? (\n        <tr key={index} className=\"single-item-in-list\">\n          <td style={{ width: \"1rem\" }}>\n            <input\n              type=\"checkbox\"\n              className=\"inside-td\"\n              checked={item.isChecked}\n              onChange={() => {\n                dispatch(checkItem(item.id));\n              }}\n            />\n          </td>\n          <td>\n            {\" \"}\n            <span className=\"inside-td\">{item.name}</span>\n          </td>\n          <td>{item.isFav ? <HeartTwoTone twoToneColor=\"#faaca8\" /> : null}</td>\n          <td style={{ width: \"4rem\" }}>\n            <button className=\"button button-list button-inside-td\">\n              Edit item\n            </button>\n          </td>\n          <td style={{ width: \"4rem\" }}>\n            <button className=\"button button-list button-inside-td delete-button\">\n              Delete item\n            </button>\n          </td>\n        </tr>\n      ) : null\n    );\n  };\n\n  const categories = removeDuplicatesFromCategories(props.list);\n  const categoryNames = [...getTheNamesOfTheCategories(categories)];\n  return (\n    <div id=\"display-list\">\n      <table>\n        {categoryNames.map((cat, index) => (\n          <React.Fragment key={index}>\n            <thead className=\"list-name-homepage category-name-display\">\n              {cat.name}\n            </thead>\n            <tbody>{loadTheItems(cat.id)}</tbody>\n          </React.Fragment>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayListContent;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport {\n  addShoppingItem,\n  addNewCategory,\n  addCategoryToDisplayedList,\n} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport CreatableSelect from \"react-select/creatable\";\n\nconst SelectCategories = (props) => {\n  const [selectedCategories, setSelectedCategories] = useState(null);\n  const [errorCategoryAlreadyExists, setError] = useState(null);\n  const dispatch = useDispatch();\n  const userCategoriesLength = useSelector(\n    (store) => store.user.categories.length\n  );\n  const categoryNames = useSelector((store) => [\n    ...store.user.categories.map((cat) => cat.name),\n  ]);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.lists.listDisplayed.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.label };\n  });\n  const { categories } = props;\n\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories, categoryNames]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <CreatableSelect\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            if (!event.__isNew__) setSelectedCategories(event.value);\n            else {\n              const alreadyThere = categoryNames.includes(event.label);\n              if (!alreadyThere) {\n                setError(null);\n                dispatch(addNewCategory(event.label));\n                dispatch(addCategoryToDisplayedList(event.label));\n                setSelectedCategories(userCategoriesLength);\n              } else {\n                setError(\n                  \"A category with that name already exists! Please link it to this list, if needed.\"\n                );\n              }\n            }\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />\n      <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n    </div>\n  );\n};\n\nconst AddShoppingItem = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n\n  const [itemName, setItemName] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [errorItemName, setErrorItemName] = useState(null);\n  const [errorItemNameLength, setErrorItemLength] = useState(null);\n  const [isFav, setFav] = useState(false);\n\n  const listId = useSelector((store) => store.lists.listDisplayed.id);\n\n  const itemNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (itemName) {\n      if (itemName.length < 3) setErrorItemLength(\"The item name is too short\");\n      if (itemName.length > 32) setErrorItemLength(\"The item name is too long\");\n      if (itemName.length >= 3 && itemName.length <= 32)\n        setErrorItemLength(null);\n    }\n  }, [itemName]);\n\n  const dispatch = useDispatch();\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    dispatch(\n      addShoppingItem(listId, itemName, formData.description, isFav, categories)\n    );\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorItemName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\">\n            <strong>Add a shopping item</strong>\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Insert the name of the new todo list\"\n                ref={itemNameRef}\n                className=\"input input-new-item\"\n                style={{ margin: \"0\" }}\n                onChange={(event) => {\n                  setItemName(event.target.value);\n                }}\n              />\n              <HeartTwoTone\n                twoToneColor={isFav ? \"#faaca8\" : \"#fff\"}\n                onClick={() => {\n                  setFav(!isFav);\n                }}\n                style={{ marginLeft: \"1rem\", fontSize: \"1.5em\" }}\n              />\n            </div>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorItemName}\n            </p>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorItemNameLength}\n            </p>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Insert a description\"\n              ref={register({\n                required: {\n                  value: false,\n                },\n              })}\n              className=\"input input-new-item input-description scroll-items\"\n            />\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new item\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error && !errorItemNameLength) e.preventDefault();\n                  else {\n                    onClose();\n                  }\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default AddShoppingItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport {\n  addShoppingItem,\n  addNewCategory,\n  addCategoryToDisplayedList,\n} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport CreatableSelect from \"react-select/creatable\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nconst SelectCategories = (props) => {\n  const [selectedCategories, setSelectedCategories] = useState(null);\n  const [errorCategoryAlreadyExists, setError] = useState(null);\n  const categoryNames = useSelector((store) => [\n    ...store.user.categories.map((cat) => cat.name),\n  ]);\n  const dispatch = useDispatch();\n  const userCategoriesLength = useSelector(\n    (store) => store.user.categories.length\n  );\n  const categoriesFromRedux = useSelector((store) =>\n    store.lists.listDisplayed.categories\n      ? [...store.lists.listDisplayed.categories]\n      : []\n  );\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.id, label: cat.label };\n  });\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <CreatableSelect\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            if (!event.__isNew__) setSelectedCategories(event.value);\n            else {\n              const alreadyThere = categoryNames.includes(event.label);\n              if (!alreadyThere) {\n                setError(null);\n                dispatch(addNewCategory(event.label));\n                dispatch(addCategoryToDisplayedList(event.label));\n                setSelectedCategories(userCategoriesLength);\n              } else {\n                setError(\n                  \"A category with that name already exists! Please link it to this list, if needed.\"\n                );\n              }\n            }\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />\n      <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n    </div>\n  );\n};\n\nconst AddShoppingItem = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n  // what kind of list is the user adding\n  //which categories\n  const [categories, setCategories] = useState(null);\n  // who is this shared with\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error a category wasn't selected\n  //const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const [isFav, setFav] = useState(false);\n\n  const listId = useSelector((store) => store.lists.listDisplayed.id);\n\n  const [startDate, setStartDate] = useState(\n    //setHours(setMinutes(new Date(), 30), 17)\n    null\n  );\n  /*\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Seleziona delle categorie\");\n  }, []);\n  */\n  const dispatch = useDispatch();\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    dispatch(\n      addShoppingItem(\n        listId,\n        formData.name,\n        formData.description,\n        isFav,\n        categories\n      )\n    );\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorListName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\">\n            <strong>Add a new task</strong>\n          </DialogTitle>\n          <DialogContent>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Insert the name of the new task\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: \"Please insert a name\",\n                  },\n                  minLength: {\n                    value: 3,\n                    message: \"Name too short\",\n                  },\n                  maxLength: {\n                    value: 32,\n                    message: \"Name too long\",\n                  },\n                })}\n                className=\"input input-new-item\"\n                style={{ margin: \"0\" }}\n              />\n              <HeartTwoTone\n                twoToneColor={isFav ? \"#faaca8\" : \"#fff\"}\n                onClick={() => {\n                  setFav(!isFav);\n                }}\n                style={{ marginLeft: \"1rem\", fontSize: \"1.5em\" }}\n              />\n            </div>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Insert a description\"\n              ref={register({\n                required: {\n                  value: false,\n                },\n              })}\n              className=\"input input-new-item input-description scroll-items\"\n            />\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <DatePicker\n              selected={startDate}\n              onChange={(event) => setStartDate(event)}\n              showTimeSelect\n              //minTime={setHours(setMinutes(new Date(), 0), 17)}\n              //maxTime={setHours(setMinutes(new Date(), 30), 20)}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              style={{ position: \"relative\", zIndex: \"9999\" }}\n              withPortal\n            />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new task\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error) e.preventDefault();\n                  else {\n                    onClose();\n                  }\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default AddShoppingItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DisplayListContent from \"./DisplayListContent\";\nimport CreateList from \"./Modals/CreateList\";\nimport { useModal } from \"react-modal-hook\";\nimport AddShoppingItem from \"./Modals/AddShoppingItem\";\nimport AddTodoItem from \"./Modals/AddTodoItem\";\nconst DisplayListHeader = (props) => {\n  const [\n    showAddShoppingItem,\n    hideAddShoppingItem,\n  ] = useModal(({ in: open, onExited }) => (\n    <AddShoppingItem\n      open={open}\n      onExited={onExited}\n      onClose={hideAddShoppingItem}\n    />\n  ));\n\n  const [\n    showAddTodoItem,\n    hideAddSTodoItem,\n  ] = useModal(({ in: open, onExited }) => (\n    <AddTodoItem open={open} onExited={onExited} onClose={hideAddSTodoItem} />\n  ));\n  return (\n    <div\n      className=\"category-name-in-list category-name-in-homepage\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n      }}\n    >\n      <h2 className=\"list-name-homepage\">{props.listName}</h2>\n      <button\n        className=\"button\"\n        onClick={\n          props.listType === \"shopping\" ? showAddShoppingItem : showAddTodoItem\n        }\n      >\n        {props.listType === \"shopping\" ? (\n          <span>Add item</span>\n        ) : (\n          <span>Add task</span>\n        )}\n      </button>\n    </div>\n  );\n};\n\nconst DisplayList = () => {\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n  return (\n    <div style={{ margin: \"1.5rem\" }}>\n      <DisplayListHeader\n        listName={selectedList.name}\n        listType={selectedList.type}\n        categories={selectedList.categories}\n      />\n      <DisplayListContent list={selectedList} />\n    </div>\n  );\n};\n\nexport default DisplayList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\n//import { ReactComponent as Image } from \"../../img/undraw_conceptual_idea_xw7k.svg\";\nimport DisplayList from \"./DisplayList\";\n\nconst ListNotSelected = (props) => {\n  const loadRightText = () => {\n    if (props.shoppingLists.length === 0 && props.todoLists.length === 0) {\n      return (\n        <h1 style={{ color: \"#ddd6f3\", textShadow: \" 0 0 20px #ddd6f3\" }}>\n          Create a list to start\n        </h1>\n      );\n    } else {\n      return <h1 className=\"select-list-text\">Select a list to start</h1>;\n    }\n  };\n\n  return (\n    <span\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/*<Image style={{ width: \"25vw\" }} />*/}\n      <div className=\"lds-heart\">\n        <div>{\"\"}</div>\n      </div>\n      {loadRightText()}\n    </span>\n  );\n};\n\nconst HomepageContent = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  const shoppingLists = useSelector((store) => store.lists.shoppingLists);\n  const todoLists = useSelector((store) => store.lists.todoLists);\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n\n  return (\n    <div style={{ width: \"75vw\" }}>\n      {shoppingLists.length === 0 ||\n      todoLists.length === 0 ||\n      // checks if object is empty\n      Object.keys(selectedList).length === 0 ? (\n        <ListNotSelected shoppingLists={shoppingLists} todoLists={todoLists} />\n      ) : (\n        <DisplayList />\n      )}\n    </div>\n  );\n};\nexport default HomepageContent;\n","// @flow\n\nimport React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\nimport MenuLists from \"./MenuLists\";\nimport HomepageContent from \"./HomepageContent\";\n\nconst Homepage = (_: void): React$Element<*> => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"profile-container\">\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100vw\",\n          maxHeight: \"100vh\",\n        }}\n      >\n        <div style={{ width: \"25vw\", maxWidth: \"25vw\" }}>\n          <MenuLists />\n        </div>\n        <HomepageContent />\n      </div>\n    </div>\n  );\n};\nexport default Homepage;\n","import React from \"react\";\nimport Login from \"./Pages/Login\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Style/style.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./Pages/Signup\";\nimport Profile from \"./Pages/Homepage/Homepage\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/profile/:username\">\n          <Profile />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN } from \"./loginActions\";\n\nconst initialState = {\n  username: null,\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        username: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import { SIGNUP } from \"./signupActions\";\n\nconst initialState = {};\n\nconst signupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNUP:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default signupReducer;\n","import {\n  LOAD_LISTS,\n  ADD_SHOPPING_LIST,\n  GET_TODOS,\n  ADD_TODOLIST,\n  CLEAN_LISTS,\n  CHANGE_CHECK_TODO,\n  CHANGE_CHECK_SHOPPING,\n  GET_USERS,\n  LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n  LOAD_TODO_LIST_IN_HOMEPAGE,\n  CLEAR_DISPLAYED_LIST,\n  ADD_ITEM_TO_SHOPPING_LIST,\n  ADD_NEW_CATEGORY_TO_LIST_DISPLAYED,\n  CHECK_ITEM,\n} from \"./listsActions\";\n\nconst initialState = {\n  shoppingLists: [],\n  todoLists: [],\n  //categories: [],\n  users: [],\n  listDisplayed: {},\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_LISTS:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case GET_TODOS:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_TODOLIST:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n\n    case CLEAN_LISTS:\n      return {\n        ...state,\n        categories: [],\n        todoLists: [],\n        shoppingLists: [],\n        listDisplayed: {},\n      };\n    case CHANGE_CHECK_SHOPPING:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case CHANGE_CHECK_TODO:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: [...action.payload],\n      };\n    case LOAD_SHOPPING_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case LOAD_TODO_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case CLEAR_DISPLAYED_LIST:\n      return {\n        ...state,\n        listDisplayed: {},\n      };\n    case ADD_ITEM_TO_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.newShoppingList],\n        listDisplayed: { ...action.newListDisplayed },\n      };\n    case ADD_NEW_CATEGORY_TO_LIST_DISPLAYED:\n      return {\n        ...state,\n        //categories: [...action.payload],\n        listDisplayed: { ...action.newListDisplayed },\n      };\n    case CHECK_ITEM:\n      return { ...state, listDisplayed: { ...action.payload } };\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import {\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  DELETE_CATEGORY,\n  GET_CATEGORIES,\n} from \"./userActions\";\n\nconst initialState = {\n  categories: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.payload],\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    case EDIT_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    case DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login/loginReducer\";\nimport signupReducer from \"./signup/signupReducer\";\nimport listsReducer from \"./lists/listsReducer\";\nimport userReducer from \"./user/userReducer\";\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  signup: signupReducer,\n  lists: listsReducer,\n  user: userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ModalProvider rootComponent={TransitionGroup}>\n      <App />\n    </ModalProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}