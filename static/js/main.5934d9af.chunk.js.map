{"version":3,"sources":["Redux/lists/listsActions.js","Pages/Login.jsx","Redux/login/loginActions.js","Pages/Signup.jsx","Redux/signup/signupActions.js","Pages/Homepage/Utilities/ShareWithUsers.jsx","Pages/Homepage/Modals/CreateList.jsx","Pages/Homepage/Header.jsx","Pages/Homepage/MenuLists.jsx","Pages/Homepage/DisplayListContent.jsx","Pages/Homepage/DisplayList.jsx","Pages/Homepage/HomepageContent.jsx","Pages/Homepage/Homepage.jsx","App.js","serviceWorker.js","Redux/login/loginReducer.js","Redux/signup/signupReducer.js","Redux/lists/listsReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["getCategories","type","payload","id","name","loadShoppingLists","items","description","isFav","category","isChecked","getTodoLists","addList","typeOfList","categories","sharingWith","dispatch","getState","existingShoppingLists","obj","length","push","addShoppingList","lists","shoppingLists","existingTodos","addTodoList","todoLists","loadSingleListInHomepage","listId","rightList","find","list","loadShoppingList","loadTodoList","Login","_","useForm","register","handleSubmit","errors","watch","useDispatch","history","useHistory","className","width","window","innerWidth","height","innerHeight","params","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","onSubmit","formData","username","password","localStorage","setItem","axios","post","then","response","data","userId","catch","error","console","log","message","getItem","toLocaleLowerCase","placeholder","ref","required","minLength","maxLength","to","Signup","useEffect","clear","email","onClick","goBack","ShareWithUsers","props","existingUsers","useSelector","state","users","delimiters","useState","userTags","setUserTags","errorUserDoesntExist","setErrorUser","ReactTags","tags","handleDelete","i","filter","tag","index","handleAddition","includes","text","allowUnique","classNames","tagInputField","tagInput","remove","selected","allowDragDrop","inputFieldPosition","autofocus","SelectListType","changeSelected","options","label","onChange","event","styles","menuPortal","base","zIndex","isSearchable","menuPortalTarget","document","body","isClearable","SelectCategories","categoriesFromRedux","selectedCategories","setSelectedCategories","reduxCategories","map","cat","isMulti","CreateList","createShoppingList","onClose","rest","existingShopppingListsNames","existingTodoListsNames","changeTypeOfList","setCategories","setSharingWith","errorListName","setErrorListName","errorTypeOfList","setErrorTypeOfList","Dialog","preventDefault","DialogTitle","DialogContent","style","marginBottom","position","Index","display","justifyContent","e","getElementById","alreadyThere","checkIfThereAreErrors","Header","useModal","open","in","onExited","hideCreateList","showCreateList","LogoutOutlined","ShoppingLists","showContent","setShowContent","cursor","ul","layout","initial","animate","exit","transition","key","TodoLists","MenuLists","DisplayListContent","DisplayListHeader","margin","listName","DisplayList","selectedList","store","listDisplayed","ListNotSelected","alignItems","flexDirection","color","textShadow","HomepageContent","Object","keys","Homepage","maxHeight","maxWidth","App","basename","process","exact","path","Boolean","location","hostname","match","initialState","loginReducer","action","signupReducer","listsReducer","rootReducer","combineReducers","login","signup","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","rootComponent","TransitionGroup","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5934d9af.chunk.js","sourcesContent":["export const LOAD_LISTS = \"LOAD_LISTS\";\nexport const ADD_SHOPPING_LIST = \"CREATE_SHOPPING_LIST\";\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODOLIST = \"ADD_TODOLIST\";\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\nexport const CLEAN_LISTS = \"CLEAN_LISTS\";\nexport const CHANGE_CHECK_SHOPPING = \"CHANGE_CHECK_SHOPPING\";\nexport const CHANGE_CHECK_TODO = \"CHANGE_CHECK_TODO\";\nexport const GET_USERS = \"GET_USERS\";\nexport const LOAD_SHOPPING_LIST_IN_HOMEPAGE = \"LOAD_SHOPPING_LIST_IN_HOMEPAGE\";\nexport const LOAD_TODO_LIST_IN_HOMEPAGE = \"LOAD_TODO_LIST_IN_HOMEPAGE\";\n\nexport const getCategories = () => {\n  const categories = [\n    { id: 0, name: \"Food\" },\n    { id: 1, name: \"Clothes\" },\n    { id: 2, name: \"Stuff\" },\n  ];\n  return {\n    type: GET_CATEGORIES,\n    payload: [...categories],\n  };\n};\nexport const loadShoppingLists = () => {\n  const lists = [\n    {\n      id: 0,\n      name: \"Cibo da comprare\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n    },\n    { id: 1, name: \"Seconda lista\", items: [] },\n    {\n      id: 2,\n      name: \"AAA\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 3,\n      name: \"BBB\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 4,\n      name: \"CCC\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n    {\n      id: 5,\n      name: \"DDD\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n    },\n  ];\n\n  return {\n    type: LOAD_LISTS,\n    payload: [...lists],\n  };\n};\n\nexport const getTodoLists = () => {\n  const todos = [\n    { id: 0, name: \"todo list 1\", items: [] },\n    { id: 1, name: \"todo list 2\", items: [] },\n  ];\n  return {\n    type: GET_TODOS,\n    payload: [...todos],\n  };\n};\n\nconst addTodoList = (existingTodos, name, categories, sharingWith) => {\n  const obj = {\n    id: existingTodos.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingTodos.push(obj);\n  return {\n    type: ADD_TODOLIST,\n    payload: [...existingTodos],\n  };\n};\n\nconst addShoppingList = (\n  existingShoppingLists,\n  name,\n  categories,\n  sharingWith\n) => {\n  const obj = {\n    id: existingShoppingLists.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingShoppingLists.push(obj);\n\n  return {\n    type: ADD_SHOPPING_LIST,\n    payload: [...existingShoppingLists],\n  };\n};\n\n/**\n * It invokes the right function to add a new list according to the type of the list that is being added (@see addShoppingList and @see addTodoList)\n * @param {string} name name of the list\n * @param {string} typeOfList either shopping or todo\n * @param {[number]} categories array containing the ids of the categories selected by the user\n * @param {[]} sharingWith array containing the users the list is shared with\n */\n\nexport const addList = (name, typeOfList, categories, sharingWith) => {\n  return (dispatch, getState) => {\n    if (typeOfList === \"shopping\") {\n      const existingLists = [...getState().lists.shoppingLists];\n      dispatch(addShoppingList(existingLists, name, categories, sharingWith));\n    } else if (typeOfList === \"todo\") {\n      const existingLists = [...getState().lists.todoLists];\n      dispatch(addTodoList(existingLists, name, categories, sharingWith));\n    }\n  };\n};\n\nexport const cleanLists = () => {\n  return {\n    type: CLEAN_LISTS,\n  };\n};\n\nexport const changeCheck = (itemsList, itemId, shoppingOrTodo) => {\n  console.log(\n    \"cose che arrivano all'action \",\n    itemsList,\n    itemId,\n    shoppingOrTodo\n  );\n  itemsList.forEach((element) => {\n    if (element.id === itemId) {\n      element.isChecked = !element.isChecked;\n    }\n  });\n  if (shoppingOrTodo === \"shopping\")\n    return {\n      type: CHANGE_CHECK_SHOPPING,\n      payload: [...itemsList],\n    };\n  else\n    return {\n      type: CHANGE_CHECK_TODO,\n      payload: [...itemsList],\n    };\n};\n\nexport const getUsers = () => {\n  const users = [\"boba\", \"banana\", \"prokkius\"];\n  return {\n    type: GET_USERS,\n    payload: [...users],\n  };\n};\n\n/**\n * Loads the right shopping list in the store so that the user can see it on their homnepace\n * @param {number}  listId id of the list\n * @param {Array} shoppingLists array of existing shopping lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadShoppingList = (listId, shoppingLists) => {\n  const rightList = shoppingLists.find((list) => list.id === listId);\n  if (rightList) {\n    return {\n      type: LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n/**\n * Loads the right todo list in the store so that the user can see it on their homepage\n * @param {number} listId id of tthe list\n * @param {Array} todoLists array of existing todo lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadTodoList = (listId, todoLists) => {\n  const rightList = todoLists.find((list) => list.id === listId);\n  if (rightList) {\n    return {\n      type: LOAD_TODO_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n\n/**\n * Loads a specific list in the store after the user clicked it from the sidebar.\n * This function is invoked after the user has clicked one of the lists on the homepage's sidebar. To load the correct list,\n * it invokes the right function: @see loadShoppingList() @see loadTodoList\n * @param {number} listId id of the list the user has chosen to display\n * @param {string} type type of list, whether it'' a shopping or a todo list\n */\nexport const loadSingleListInHomepage = (listId, type) => {\n  return (dispatch, getState) => {\n    if (type === \"shopping\") {\n      const shoppingLists = [...getState().lists.shoppingLists];\n      dispatch(loadShoppingList(listId, shoppingLists));\n    }\n    if (type === \"todo\") {\n      const todoLists = [...getState().lists.todoLists];\n      dispatch(loadTodoList(listId, todoLists));\n    }\n  };\n};\n","// @flow\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = (_: void): React$Element<*> => {\n  const { register, handleSubmit, errors, watch } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSubmit = (formData) => {\n    localStorage.setItem(\"username\", formData.username);\n    dispatch(login(formData.username, formData.password));\n    history.push(\n      `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n    );\n  };\n\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">\n          Hello{watch(\"username\") ? `, ${watch(\"username\")}` : null}\n        </h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={register({\n              required: { value: true, message: \"Please insert your username\" },\n              minLength: { value: 3, message: \"Username too short\" },\n              maxLength: { value: 32, message: \"Username too long\" },\n            })}\n            className=\"input\"\n          />\n\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            ref={register({\n              required: { value: true, message: \"Please insert your password\" },\n              minLength: { value: 3, message: \"Password too short\" },\n              maxLength: { value: 32, message: \"Password too long\" },\n            })}\n            className=\"input\"\n          />\n          {errors.username ? (\n            <p className=\"error-message\">{errors.username.message}</p>\n          ) : null}\n          {errors.password ? (\n            <p className=\"error-message\">{errors.password.message}</p>\n          ) : null}\n          <input type=\"submit\" value=\"Login\" className=\"button\" />\n          <Link to=\"/signup\">\n            <button className=\"button\">Sign up</button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nexport const LOGIN = \"LOGIN\";\n\nconst url = \"http://localhost:9487\";\n\nexport const login = (username, password) => {\n  // chiamata API per il login\n  localStorage.setItem(\"username\", username);\n  return (dispatch) => {\n    const obj = {\n      username,\n      password,\n    };\n    axios\n      .post(`${url}/users/login`, obj)\n      .then((response) => {\n        if (response) {\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"userId\", response.data.userId);\n        }\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n    return {\n      type: LOGIN,\n      payload: username,\n    };\n  };\n};\n","// @flow\n\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = (_: void): React$Element<*> => {\n  const { register, handleSubmit, errors, watch } = useForm();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n\n  const onSubmit = (formData) => {\n    localStorage.setItem(\"username\", formData.username);\n    console.log(localStorage);\n    dispatch(signup(formData.username, formData.email, formData.password));\n    history.push(\n      `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n    );\n  };\n  const history = useHistory();\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">\n          Welcome{watch(\"username\") ? `, ${watch(\"username\")}` : null}\n        </h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={register({\n              required: { value: true, message: \"Please insert your username\" },\n              minLength: { value: 3, message: \"Username too short\" },\n              maxLength: { value: 32, message: \"Username too long\" },\n            })}\n            className=\"input\"\n          />\n          <input\n            name=\"email\"\n            placeholder=\"Insert your email\"\n            type=\"email\"\n            ref={register({\n              required: { value: true, message: \"Please insert your email\" },\n              /*pattern: {\n                value: /S+@S+.S+/,\n                message: \"Email format not valid\",\n              },*/\n            })}\n            className=\"input\"\n          />\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            ref={register({\n              required: { value: true, message: \"Please insert your password\" },\n              minLength: { value: 3, message: \"Password too short\" },\n              maxLength: { value: 32, message: \"Password too long\" },\n            })}\n            className=\"input\"\n          />\n\n          {errors.username ? (\n            <p className=\"error-message\">{errors.username.message}</p>\n          ) : null}\n          {errors.password ? (\n            <p className=\"error-message\">{errors.password.message}</p>\n          ) : null}\n          {errors.email ? (\n            <p className=\"error-message\">{errors.email.message}</p>\n          ) : null}\n          <input type=\"submit\" value=\"Confirm\" className=\"button\" />\n          <button\n            onClick={() => {\n              history.goBack();\n            }}\n            className=\"button\"\n          >\n            Go back\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","export const SIGNUP = \"SIGNUP\";\n\n/**\n * Esegue la chiamata API per registrare un utente al db.\n * @param {string} name nome dell'utente\n * @param {string} email email dell'utente\n * @param {string} username username dell'utente\n * @param {string} password password dell'utente\n */\nexport const signup = (name, email, username, password) => {\n  /**\n   * chiamate api per registrare l'utente\n   * .then( (response) => {\n   *   localStorage.setItem('token', response.data.token);\n   *   localStorage.setItem('username', response.data.username)\n   * })\n   */\n  localStorage.setItem(\"username\", username);\n  return {\n    type: SIGNUP,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../../../Redux\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nconst ShareWithUsers = (props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n  const existingUsers = useSelector((state) => state.lists.users);\n  const keyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n  const delimiters = [keyCodes.comma, keyCodes.enter];\n  // I have the tags in userTags\n  const [userTags, setUserTags] = useState([]);\n\n  //error if user does not exist\n  const [errorUserDoesntExist, setErrorUser] = useState(null);\n\n  const { users } = props;\n  useEffect(() => {\n    users(userTags);\n    setErrorUser(null);\n  }, [userTags, users]);\n\n  const handleDelete = (i) => {\n    const tags = userTags.filter((tag, index) => index !== i);\n    setUserTags([...tags]);\n  };\n\n  const handleAddition = (tag) => {\n    if (existingUsers.includes(tag.text))\n      setUserTags((userTags) => [...userTags, tag]);\n    else setErrorUser(`The user ${tag.text} does not exist`);\n  };\n\n  return (\n    <div>\n      <p className=\"text-modal\">Share with</p>\n      <span>\n        <ReactTags\n          tags={userTags}\n          handleDelete={handleDelete}\n          handleAddition={handleAddition}\n          delimiters={delimiters}\n          allowUnique={true}\n          classNames={{\n            tagInputField: \"input input-new-list\",\n            tag: \"tag\",\n            tagInput: \"tagInput\",\n            tags: \"tags\",\n            remove: \"removeTag\",\n            selected: \"selected\",\n          }}\n          allowDragDrop={false}\n          inputFieldPosition=\"bottom\"\n          placeholder=\"Write the usernames\"\n          autofocus={false}\n        />\n      </span>\n      {errorUserDoesntExist ? (\n        <p className=\"error-message\">{errorUserDoesntExist}</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ShareWithUsers;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addList } from \"../../../Redux\";\n\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst SelectListType = (props) => {\n  const [selected, changeSelected] = useState(null);\n  const listTypes = [\n    { value: \"shopping\", label: \"Shopping list\" },\n    { value: \"todo\", label: \"Todo list\" },\n  ];\n\n  /**\n   * Callback to pass data from the child component SelectListType to parent component CreateList!\n   * I used the useEffect hook that gets called every time *selected* changes, and it calls the type function inside the props.\n   */\n\n  const { type } = props;\n  useEffect(() => {\n    type(selected);\n  }, [selected, type]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">What kind of list is this?</p>\n      <Select\n        options={listTypes}\n        onChange={(event) => {\n          changeSelected(event.value);\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />\n    </div>\n  );\n};\n\nconst SelectCategories = (props) => {\n  const categoriesFromRedux = useSelector((state) => state.lists.categories);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  //const [categories, selectCategories] = useState([...categoriesFromRedux]);\n  const reduxCategories = categoriesFromRedux.map((cat) => {\n    const obj = { value: cat.id, label: cat.name };\n    return obj;\n  });\n  /*useEffect(() => {\n    console.log(selectedCategories);\n\t}, [selectedCategories]);\n\n\t* inside selectedCategories there are the ids of the categories that the user selected\n\t*/\n\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <Select\n        options={reduxCategories}\n        isMulti\n        onChange={(event) => {\n          setSelectedCategories((selectedCategories) => [\n            ...selectedCategories,\n            event[event.length - 1].value,\n          ]);\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />{\" \"}\n    </div>\n  );\n};\n\nconst CreateList = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const existingShopppingListsNames = useSelector((state) =>\n    state.lists.shoppingLists.map((list) => list.name)\n  );\n  const existingTodoListsNames = useSelector((state) =>\n    state.lists.todoLists.map((list) => list.name)\n  );\n  // what kind of list is the user adding\n  const [typeOfList, changeTypeOfList] = useState(null);\n  //which categories\n  const [categories, setCategories] = useState([]);\n  // who is this shared with\n  const [sharingWith, setSharingWith] = useState([]);\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error a category wasnt selected\n  const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Seleziona delle categorie\");\n  }, [categories, typeOfList]);\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    console.log(\"onSubmit. type of list:\", typeOfList);\n\n    dispatch(addList(formData.name, typeOfList, categories, sharingWith));\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorListName(\"Please write a name\");\n      errors = true;\n    }\n    if (!typeOfList) {\n      setErrorTypeOfList(\"Select a type of list to add\");\n      errors = true;\n    }\n    if (typeOfList === \"shopping\") {\n      const alreadyThere = existingShopppingListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A shopping list with this name already exists\");\n        errors = true;\n      } else if (!alreadyThere) {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    if (typeOfList === \"todo\") {\n      const alreadyThere = existingTodoListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A shopping list with this name already exists\");\n        errors = true;\n      } else {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog {...rest} onClose={onClose}>\n      <div className=\"colorfulBg\">\n        <form\n          onSubmit={\n            !errorListName && !errorTypeOfList ? handleSubmit(onSubmit) : null\n          }\n        >\n          <DialogTitle className=\"modal-title\">\n            <strong>Create a new list</strong>\n          </DialogTitle>\n          <DialogContent>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              label=\"name\"\n              placeholder=\"Insert the name of the new todo list\"\n              ref={register({\n                required: {\n                  value: true,\n                  message: \"Please insert a name\",\n                },\n                minLength: {\n                  value: 3,\n                  message: \"Name too short\",\n                },\n                maxLength: {\n                  value: 32,\n                  message: \"Name too long\",\n                },\n              })}\n              className=\"input input-new-list\"\n            />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n            <SelectListType type={changeTypeOfList} />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorTypeOfList}\n            </p>\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <ShareWithUsers users={setSharingWith} />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new list\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error) e.preventDefault();\n                  else onClose();\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default CreateList;\n","import React from \"react\";\n\nimport Particles from \"react-particles-js\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport { useModal } from \"react-modal-hook\";\nimport CreateList from \"./Modals/CreateList\";\n\nconst Header = () => {\n  const history = useHistory();\n  const [\n    showCreateList,\n    hideCreateList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateList open={open} onExited={onExited} onClose={hideCreateList} />\n  ));\n  /*const [\n    showCreateShoppingList,\n    hideCreateShoppingList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateShoppingList\n      open={open}\n      onExited={onExited}\n      onClose={hideCreateShoppingList}\n    />\n  ));*/\n\n  return (\n    <div className=\"header-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`10vh`}\n        params={{\n          particles: {\n            number: {\n              value: 60,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 4,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"content-header-container\">\n        <header>\n          <span>\n            <h1 className=\"hello-profile\">\n              Hello, {localStorage.getItem(\"username\")}\n            </h1>\n          </span>\n          <span className=\"header-right\">\n            <button className=\"button header-button\" onClick={showCreateList}>\n              Create a new list\n            </button>\n\n            <LogoutOutlined\n              className=\"header-icon\"\n              onClick={() => {\n                localStorage.clear();\n                history.push(\"/\");\n              }}\n            />\n          </span>\n        </header>\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { loadSingleListInHomepage } from \"../../Redux\";\n//import Select from \"react-select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\n\nconst ShoppingLists = () => {\n  const shoppingLists = useSelector((state) => state.lists.shoppingLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        Shopping lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {shoppingLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      dispatch(loadSingleListInHomepage(list.id, \"shopping\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst TodoLists = () => {\n  const todoLists = useSelector((state) => state.lists.todoLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        To do lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {todoLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      dispatch(loadSingleListInHomepage(list.id, \"todo\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst MenuLists = () => {\n  return (\n    <div className=\"menu-lists\">\n      <div className=\"menu-lists-container\">\n        <AnimateSharedLayout>\n          <motion.ul layout initial={{ height: \"auto\" }}>\n            <ShoppingLists />\n            <TodoLists />\n          </motion.ul>\n        </AnimateSharedLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuLists;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {} from \"../../Redux\";\n\nconst DisplayListContent = (props) => {\n  console.log(props.list);\n  return (\n    <div>\n      <p>lista</p>\n    </div>\n  );\n};\n\nexport default DisplayListContent;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DisplayListContent from \"./DisplayListContent\";\n\nconst DisplayListHeader = (props) => {\n  return (\n    <div\n      className=\"category-name-in-list category-name-in-homepage\"\n      style={{ margin: \"1.5rem\" }}\n    >\n      <h2 className=\"list-name-homepage\">{props.listName}</h2>\n    </div>\n  );\n};\n\nconst DisplayList = () => {\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n  return (\n    <div>\n      <DisplayListHeader listName={selectedList.name} />\n      <DisplayListContent list={selectedList} />\n    </div>\n  );\n};\n\nexport default DisplayList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\n//import { ReactComponent as Image } from \"../../img/undraw_conceptual_idea_xw7k.svg\";\nimport DisplayList from \"./DisplayList\";\n\nconst ListNotSelected = (props) => {\n  const loadRightText = () => {\n    if (props.shoppingLists.length === 0 && props.todoLists.length === 0) {\n      return (\n        <h1 style={{ color: \"#ddd6f3\", textShadow: \" 0 0 20px #ddd6f3\" }}>\n          Create a list to start\n        </h1>\n      );\n    } else {\n      return (\n        <h1\n          style={{\n            color: \"#ddd6f3\",\n            textShadow: \"0 0 20px rgba(221,214,243,0.7)\",\n          }}\n        >\n          Select a list to start\n        </h1>\n      );\n    }\n  };\n\n  return (\n    <span\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/*<Image style={{ width: \"25vw\" }} />*/}\n      <div className=\"lds-heart\">\n        <div>{\"\"}</div>\n      </div>\n      {loadRightText()}\n    </span>\n  );\n};\n\nconst HomepageContent = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  const shoppingLists = useSelector((store) => store.lists.shoppingLists);\n  const todoLists = useSelector((store) => store.lists.todoLists);\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n\n  return (\n    <div style={{ width: \"75vw\" }}>\n      {shoppingLists.length === 0 ||\n      todoLists.length === 0 ||\n      // checks if object is empty\n      Object.keys(selectedList).length === 0 ? (\n        <ListNotSelected shoppingLists={shoppingLists} todoLists={todoLists} />\n      ) : (\n        <DisplayList />\n      )}\n    </div>\n  );\n};\nexport default HomepageContent;\n","// @flow\n\nimport React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\nimport MenuLists from \"./MenuLists\";\nimport HomepageContent from \"./HomepageContent\";\n\nconst Homepage = (_: void): React$Element<*> => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"profile-container\">\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100vw\",\n          maxHeight: \"100vh\",\n        }}\n      >\n        <div style={{ width: \"25vw\", maxWidth: \"25vw\" }}>\n          <MenuLists />\n        </div>\n        <HomepageContent />\n      </div>\n    </div>\n  );\n};\nexport default Homepage;\n","import React from \"react\";\nimport Login from \"./Pages/Login\";\nimport \"./Style/style.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./Pages/Signup\";\nimport Profile from \"./Pages/Homepage/Homepage\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/profile/:username\">\n          <Profile />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN } from \"./loginActions\";\n\nconst initialState = {\n  username: null,\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        username: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import { SIGNUP } from \"./signupActions\";\n\nconst initialState = {};\n\nconst signupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNUP:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default signupReducer;\n","import {\n  LOAD_LISTS,\n  ADD_SHOPPING_LIST,\n  GET_TODOS,\n  ADD_TODOLIST,\n  GET_CATEGORIES,\n  CLEAN_LISTS,\n  CHANGE_CHECK_TODO,\n  CHANGE_CHECK_SHOPPING,\n  GET_USERS,\n  LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n  LOAD_TODO_LIST_IN_HOMEPAGE,\n} from \"./listsActions\";\n\nconst initialState = {\n  shoppingLists: [],\n  todoLists: [],\n  categories: [],\n  users: [],\n  listDisplayed: {},\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_LISTS:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case GET_TODOS:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_TODOLIST:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.payload],\n      };\n    case CLEAN_LISTS:\n      return {\n        ...state,\n        categories: [],\n        todoLists: [],\n        shoppingLists: [],\n        listDisplayed: {},\n      };\n    case CHANGE_CHECK_SHOPPING:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case CHANGE_CHECK_TODO:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: [...action.payload],\n      };\n    case LOAD_SHOPPING_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case LOAD_TODO_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login/loginReducer\";\nimport signupReducer from \"./signup/signupReducer\";\nimport listsReducer from \"./lists/listsReducer\";\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  signup: signupReducer,\n  lists: listsReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ModalProvider rootComponent={TransitionGroup}>\n      <App />\n    </ModalProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}