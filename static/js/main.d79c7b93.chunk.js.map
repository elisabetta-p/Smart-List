{"version":3,"sources":["Redux/lists/listsActions.js","Redux/user/userActions.js","Pages/Login.jsx","Redux/login/loginActions.js","Pages/Signup.jsx","Redux/signup/signupActions.js","Pages/Homepage/Utilities/ShareWithUsers.jsx","Pages/Homepage/Modals/CreateList.jsx","Pages/Homepage/Utilities/ColorPicker.jsx","Pages/Homepage/Modals/ManageCategories.jsx","Pages/Homepage/Modals/ManageUserProfile.jsx","Pages/Homepage/Header.jsx","Pages/Homepage/MenuLists.jsx","Pages/Homepage/DisplayListContent.jsx","Pages/Homepage/Modals/AddShoppingItem.jsx","Pages/Homepage/Modals/AddTodoItem.jsx","Pages/Homepage/Modals/EditList.jsx","Pages/Homepage/DisplayList.jsx","Pages/Homepage/HomepageContent.jsx","Pages/Homepage/Homepage.jsx","App.js","serviceWorker.js","Redux/login/loginReducer.js","Redux/signup/signupReducer.js","Redux/lists/listsReducer.js","Redux/user/userReducer.js","Redux/rootReducer.js","Redux/store.js","index.js"],"names":["loadShoppingLists","type","payload","id","name","items","description","isFav","category","isChecked","categories","value","label","sharedWith","getTodoLists","todos","dueDate","Date","addList","typeOfList","sharingWith","dispatch","getState","existingShoppingLists","obj","length","push","addShoppingList","lists","shoppingLists","existingTodos","addTodoList","todoLists","loadSingleListInHomepage","listId","isAListAlreadySelected","listDisplayed","Object","keys","constructor","clearDisplayedList","rightList","find","list","loadShoppingList","loadTodoList","addCategoryToDisplayedList","categoryName","newListDisplayed","user","getCategories","color","addNewCategory","categoryColor","allCategories","Login","_","handleSubmit","useForm","useDispatch","history","useHistory","useState","username","setUsername","password","setPassword","usernameRef","useRef","errorMessage","setErrorMessage","useEffect","current","focus","className","width","window","innerWidth","height","innerHeight","params","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","onSubmit","localStorage","setItem","axios","post","then","response","data","userId","catch","error","console","log","message","login","getItem","toLocaleLowerCase","placeholder","ref","onChange","event","target","style","to","Signup","errorUsername","setErrorUsername","email","setEmail","errorEmail","setErrorEmail","errorPassword","setErrorPassword","clear","test","String","toLowerCase","signup","onClick","e","preventDefault","goBack","ShareWithUsers","props","existingUsers","useSelector","store","users","alreadySharingWith","newList","delimiters","userTags","setUserTags","errorUserDoesntExist","setErrorUser","formattedExistingSharedUsers","map","text","ReactTags","tags","handleDelete","i","filter","tag","index","handleAddition","includes","allowUnique","classNames","tagInputField","tagInput","remove","selected","allowDragDrop","inputFieldPosition","autofocus","SelectListType","changeSelected","options","styles","menuPortal","base","zIndex","isSearchable","menuPortalTarget","document","body","isClearable","SelectCategories","categoriesFromRedux","state","selectedCategories","setSelectedCategories","reduxCategories","cat","isMulti","CreateList","createShoppingList","onClose","rest","existingShopppingListsNames","existingTodoListsNames","listName","setListName","changeTypeOfList","setCategories","setSharingWith","errorListName","setErrorListName","errorListNameLength","setErrorListNameLength","errorTypeOfList","setErrorTypeOfList","listNameRef","useCallback","node","Dialog","aria-modal","role","aria-labelledby","aria-describedby","formData","DialogTitle","DialogContent","htmlFor","display","marginBottom","position","Index","justifyContent","errors","alreadyThere","getElementById","checkIfThereAreErrors","ColorPicker","setColor","onChangeComplete","rgb","EditCategory","selectedCategory","setSelectedCategory","newName","setNewName","categoryNames","errorNameModifiedCategory","setErrorModifiedCategory","categoriesInsideList","editedCategoryName","idToEdit","errorModifiedCategory","margin","DeleteCategory","ManageCategories","newCategory","setNewCategory","errorCategoryAlreadyExists","setErrorCategoryAlreadyExists","newEditedName","setNewEditedName","setIdToEdit","idToDelete","setIdToDelete","displayColorPicker","setDisplayColorPicker","setCategoryColor","r","g","b","a","existingCategories","forEach","editCategory","filteredCategories","Accordion","flexDirection","Toggle","eventKey","alignSelf","Collapse","alignItems","ManageUserProfile","profileName","setProfileName","Header","useModal","open","in","onExited","hideCreateList","showCreateList","hideManageCategories","showManageCategories","hideShowYourProfile","showYourProfile","LogoutOutlined","ShoppingLists","showContent","setShowContent","cursor","ul","layout","initial","animate","exit","transition","key","TodoLists","MenuLists","DisplayListContent","loadTheItems","categoryId","item","checked","aria-checked","itemId","HeartTwoTone","twoToneColor","minWidth","getDate","getMonth","getFullYear","getHours","getMinutes","textAlign","shoppingList","deleteItem","categoriesInListWithDuplicates","uniqueSet","Set","removeDuplicatesFromCategories","names","getTheNamesOfTheCategories","Fragment","backgroundImage","chroma","alpha","setError","userCategoriesLength","__isNew__","AddShoppingItem","register","itemName","setItemName","errorItemName","setErrorItemName","errorItemNameLength","setErrorItemLength","setFav","itemNameRef","newItem","newShoppingList","addShoppingItem","marginLeft","fontSize","required","AddTodoItem","startDate","setStartDate","dateAndTime","newTask","todoDisplayed","newTodoList","addTask","minLength","maxLength","showTimeSelect","dateFormat","withPortal","placeholderText","EditSelectedCategories","categoriesAlreadyAssociated","defaultValues","defaultValue","EditList","newCategories","newUsersItIsSharedWith","listType","listFromRedux","DisplayListHeader","hideAddShoppingItem","showAddShoppingItem","hideAddSTodoItem","showAddTodoItem","hideEditList","showEditList","alignContent","DisplayList","selectedList","ListNotSelected","textShadow","HomepageContent","Homepage","maxHeight","maxWidth","App","basename","process","exact","path","Boolean","location","hostname","match","initialState","loginReducer","action","signupReducer","listsReducer","userReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","rootComponent","TransitionGroup","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8SAqBaA,EAAoB,WA8S/B,MAAO,CACLC,KApUsB,aAqUtBC,QAAQ,GAAD,OA/SK,CACZ,CACEC,GAAI,EACJC,KAAM,mBACNC,MAAO,CACL,CACEF,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,SACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,SACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,SACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,IAGfC,WAAY,CACV,CAAEC,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,WACnB,CAAED,MAAO,EAAGC,MAAO,UAErBC,WAAY,CAAC,WAAY,SAE3B,CACEV,GAAI,EACJC,KAAM,gBACNC,MAAO,GACPK,WAAY,CAAC,CAAEP,GAAI,EAAGS,MAAO,UAE/B,CACET,GAAI,EACJC,KAAM,MACNM,WAAY,CACV,CAAEC,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,WACnB,CAAED,MAAO,EAAGC,MAAO,UAErBP,MAAO,CACL,CACEF,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,SACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,SACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,SACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,IAGfI,WAAY,IAEd,CACEV,GAAI,EACJC,KAAM,MACNM,WAAY,CAAC,CAAEC,MAAO,EAAGC,MAAO,SAChCP,MAAO,CACL,CACEF,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,IAGfI,WAAY,CAAC,WAEf,CACEV,GAAI,EACJC,KAAM,MACNM,WAAY,CAAC,CAAEC,MAAO,EAAGC,MAAO,SAChCP,MAAO,CACL,CACEF,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,IAGfI,WAAY,IAEd,CACEV,GAAI,EACJC,KAAM,MACNM,WAAY,CACV,CAAEC,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,WACnB,CAAED,MAAO,EAAGC,MAAO,UAErBP,MAAO,CACL,CACEF,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,GAEb,CACEN,GAAI,EACJC,KAAM,WACNE,YAAa,cACbC,OAAO,EACPC,SAAU,EACVC,WAAW,IAGfI,WAAY,QAULC,EAAe,WAC1B,IAAMC,EAAQ,CACZ,CACEZ,GAAI,EACJC,KAAM,cACNC,MAAO,CACL,CACED,KAAM,SACNG,OAAO,EACPD,YAAa,cACbU,QAAS,IAAIC,KAAK,KAAM,EAAG,GAAI,GAAI,GAAI,GAAI,GAC3CJ,WAAY,CAAC,YACbL,SAAU,IAGdE,WAAY,CACV,CAAEC,MAAO,EAAGC,MAAO,QACnB,CAAED,MAAO,EAAGC,MAAO,aAGvB,CACET,GAAI,EACJC,KAAM,cACNC,MAAO,GACPK,WAAY,CAAC,CAAEC,MAAO,EAAGC,MAAO,WAGpC,MAAO,CACLX,KAnWqB,YAoWrBC,QAAQ,GAAD,OAAMa,KAgDJG,EAAU,SAACd,EAAMe,EAAYT,EAAYU,GACpD,OAAO,SAACC,EAAUC,GAChB,GAAmB,aAAfH,EAEFE,EAjCkB,SACtBE,EACAnB,EACAM,EACAU,GAEA,IAAMI,EAAM,CACVrB,GAAIoB,EAAsBE,OAC1BrB,KAAMA,EACNM,WAAW,YAAKA,GAChBU,YAAY,YAAKA,GACjBf,MAAO,IAIT,OAFAkB,EAAsBG,KAAKF,GAEpB,CACLvB,KAxY6B,uBAyY7BC,QAAQ,YAAKqB,IAgBFI,CADU,YAAOL,IAAWM,MAAMC,eACHzB,EAAMM,EAAYU,SACrD,GAAmB,SAAfD,EAAuB,CAEhCE,EAnDc,SAACS,EAAe1B,EAAMM,EAAYU,GACpD,IAAMI,EAAM,CACVrB,GAAI2B,EAAcL,OAClBrB,KAAMA,EACNM,WAAW,YAAKA,GAChBU,YAAY,YAAKA,GACjBf,MAAO,IAGT,OADAyB,EAAcJ,KAAKF,GACZ,CACLvB,KAjXwB,eAkXxBC,QAAQ,YAAK4B,IAwCFC,CADU,YAAOT,IAAWM,MAAMI,WACP5B,EAAMM,EAAYU,OA2E/Ca,EAA2B,SAACC,EAAQjC,GAC/C,OAAO,SAACoB,EAAUC,GAEhB,IAAMa,EAAsB,eAAQb,IAAWM,MAAMQ,eAOrD,GALiD,IAA/CC,OAAOC,KAAKH,GAAwBV,QACpCU,EAAuBI,cAAgBF,QAEvChB,EAASmB,KAEE,aAATvC,EAAqB,CACvB,IAAM4B,EAAa,YAAOP,IAAWM,MAAMC,eAC3CR,EA9CmB,SAACa,EAAQL,GAChC,IAAMY,EAAYZ,EAAca,MAAK,SAACC,GAAD,OAAUA,EAAKxC,KAAO+B,KAE3D,GADAO,EAAUxC,KAAO,WACbwC,EACF,MAAO,CACLxC,KAncwC,iCAocxCC,QAAQ,eAAMuC,IAwCLG,CAAiBV,EAAQL,IAEpC,GAAa,SAAT5B,EAAiB,CACnB,IAAM+B,EAAS,YAAOV,IAAWM,MAAMI,WACvCX,EAlCe,SAACa,EAAQF,GAC5B,IAAMS,EAAYT,EAAUU,MAAK,SAACC,GAAD,OAAUA,EAAKxC,KAAO+B,KAEvD,GADAO,EAAUxC,KAAO,OACbwC,EACF,MAAO,CACLxC,KAldoC,6BAmdpCC,QAAQ,eAAMuC,IA4BLI,CAAaX,EAAQF,OAK9BQ,EAAqB,WACzB,MAAO,CACLvC,KArfgC,yBAwhBvB6C,EAA6B,SAACC,GACzC,OAAO,SAAC1B,EAAUC,GAChB,IAAM0B,EAAgB,eAAQ1B,IAAWM,MAAMQ,eAC3Cd,IAAWM,MAAMQ,cAAc1B,WACjCsC,EAAiBtC,WAAjB,sBACKY,IAAWM,MAAMQ,cAAc1B,YADpC,CAEE,CAAEP,GAAImB,IAAW2B,KAAKvC,WAAWe,OAAQb,MAAOmC,KAGlDC,EAAiBtC,WAAa,CAC5B,CAAEP,GAAImB,IAAW2B,KAAKvC,WAAWe,OAAQb,MAAOmC,IAGpD1B,EAAS,CACPpB,KAniBJ,qCAoiBI+C,iBAAiB,eAAMA,OC5iBhBE,EAAgB,WAO3B,MAAO,CACLjD,KAV0B,iBAW1BC,QAAQ,GAAD,OARU,CACjB,CAAES,MAAO,EAAGP,KAAM,OAAQ+C,MAAO,2BACjC,CAAExC,MAAO,EAAGP,KAAM,UAAW+C,MAAO,2BACpC,CAAExC,MAAO,EAAGP,KAAM,QAAS+C,MAAO,0BAClC,CAAExC,MAAO,EAAGP,KAAM,MAAO+C,MAAO,+BAevBC,EAAiB,SAACL,EAAcM,GAC3C,OAAO,SAAChC,EAAUC,GAKhB,IAAMgC,EAAa,sBACdhC,IAAW2B,KAAKvC,YADF,CAEjB,CACEC,MAAOW,IAAW2B,KAAKvC,WAAWe,OAClCrB,KAAM2C,EACNI,MAAOE,KAIXhC,EAAS,CACPpB,KAzCsB,eA0CtBC,QAAQ,YAAKoD,O,kCC6FJC,EAhID,SAACC,GAA+B,IACpCC,EAAiBC,cAAjBD,aACFpC,EAAWsC,cACXC,EAAUC,cAH2B,EAKXC,mBAAS,MALE,mBAKpCC,EALoC,KAK1BC,EAL0B,OAMXF,mBAAS,MANE,mBAMpCG,EANoC,KAM1BC,EAN0B,KAOrCC,EAAcC,iBAAO,MAPgB,EASHN,mBAAS,MATN,mBASpCO,EAToC,KAStBC,EATsB,KAU3CC,qBAAU,WACRJ,EAAYK,QAAQC,UACnB,IAEHF,qBAAU,WACJR,GAAYE,GAAUK,EAAgB,QACzC,CAACP,EAAUE,IAcd,OACE,yBAAKS,UAAU,mBACb,kBAAC,IAAD,CACEC,MAAK,UAAKC,OAAOC,WAAZ,MACLC,OAAM,UAAKF,OAAOG,YAAZ,MACNC,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNvE,MAAO,IACPwE,QAAS,CACPC,QAAQ,IAGZC,KAAM,CACJ1E,MAAO,EACP2E,QAAQ,EACRC,KAAM,CACJC,MAAO,EACPC,SAAU,KAGdC,YAAa,CACXN,QAAQ,GAEVO,KAAM,CACJL,QAAQ,EACRE,MAAO,EACPI,UAAW,MACXC,SAAU,QAGdC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPZ,QAAQ,EACRa,KAAM,UAERC,QAAS,CACPd,QAAQ,EACRa,KAAM,YAGVE,MAAO,CACLC,OAAQ,CACNC,SAAU,IACVC,SAAU,EACVjB,KAAM,EACNkB,QAAS,GAEXC,QAAS,CACPH,SAAU,IACVC,SAAU,QAMpB,yBAAK5B,UAAU,wBACb,wBAAIA,UAAU,SAAd,QAA4BX,EAAQ,YAAQA,GAAa,MACzD,0BAAM0C,SAAUhD,GAvEL,WACfiD,aAAaC,QAAQ,WAAY5C,GAC7BA,GAAYE,IAAaI,GAC3BhD,ECtBe,SAAC0C,EAAUE,GAG9B,OADAyC,aAAaC,QAAQ,WAAY5C,GAC1B,SAAC1C,GACN,IAAMG,EAAM,CACVuC,WACAE,YAaF,OAXA2C,IACGC,KADH,UAVQ,wBAUR,gBAC8BrF,GAC3BsF,MAAK,SAACC,GACDA,IACFL,aAAaC,QAAQ,WAAYI,EAASC,KAAKjD,UAC/C2C,aAAaC,QAAQ,SAAUI,EAASC,KAAKC,YAGhDC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EAAMG,YAEf,CACLrH,KAxBe,QAyBfC,QAAS6D,IDCAwD,CAAMxD,EAAUE,IACzBL,EAAQlC,KAAR,mBACcgF,aAAac,QAAQ,YAAYC,uBAG/CnD,EAAgB,0CA+D0BI,UAAU,QAChD,2BACEtE,KAAK,WACLsH,YAAY,uBACZzH,KAAK,OACL0H,IAAKxD,EACLO,UAAU,QACVkD,SAAU,SAACC,GACT7D,EAAY6D,EAAMC,OAAOnH,UAI7B,2BACEP,KAAK,WACLsH,YAAY,uBACZzH,KAAK,WACLyE,UAAU,QACVkD,SAAU,SAACC,GACT3D,EAAY2D,EAAMC,OAAOnH,UAG7B,uBAAG+D,UAAU,iBAAiBL,GAC9B,2BACEpE,KAAK,SACLU,MAAM,QACN+D,UAAU,SACVqD,MAAO,CAAEpD,MAAO,YAElB,kBAAC,IAAD,CAAMqD,GAAG,WACP,4BAAQtD,UAAU,SAASqD,MAAO,CAAEpD,MAAO,WAA3C,gBE2DGsD,G,qBAjLA,SAACzE,GAA+B,IACrCC,EAAiBC,cAAjBD,aACFpC,EAAWsC,cAF2B,EAGZG,mBAAS,MAHG,mBAGrCC,EAHqC,KAG3BC,EAH2B,OAIFF,mBAAS,MAJP,mBAIrCoE,EAJqC,KAItBC,EAJsB,OAKlBrE,mBAAS,MALS,mBAKrCsE,EALqC,KAK9BC,EAL8B,OAMRvE,mBAAS,MAND,mBAMrCwE,EANqC,KAMzBC,EANyB,OAOZzE,mBAAS,MAPG,mBAOrCG,EAPqC,KAO3BC,EAP2B,OAQFJ,mBAAS,MARP,mBAQrC0E,EARqC,KAQtBC,EARsB,KAStCtE,EAAcC,mBAEpBG,qBAAU,WACRmC,aAAagC,QACbvE,EAAYK,QAAQC,UACnB,IAEHF,qBAAU,WACR,GAAI6D,EAAO,CACK,oJACHO,KAAKC,OAAOR,GAAOS,eAG5BN,EAAc,MAFdA,EAAc,6BAKjB,CAACH,IACJ7D,qBAAU,WACJR,IACEA,EAAStC,OAAS,GACpB0G,EAAiB,oCACfpE,EAAStC,OAAS,IACpB0G,EAAiB,mCACfpE,EAAStC,QAAU,GAAKsC,EAAStC,QAAU,IAAI0G,EAAiB,SAErE,CAACpE,IACJQ,qBAAU,WACJN,IACEA,EAASxC,OAAS,GACpBgH,EAAiB,oCACfxE,EAASxC,OAAS,IACpBgH,EAAiB,mCACfxE,EAASxC,QAAU,GAAKwC,EAASxC,QAAU,IAAIgH,EAAiB,SAErE,CAACxE,IAEJ,IAOML,EAAUC,cAChB,OACE,yBAAKa,UAAU,mBACb,kBAAC,IAAD,CACEC,MAAK,UAAKC,OAAOC,WAAZ,MACLC,OAAM,UAAKF,OAAOG,YAAZ,MACNC,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNvE,MAAO,IACPwE,QAAS,CACPC,QAAQ,IAGZC,KAAM,CACJ1E,MAAO,EACP2E,QAAQ,EACRC,KAAM,CACJC,MAAO,EACPC,SAAU,KAGdC,YAAa,CACXN,QAAQ,GAEVO,KAAM,CACJL,QAAQ,EACRE,MAAO,EACPI,UAAW,MACXC,SAAU,QAGdC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPZ,QAAQ,EACRa,KAAM,UAERC,QAAS,CACPd,QAAQ,EACRa,KAAM,YAGVE,MAAO,CACLC,OAAQ,CACNC,SAAU,IACVC,SAAU,EACVjB,KAAM,EACNkB,QAAS,GAEXC,QAAS,CACPH,SAAU,IACVC,SAAU,QAMpB,yBAAK5B,UAAU,wBACb,wBAAIA,UAAU,SAAd,UAA8BX,EAAQ,YAAQA,GAAa,MAC3D,0BACE0C,UACGyB,IACAI,IACAE,GACDzE,GACAE,GACAmE,EACI3E,GA3EG,WACfiD,aAAaC,QAAQ,WAAY5C,GACjC1C,EC7CkB,SAACjB,EAAMgI,EAAOrE,EAAUE,GAS5C,OADAyC,aAAaC,QAAQ,WAAY5C,GAC1B,CACL9D,KAnBkB,UDsDT6I,CAAO/E,EAAUqE,EAAOnE,IACjCL,EAAQlC,KAAR,mBACcgF,aAAac,QAAQ,YAAYC,yBAwEnC,KAEN/C,UAAU,QAEV,2BACEtE,KAAK,WACLsH,YAAY,uBACZzH,KAAK,OACL0H,IAAKxD,EACLO,UAAU,QACVkD,SAAU,SAACC,GAAD,OAAW7D,EAAY6D,EAAMC,OAAOnH,UAEhD,uBAAG+D,UAAU,iBAAiBwD,GAC9B,2BACE9H,KAAK,QACLsH,YAAY,oBACZzH,KAAK,QACL2H,SAAU,SAACC,GACTQ,EAASR,EAAMC,OAAOnH,QAExB+D,UAAU,UAEZ,uBAAGA,UAAU,iBAAiB4D,GAC9B,2BACElI,KAAK,WACLsH,YAAY,uBACZzH,KAAK,WACL2H,SAAU,SAACC,GACT3D,EAAY2D,EAAMC,OAAOnH,QAE3B+D,UAAU,UAEZ,uBAAGA,UAAU,iBAAiB8D,GAE9B,2BACEvI,KAAK,SACLU,MAAM,UACN+D,UAAU,SACVqD,MAAO,CAAEpD,MAAO,YAElB,4BACEoE,QAAS,SAACC,GACRA,EAAEC,iBACFrF,EAAQsF,UAEVxE,UAAU,SACVqD,MAAO,CAAEpD,MAAO,WANlB,gB,qEE3EKwE,EAxFQ,SAACC,GACtB,IAAM/H,EAAWsC,cAEjBY,qBAAU,WACRlD,ENibK,CACLpB,KApbqB,YAqbrBC,QAAQ,GAAD,OAHK,CAAC,OAAQ,SAAU,iBM/a9B,CAACmB,IAEJ,IAAMgI,EAAgBC,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAM4H,SAEnDC,EAAqBH,aAAY,SAACC,GACtC,OAAIH,EAAMM,QAAgB,GACdH,EAAM3H,MAAMQ,cAAcvB,cAQlC8I,EAAa,CAJV,IACA,IAhBuB,EAsBA7F,mBAAS,IAtBT,mBAsBzB8F,EAtByB,KAsBfC,EAtBe,OAyBa/F,mBAAS,MAzBtB,mBAyBzBgG,EAzByB,KAyBHC,EAzBG,KA2BxBP,EAAUJ,EAAVI,MACRjF,qBAAU,WACRiF,EAAMI,GACNG,EAAa,QACZ,CAACH,EAAUJ,IAEdjF,qBAAU,WACR,GAAIkF,EAAoB,CACtB,IAAMO,EAA+BP,EAAmBQ,KAAI,SAAChH,GAC3D,IAAMzB,EAAM,CAAErB,GAAI8C,EAAMiH,KAAMjH,GAC9B,OAAO,eAAKzB,MAEdqI,EAAY,YAAIG,OAEjB,IAaH,OACE,6BAEE,8BACE,kBAACG,EAAA,YAAD,CACEhK,GAAG,eACHiK,KAAMR,EACNS,aAlBa,SAACC,GACpB,IAAMF,EAAOR,EAASW,QAAO,SAACC,EAAKC,GAAN,OAAgBA,IAAUH,KACvDT,EAAY,YAAIO,KAiBVM,eAde,SAACF,GAClBnB,EAAcsB,SAASH,EAAIN,MAC7BL,GAAY,SAACD,GAAD,4BAAkBA,GAAlB,CAA4BY,OACrCT,EAAa,YAAD,OAAaS,EAAIN,KAAjB,qBAYXP,WAAYA,EACZiB,aAAa,EACbC,WAAY,CACVC,cAAe,uBACfN,IAAK,MACLO,SAAU,WACVX,KAAM,OACNY,OAAQ,YACRC,SAAU,YAEZC,eAAe,EACfC,mBAAmB,SACnBzD,YACiB,SAAf0B,EAAMnJ,KAAkB,qBAAuB,qBAEjDmL,WAAW,KAGdtB,EACC,uBAAGpF,UAAU,iBAAiBoF,GAC5B,OC/EJuB,EAAiB,SAACjC,GAAW,IAAD,EACGtF,mBAAS,MADZ,mBACzBmH,EADyB,KACfK,EADe,KAYxBrL,EAASmJ,EAATnJ,KAKR,OAJAsE,qBAAU,WACRtE,EAAKgL,KACJ,CAACA,EAAUhL,IAGZ,6BACE,uBAAGyE,UAAU,cAAb,8BACA,kBAAC,IAAD,CACEvE,GAAG,cACHoL,QApBY,CAChB,CAAE5K,MAAO,WAAYC,MAAO,iBAC5B,CAAED,MAAO,OAAQC,MAAO,cAmBpBgH,SAAU,SAACC,GACLA,GACFyD,EAAezD,EAAMlH,QAGzB6K,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZC,iBAAkBC,SAASC,KAC3BrH,UAAU,kBACVsH,aAAW,MAMbC,EAAmB,SAAC7C,GACxB,IAAM8C,EAAsB5C,aAAY,SAAC6C,GAAD,OAAWA,EAAMlJ,KAAKvC,cAD5B,EAEkBoD,mBAAS,IAF3B,mBAE3BsI,EAF2B,KAEPC,EAFO,KAI5BC,EAAkBJ,EAAoBjC,KAAI,SAACsC,GAC/C,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAInM,SAShCM,EAAe0I,EAAf1I,WAKR,OAJA6D,qBAAU,WACR7D,EAAW0L,KACV,CAACA,EAAoB1L,IAGtB,6BACE,uBAAGgE,UAAU,cAAb,6BACA,kBAAC,IAAD,CACEvE,GAAG,oBACHoL,QAASe,EACTE,SAAO,EACP5E,SAAU,SAACC,GACLA,GAA0B,IAAjBA,EAAMpG,QACjB4K,GAAsB,SAACD,GAAD,4BACjBA,GADiB,CAEpB,CACEjM,GAAI0H,EAAMA,EAAMpG,OAAS,GAAGd,MAC5BC,MAAOiH,EAAMA,EAAMpG,OAAS,GAAGb,aAKvC4K,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZC,iBAAkBC,SAASC,KAC3BrH,UAAU,kBACVsH,aAAW,IACV,MAsLMS,EAjLI,SAAC,GAAsD,EAApDC,mBAAqD,IAAjCC,EAAgC,EAAhCA,QAASjD,EAAuB,EAAvBA,QAAYkD,EAAW,0DAChEnJ,EAAiBC,cAAjBD,aACFpC,EAAWsC,cACXkJ,EAA8BvD,aAAY,SAAC6C,GAAD,OAC9CA,EAAMvK,MAAMC,cAAcoI,KAAI,SAACtH,GAAD,OAAUA,EAAKvC,WAEzC0M,EAAyBxD,aAAY,SAAC6C,GAAD,OACzCA,EAAMvK,MAAMI,UAAUiI,KAAI,SAACtH,GAAD,OAAUA,EAAKvC,WAP6B,EAUxC0D,mBAAS,MAV+B,mBAUjEiJ,EAViE,KAUvDC,EAVuD,OAYjClJ,mBAAS,MAZwB,mBAYjE3C,EAZiE,KAYrD8L,EAZqD,OAcpCnJ,mBAAS,IAd2B,mBAcjEpD,EAdiE,KAcrDwM,EAdqD,OAgBlCpJ,mBAAS,IAhByB,mBAgBjE1C,EAhBiE,KAgBpD+L,EAhBoD,OAkB9BrJ,mBAAS,MAlBqB,mBAkBjEsJ,EAlBiE,KAkBlDC,EAlBkD,OAoBlBvJ,mBAAS,MApBS,mBAoBjEwJ,EApBiE,KAoB5CC,EApB4C,OAsB1BzJ,mBAAS,MAtBiB,mBAsBjE0J,EAtBiE,KAsBhDC,EAtBgD,KAwBlEC,EAAcC,uBAAY,SAACC,GAClB,OAATA,GACFA,EAAKnJ,UAEN,IAEHF,qBAAU,WACH7D,GAAY+M,EAAmB,kCACnC,CAAC/M,EAAYS,IAEhBoD,qBAAU,WACS,KAAbwI,EACFM,EAAiB,uBACRN,IACLA,EAAStL,OAAS,GACpB8L,EAAuB,0BAErBR,EAAStL,OAAS,IACpB8L,EAAuB,yBAErBR,EAAStL,QAAU,IAAMsL,EAAStL,QAAU,GAC9C8L,EAAuB,SAG1B,CAACR,IAmDJ,OACE,kBAACc,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACTmB,aAAW,OACXC,KAAK,SACLC,kBAAgB,0BAChBC,mBAAiB,2BAEjB,yBAAKvJ,UAAU,cACb,0BACE+B,SACG2G,GAAkBI,GAAoBF,EAEnC,KADA7J,GA9DG,SAACyK,EAAUrG,GAC1BA,EAAMoB,iBAEN5H,EAASH,EAAQ6L,EAAU5L,EAAYT,EAAYU,QA+D7C,kBAAC+M,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,2BACtC,sDAEF,kBAACiO,EAAA,EAAD,CAAejO,GAAG,0BAChB,2BAAOkO,QAAQ,OAAOtG,MAAO,CAAEuG,QAAS,SAAxC,oBAGA,2BACEnO,GAAG,OACHF,KAAK,OACLG,KAAK,OACLsH,YAAY,uCACZC,IAAK+F,EACLhJ,UAAU,uBACVkD,SAAU,SAACC,GAAD,OAAWmF,EAAYnF,EAAMC,OAAOnH,UAEhD,uBAAG+D,UAAU,gBAAgBqD,MAAO,CAAEwG,aAAc,SACjDnB,GAEH,uBAAG1I,UAAU,gBAAgBqD,MAAO,CAAEwG,aAAc,SACjDjB,GAEH,2BAAOe,QAAQ,cAActG,MAAO,CAAEuG,QAAS,SAA/C,qDAGA,kBAAC,EAAD,CAAgBrO,KAAMgN,IACtB,uBAAGvI,UAAU,gBAAgBqD,MAAO,CAAEwG,aAAc,SACjDf,GAEH,2BAAOa,QAAQ,oBAAoBtG,MAAO,CAAEuG,QAAS,SAArD,mDAGA,kBAAC,EAAD,CACE5N,WAAYwM,EACZnF,MAAO,CAAEyG,SAAU,WAAYC,MAAO,UAExC,2BAAOJ,QAAQ,eAAetG,MAAO,CAAEuG,QAAS,SAAhD,gEAGA,kBAAC,EAAD,CAAgB9E,MAAO2D,EAAgBzD,QAASA,IAChD,0BAAM3B,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,WAC9C,2BACEzO,KAAK,SACLyE,UAAU,SACV/D,MAAM,mBACNoI,QAAS,SAACC,IAlGxB,WACE,IAAI2F,GAAS,EAKb,GAJKxN,IACHsM,EAAmB,gCACnBkB,GAAS,GAEQ,aAAfxN,EAA2B,CAC7B,IAAMyN,EAAe/B,EAA4BlC,SAC/CmB,SAAS+C,eAAe,QAAQlO,OAE9BiO,GACFvB,EAAiB,iDACjBsB,GAAS,GACCC,IACVvB,EAAiB,MACjBsB,GAAS,GAeb,MAZmB,SAAfxN,IACmB2L,EAAuBnC,SAC1CmB,SAAS+C,eAAe,QAAQlO,QAGhC0M,EAAiB,6CACjBsB,GAAS,IAETtB,EAAiB,MACjBsB,GAAS,IAGNA,GAqEqBG,IACDxB,GAAuBF,EAClCpE,EAAEC,iBACC0D,KAEP5E,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,kB,iBC9O3CK,EApBK,SAAC3F,GAAW,IAAD,EACHtF,qBADG,mBACtBX,EADsB,KACf6L,EADe,KAGrB3L,EAAkB+F,EAAlB/F,cAKR,OAJAkB,qBAAU,WACJpB,GAAOE,EAAcF,KACxB,CAACE,EAAeF,IAGjB,yBAAKuB,UAAU,gBACb,kBAAC,eAAD,CACEvB,MAAOA,EACP8L,iBAAkB,SAAC9L,GACjB6L,EAAS7L,EAAM+L,UCPnBC,EAAe,SAAC/F,GAAU,MAEkBtF,mBAAS,MAF3B,mBAEvBsL,EAFuB,KAELC,EAFK,OAGAvL,mBAAS,MAHT,mBAGvBwL,EAHuB,KAGdC,EAHc,KAIxBrD,EAAsB5C,aAAY,SAACC,GAAD,mBACnCA,EAAMtG,KAAKvC,eAEV8O,EAAgBlG,aAAY,SAACC,GAAD,OAChCA,EAAMtG,KAAKvC,WAAWuJ,KAAI,SAACzJ,GAAD,OAAcA,EAASJ,WARrB,EAUgC0D,mBAAS,MAVzC,mBAUvB2L,EAVuB,KAUIC,EAVJ,KAWxBC,EAAuBzD,EAAoBjC,KAAI,SAACsC,GACpD,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAInM,SAGtCI,EAIE4I,EAJF5I,SACAoP,EAGExG,EAHFwG,mBACAC,EAEEzG,EAFFyG,SACAC,EACE1G,EADF0G,sBAgBF,OAdAvL,qBAAU,WACR/D,EAAS4O,GACTQ,EAAmBN,GACnBQ,EAAsBL,KACrB,CACDL,EACA5O,EACAoP,EACAC,EACAP,EACAQ,EACAL,IAIA,yBAAK/K,UAAU,4BACb,2BAAO2J,QAAQ,uBAAuBtG,MAAO,CAAEuG,QAAS,SAAxD,wCAGA,kBAAC,IAAD,CACEnO,GAAG,uBACHoL,QAASoE,EACT/H,SAAU,SAACC,GACLA,GACFwH,EAAoBxH,EAAMlH,QAG9B6K,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZI,aAAW,EACXH,iBAAkBC,SAASC,KAC3BrH,UAAU,mBACVgD,YAAY,yCAEd,2BAAO2G,QAAQ,UAAUtG,MAAO,CAAEuG,QAAS,SAA3C,gDAGA,2BACEnO,GAAG,UACHF,KAAK,OACLG,KAAK,UACLsH,YAAY,sBACZhD,UAAU,uBACVqD,MAAO,CAAEgI,OAAQ,KACjBnI,SAAU,SAACC,GACL2H,EAAc7E,SAAS9C,EAAMC,OAAOnH,OACtC+O,EACE,6CAGFA,EAAyB,MACzBH,EAAW1H,EAAMC,OAAOnH,WAI9B,uBAAG+D,UAAU,iBAAiB+K,KAK9BO,EAAiB,SAAC5G,GAAU,MAEgBtF,mBAAS,MAFzB,mBAEzBsL,EAFyB,KAEPC,EAFO,KAM1BM,EAHsBrG,aAAY,SAACC,GAAD,mBACnCA,EAAMtG,KAAKvC,eAEiCuJ,KAAI,SAACsC,GACpD,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAInM,SAEhCI,EAAa4I,EAAb5I,SAKR,OAJA+D,qBAAU,WACR/D,EAAS4O,KACR,CAACA,EAAkB5O,IAGpB,8BACE,2BAAO6N,QAAQ,yBAAyBtG,MAAO,CAAEuG,QAAS,SAA1D,0CAGA,kBAAC,IAAD,CACEnO,GAAG,yBACHoL,QAASoE,EACT/H,SAAU,SAACC,GACLA,GACFwH,EAAoBxH,EAAMlH,QAG9B6K,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZI,aAAW,EACXH,iBAAkBC,SAASC,KAC3BrH,UAAU,kBACVgD,YAAY,6CA8LLuI,EAxLU,SAAC,GAA6C,EAA3CvD,mBAA4C,IAAxBC,EAAuB,EAAvBA,QAAYC,EAAW,gDAC7DnJ,EAAiBC,cAAjBD,aAD6D,EAG/BK,mBAAS,MAHsB,mBAG9DoM,EAH8D,KAGjDC,EAHiD,OAIDrM,mBAClE,MALmE,mBAI9DsM,EAJ8D,KAIlCC,EAJkC,OAQ3BvM,mBAAS,MARkB,mBAQ9DwM,EAR8D,KAQ/CC,EAR+C,OASrCzM,mBAAS,MAT4B,mBAS9D+L,EAT8D,KASpDW,EAToD,OAUX1M,mBAAS,MAVE,mBAU9DgM,EAV8D,KAUvCJ,EAVuC,OAYjC5L,mBAAS,MAZwB,mBAY9D2M,EAZ8D,KAYlDC,EAZkD,KAc/DrP,EAAWsC,cAEX6L,EAAgBlG,aAAY,SAACC,GAAD,OAChCA,EAAMtG,KAAKvC,WAAWuJ,KAAI,SAACsC,GAAD,OAASA,EAAInM,WAjB4B,EAoBjB0D,oBAAS,GApBQ,mBAoB9D6M,EApB8D,KAoB1CC,EApB0C,OAqB3B9M,mBAAS,MArBkB,mBAqB9DT,EArB8D,KAqB/CwN,EArB+C,KAmDrE,OACE,kBAAChD,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACToB,KAAK,SACLC,kBAAgB,0BAChBC,mBAAiB,4BACjBH,aAAW,SAEX,yBAAKpJ,UAAU,cACb,0BACE+B,SACE2J,GAA8BN,EAC1B,KACArM,GA1CG,SAACyK,EAAUrG,GR1EA,IAAC1H,EQ2E3B0H,EAAMoB,iBACFiH,GAAe7M,GACjBhC,EACE+B,EACE8M,EADY,eAEJ7M,EAAcyN,EAFV,aAEgBzN,EAAc0N,EAF9B,aAEoC1N,EAAc2N,EAFlD,aAEwD3N,EAAc4N,EAFtE,OAMdpB,GACFxO,ER3GsB,SAAClB,EAAImP,EAASjM,GACxC,OAAO,SAAChC,EAAUC,GAChB,IAAM4P,EAAkB,YAAO5P,IAAW2B,KAAKvC,YAC/CwQ,EAAmBC,SAAQ,SAAC5E,GACtBA,EAAI5L,QAAUR,IACZmP,IAAS/C,EAAInM,KAAOkP,GACpBjM,IAAekJ,EAAI/L,SAAW6C,OAGtChC,EAAS,CACPpB,KA/DuB,gBAgEvBC,QAAQ,YAAKgR,MQiGXE,CACEvB,EACAS,EAFU,eAGFjN,EAAcyN,EAHZ,YAGiBzN,EAAc0N,EAH/B,YAGoC1N,EAAc2N,EAHlD,YAGuD3N,EAAc4N,EAHrE,OAOZR,GACFpP,GR9FyBlB,EQ8FDsQ,ER7FrB,SAACpP,EAAUC,GAChB,IACM+P,EADkB,YAAO/P,IAAW2B,KAAKvC,YACD6J,QAC5C,SAACgC,GAAD,OAASA,EAAI5L,QAAUR,KAEzBkB,EAAS,CACPpB,KAjFyB,kBAkFzBC,QAAQ,YAAKmR,YQ+GT,kBAAClD,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,2BACtC,0DAEF,kBAACiO,EAAA,EAAD,CAAejO,GAAG,6BAChB,kBAACmR,EAAA,EAAD,CACEvJ,MAAO,CACLuG,QAAS,OACTiD,cAAe,SACfzM,OAAQ,SAGV,kBAACwM,EAAA,EAAUE,OAAX,CACEC,SAAS,IACT/M,UAAU,uBACVqD,MAAO,CAAE2J,UAAW,WAHtB,sBAOA,kBAACJ,EAAA,EAAUK,SAAX,CAAoBF,SAAS,KAC3B,yBAAK/M,UAAU,4BACb,2BAAO2J,QAAQ,OAAOtG,MAAO,CAAEuG,QAAS,SAAxC,uCAGA,yBACEvG,MAAO,CACLuG,QAAS,OACTsD,WAAY,SACZjN,MAAO,SAGT,2BACExE,GAAG,OACHF,KAAK,OACLG,KAAK,OACLsH,YAAY,sCACZhD,UAAU,uBACVqD,MAAO,CAAEgI,OAAQ,KACjBnI,SAAU,SAACC,GACL2H,EAAc7E,SAAS9C,EAAMC,OAAOnH,OACtC0P,EACE,8CAGFA,EAA8B,MAC9BF,EAAetI,EAAMC,OAAOnH,WAIlC,4BACE+D,UAAU,SACVqD,MAAO,CAAEpD,MAAO,QAChBoE,QAAS,WACP6H,GAAuBD,KAJ3B,cAUDA,EACC,kBAAC,EAAD,CAAatN,cAAewN,IAC1B,KAEJ,uBAAGnM,UAAU,iBAAiB0L,KAGlC,kBAACkB,EAAA,EAAUE,OAAX,CACEC,SAAS,IACT/M,UAAU,uBACVqD,MAAO,CAAE2J,UAAW,WAHtB,6BAOA,kBAACJ,EAAA,EAAUK,SAAX,CAAoBF,SAAS,KAC3B,6BAEE,kBAAC,EAAD,CACEjR,SAAUgQ,EACVZ,mBAAoBW,EACpBT,sBAAuBJ,MAI7B,kBAAC4B,EAAA,EAAUE,OAAX,CACEC,SAAS,IACT/M,UAAU,uBACVqD,MAAO,CAAE2J,UAAW,WAHtB,+BAOA,kBAACJ,EAAA,EAAUK,SAAX,CAAoBF,SAAS,KAC3B,yBAAK/M,UAAU,4BACb,kBAAC,EAAD,CAAgBlE,SAAUkQ,OAIhC,0BAAM3I,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,WAC9C,2BACEzO,KAAK,SACLyE,UAAU,SACV/D,MAAM,UACNoI,QAAS,SAACC,GACHoH,GAA+BN,EAE/B9G,EAAEC,iBADL0D,KAIJ5E,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,kBC1M3CmD,EA1FW,SAAC,GAA0B,IAAxBlF,EAAuB,EAAvBA,QAAYC,EAAW,6BACZ9I,mBAAS,MADG,mBAC3CgO,EAD2C,KAC9BC,EAD8B,KAE1CtO,EAAiBC,cAAjBD,aAIFgD,GAFW9C,cAEA,SAACuK,EAAUrG,GAC1BA,EAAMoB,mBAWR,OARA1E,qBAAU,WACRwN,EAAenN,OAAO8B,aAAac,QAAQ,eAC1C,IAKHJ,QAAQC,IAAIzC,OAAO8B,cACfoL,EAEA,kBAACjE,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACToB,KAAK,SACLC,kBAAgB,0BAChBC,mBAAiB,4BACjBH,aAAW,SAEX,yBAAKpJ,UAAU,cACb,0BAAM+B,SAAUhD,EAAagD,IAC3B,kBAAC0H,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,2BACtC,yCAAe2R,EAAf,OAEF,kBAAC1D,EAAA,EAAD,CAAerG,MAAO,CAAEuG,QAAS,OAAQiD,cAAe,WACtD,2BACE7M,UAAU,uBACVgD,YAAY,uBACZK,MAAO,CAAEgI,OAAQ,YAEnB,2BACErL,UAAU,uBACVgD,YAAY,oBACZK,MAAO,CAAEgI,OAAQ,YAEnB,2BACErL,UAAU,uBACVgD,YAAY,uBACZK,MAAO,CAAEgI,OAAQ,YAEnB,yBACEhI,MAAO,CACLuG,QAAS,OACTiD,cAAe,MACf5M,MAAO,OACP+J,eAAgB,WAGlB,2BAAOzO,KAAK,SAASyE,UAAU,SAAS/D,MAAM,YAC9C,2BAAOV,KAAK,SAASyE,UAAU,SAAS/D,MAAM,gBASxD,kBAACkN,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACToB,KAAK,SACLC,kBAAgB,0BAChBC,mBAAiB,4BACjBH,aAAW,SAEX,yBAAKpJ,UAAU,cACb,0BAAM+B,SAAUhD,EAAagD,IAC3B,kBAAC0H,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,2BACtC,4CAEF,kBAACiO,EAAA,EAAD,CAAejO,GAAG,6BAChB,8CC8CC6R,EA9HA,WACb,IAAMpO,EAAUC,cADG,EAKfoO,aAAS,gBAAOC,EAAP,EAAGC,GAAUC,EAAb,EAAaA,SAAb,OACX,kBAAC,EAAD,CACEF,KAAMA,EACNE,SAAUA,EACVzF,QAAS0F,EACT3I,SAAS,OAVM,mBAGjB4I,EAHiB,KAIjBD,EAJiB,OAgBfJ,aAAS,gBAAOC,EAAP,EAAGC,GAAUC,EAAb,EAAaA,SAAb,OACX,kBAAC,EAAD,CACEF,KAAMA,EACNE,SAAUA,EACVzF,QAAS4F,OApBM,mBAcjBC,EAdiB,KAejBD,EAfiB,OA2BfN,aAAS,gBAAOC,EAAP,EAAGC,GAAUC,EAAb,EAAaA,SAAb,OACX,kBAAC,EAAD,CACEF,KAAMA,EACNE,SAAUA,EACVzF,QAAS8F,OA/BM,mBAyBjBC,EAzBiB,KA0BjBD,EA1BiB,KAmCnB,OACE,yBAAK/N,UAAU,oBACb,kBAAC,IAAD,CACEC,MAAK,UAAKC,OAAOC,WAAZ,MACLC,OAAM,OACNE,OAAQ,CACNC,UAAW,CACTC,OAAQ,CACNvE,MAAO,GACPwE,QAAS,CACPC,QAAQ,IAGZC,KAAM,CACJ1E,MAAO,EACP2E,QAAQ,EACRC,KAAM,CACJC,MAAO,EACPC,SAAU,KAGdC,YAAa,CACXN,QAAQ,GAEVO,KAAM,CACJL,QAAQ,EACRE,MAAO,EACPI,UAAW,MACXC,SAAU,QAGdC,cAAe,CACbC,OAAQ,CACNC,QAAS,CACPZ,QAAQ,EACRa,KAAM,UAERC,QAAS,CACPd,QAAQ,EACRa,KAAM,YAGVE,MAAO,CACLC,OAAQ,CACNC,SAAU,IACVC,SAAU,EACVjB,KAAM,EACNkB,QAAS,GAEXC,QAAS,CACPH,SAAU,IACVC,SAAU,QAMpB,yBAAK5B,UAAU,4BACb,gCACE,8BACE,wBAAIA,UAAU,iBAAd,UACUgC,aAAac,QAAQ,cAGjC,0BAAM9C,UAAU,gBACd,4BACEA,UAAU,uBACVqE,QAASyJ,GAFX,yBAMA,4BAAQ9N,UAAU,uBAAuBqE,QAASuJ,GAAlD,qBAGA,4BAAQ5N,UAAU,uBAAuBqE,QAAS2J,GAAlD,uBAGA,kBAACC,EAAA,EAAD,CACEjO,UAAU,cACVqE,QAAS,WACPrC,aAAagC,QACb9E,EAAQlC,KAAK,WAKhB,M,QC5HPkR,EAAgB,WACpB,IAAMhP,EAAUC,cACVhC,EAAgByH,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMC,iBAF/B,EAGYiC,oBAAS,GAHrB,mBAGnB+O,EAHmB,KAGNC,EAHM,KAIpBzR,EAAWsC,cACK2F,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,iBACzD,OACE,6BACE,wBACEsC,UAAU,wBACVqD,MAAO,CAAEgL,OAAQ,WACjBhK,QAAS,WACP+J,GAAgBD,KAJpB,kBASA,kBAAC,IAAD,KACGA,GACC,kBAAC,IAAOG,GAAR,CAIEC,QAAM,EACNC,QAAS,CAAE3M,QAAS,EAAGzB,OAAQ,OAC/BqO,QAAS,CAAE5M,QAAS,EAAGzB,OAAQ,QAC/BsO,KAAM,CAAE7M,QAAS,EAAGzB,OAAQ,OAC5BuO,WAAY,CAAE/M,SAAU,MAExB,kBAAC,IAAO0M,GAAR,CACEG,QAAS,CACP5M,QAASsM,EAAc,EAAI,GAE7BQ,WAAY,CAAE/M,SAAU,MAExB,wBAAI5B,UAAU,2BACX7C,EAAcoI,KAAI,SAACtH,EAAM8H,GAAP,OACjB,wBACE6I,IAAK7I,EACL/F,UAAU,iBACVqE,QAAS,WACPnF,EAAQlC,KAAR,mBACcgF,aACTc,QAAQ,YACRC,oBAHL,qBAGqC9E,EAAKxC,KAE1CkB,EAASY,EAAyBU,EAAKxC,GAAI,eAG5CwC,EAAKvC,eAYpBmT,EAAY,WAChB,IAAM3P,EAAUC,cAEV7B,EAAYsH,aAAY,SAAC6C,GAAD,OAAWA,EAAMvK,MAAMI,aAH/B,EAIgB8B,oBAAS,GAJzB,mBAIf+O,EAJe,KAIFC,EAJE,KAKhBzR,EAAWsC,cACjB,OACE,6BACE,wBACEe,UAAU,wBACVqD,MAAO,CAAEgL,OAAQ,WACjBhK,QAAS,WACP+J,GAAgBD,KAJpB,eASA,kBAAC,IAAD,KACGA,GACC,kBAAC,IAAOG,GAAR,CAIEC,QAAM,EACNC,QAAS,CAAE3M,QAAS,EAAGzB,OAAQ,OAC/BqO,QAAS,CAAE5M,QAAS,EAAGzB,OAAQ,QAC/BsO,KAAM,CAAE7M,QAAS,EAAGzB,OAAQ,OAC5BuO,WAAY,CAAE/M,SAAU,MAExB,kBAAC,IAAO0M,GAAR,CACEG,QAAS,CACP5M,QAASsM,EAAc,EAAI,GAE7BQ,WAAY,CAAE/M,SAAU,MAExB,wBAAI5B,UAAU,2BACX1C,EAAUiI,KAAI,SAACtH,EAAM8H,GAAP,OACb,wBACE6I,IAAK7I,EACL/F,UAAU,iBACVqE,QAAS,WACPnF,EAAQlC,KAAR,mBACcgF,aACTc,QAAQ,YACRC,oBAHL,iBAGiC9E,EAAKxC,KAEtCkB,EAASY,EAAyBU,EAAKxC,GAAI,WAG5CwC,EAAKvC,eA2BXoT,EAfG,WAChB,OACE,yBAAK9O,UAAU,cACb,yBAAKA,UAAU,wBACb,kBAAC,IAAD,KACE,kBAAC,IAAOsO,GAAR,CAAWC,QAAM,EAACC,QAAS,CAAEpO,OAAQ,SACnC,kBAAC,EAAD,MACA,kBAAC,EAAD,W,4BCZG2O,GAtHY,SAACrK,GAC1B,IAAM9F,EAAgBgG,aAAY,SAACC,GAAD,OAAWA,EAAMtG,KAAKvC,cAClDW,EAAWsC,cACXtD,EAAQiJ,aAAY,SAACC,GAAD,mBAAeA,EAAM3H,MAAMQ,cAAc/B,UAC7Dc,EAAamI,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,cAAcnC,QAmC9DyT,EAAe,SAACC,GACpB,OAAOtT,EAAM4J,KAAI,SAAC2J,EAAMnJ,GAAP,OACfmJ,EAAKpT,WAAamT,EAChB,wBAAIL,IAAK7I,GACP,wBAAI1C,MAAO,CAAEpD,MAAO,SAClB,2BACE1E,KAAK,WACLyE,UAAU,YACVmP,QAASD,EAAKnT,UACdsN,KAAK,WACL+F,eAAa,QACblM,SAAU,WbgXC,IAACmM,Ea/WV1S,Gb+WU0S,Ea/WSH,EAAKzT,GbgX/B,SAACkB,EAAUC,GAEhB,IAAM0B,EAAgB,eAAQ1B,IAAWM,MAAMQ,eAC/CY,EAAiB3C,MAAM8Q,SAAQ,SAACyC,GAC1BA,EAAKzT,KAAO4T,IACdH,EAAKnT,WAAamT,EAAKnT,cAG3BY,EAAS,CACPpB,KApaoB,aAqapBC,QAAQ,eAAM8C,YatXV,4BACE,0BAAM0B,UAAU,aAAakP,EAAKxT,OAEpC,4BAAKwT,EAAKrT,MAAQ,kBAACyT,EAAA,EAAD,CAAcC,aAAa,YAAe,MAC5C,SAAf9S,EACC,wBAAI4G,MAAO,CAAEmM,SAAU,SACrB,0BAAMxP,UAAU,YAAYqD,MAAO,CAAEpD,MAAO,SACzCiP,EAAK5S,QAAL,UACM4S,EAAK5S,QAAQmT,UADnB,YACgCP,EAAK5S,QAAQoT,WAAa,EAD1D,8BAECR,EAAK5S,QAAQqT,cAFd,YAE+BT,EAAK5S,QAAQsT,WAF5C,8BAGCV,EAAK5S,QAAQuT,cACX,OAGN,KACJ,wBAAIxM,MAAO,CAAEpD,MAAO,OAAQ6P,UAAW,WACrC,4BAAQ9P,UAAU,uCAAlB,cAIF,wBAAIqD,MAAO,CAAEpD,MAAO,SAClB,4BACED,UAAU,oDACVqE,QAAS,kBAAM1H,EbyeH,SAAC0S,EAAQ5S,GACjC,OAAO,SAACE,EAAUC,GAChB,IAAMY,EAASZ,IAAWM,MAAMQ,cAAcjC,GAE3B,aAAfgB,GACFG,IAAWM,MAAMC,cAAcsP,SAAQ,SAACsD,GAClCA,EAAatU,KAAO+B,GACfuS,MahfqBC,CAAWd,EAAKzT,GAAIgB,MAF9C,iBAQF,SAIFT,EA/EiC,WACrC,IAAMiU,EAAiCvL,EAAMzG,KAAKtC,MAAM4J,KACtD,SAAC2J,GAAD,OAAUA,EAAKpT,YAEXoU,EAAY,IAAIC,IAAIF,GAC1B,OAAO,YAAIC,GA0EME,CAA+B1L,EAAMzG,MAClD6M,EAAa,YAjEgB,SAAC9O,GAClC,IAAIqU,EAAQ,GAWZ,OAVArU,EAAWyQ,SAAQ,SAAC3Q,GAClB,OAAO8C,EAAc2G,KAAI,SAACsC,GACxB,GAAIA,EAAI5L,QAAUH,EAChB,OAAQuU,EAAK,sBACRA,GADQ,CAEX,CAAE3U,KAAMmM,EAAInM,KAAMO,MAAO4L,EAAI5L,MAAOwC,MAAOoJ,EAAIpJ,eAKhD4R,EAqDiBC,CAA2BtU,IAErD,OACE,yBAAKP,GAAG,gBACN,+BACGqP,EAAcvF,KAAI,SAACsC,EAAK9B,GAAN,OACjB,kBAAC,IAAMwK,SAAP,CAAgB3B,IAAK7I,GACnB,2BACE/F,UAAU,0DACVqD,MAAO,CACLmN,gBAAgB,0CAAD,OAEvBC,KAAO5I,EAAIpJ,OAAOiS,MAAM,IAFD,oBAGvBD,KAAO5I,EAAIpJ,OAAOiS,MAAM,IAHD,eAMfjS,MAAO,UAGRoJ,EAAInM,MAEP,+BAAQsT,EAAanH,EAAI5L,e,UCxG/BsL,GAAmB,SAAC7C,GAAW,IAAD,EACkBtF,mBAAS,MAD3B,mBAC3BsI,EAD2B,KACPC,EADO,OAEavI,mBAAS,MAFtB,mBAE3BsM,EAF2B,KAECiF,EAFD,KAG5BhU,EAAWsC,cACX2R,EAAuBhM,aAC3B,SAACC,GAAD,OAAWA,EAAMtG,KAAKvC,WAAWe,UAG7B+N,EAAgBlG,aAAY,SAACC,GAAD,mBAC7BA,EAAMtG,KAAKvC,WAAWuJ,KAAI,SAACsC,GAAD,OAASA,EAAInM,YAKtCuP,EAHsBrG,aAAY,SAACC,GAAD,mBACnCA,EAAM3H,MAAMQ,cAAc1B,eAEkBuJ,KAAI,SAACsC,GACpD,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAI3L,UAEhCF,EAAe0I,EAAf1I,WAMR,OAJA6D,qBAAU,WACR7D,EAAW0L,KACV,CAACA,EAAoB1L,EAAY8O,IAGlC,6BACE,uBAAG9K,UAAU,cAAb,6BACA,kBAAC,KAAD,CACEvE,GAAG,oBACHoL,QAASoE,EACT/H,SAAU,SAACC,GACJA,EAGEA,EAAM0N,UAEY/F,EAAc7E,SAAS9C,EAAMjH,OAOhDyU,EACE,sFANFA,EAAS,MACThU,EAAS+B,EAAeyE,EAAMjH,QAC9BS,EAASyB,EAA2B+E,EAAMjH,QAC1CyL,EAAsBiJ,IAPJjJ,EAAsBxE,EAAMlH,OAFlD0L,EAAsB,OAkB1Bb,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZI,aAAW,EACXH,iBAAkBC,SAASC,KAC3BrH,UAAU,oBAEZ,uBAAGA,UAAU,iBAAiB0L,KAoKrBoF,GA/JS,SAAC,GAA6C,EAA3C9I,mBAA4C,IAAxBC,EAAuB,EAAvBA,QAAYC,EAAW,kDACjClJ,cAA3B+R,EAD4D,EAC5DA,SAAUhS,EADkD,EAClDA,aADkD,EAGpCK,mBAAS,MAH2B,mBAG7D4R,EAH6D,KAGnDC,EAHmD,OAIhC7R,mBAAS,MAJuB,mBAI7DpD,EAJ6D,KAIjDwM,EAJiD,OAK1BpJ,mBAAS,MALiB,mBAK7D8R,EAL6D,KAK9CC,EAL8C,OAMlB/R,mBAAS,MANS,mBAM7DgS,EAN6D,KAMxCC,EANwC,OAO5CjS,oBAAS,GAPmC,mBAO7DvD,EAP6D,KAOtDyV,EAPsD,KAS9D9T,EAASoH,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,cAAcjC,MAE1D8V,EAActI,uBAAY,SAACC,GAClB,OAATA,GACFA,EAAKnJ,UAEN,IAEGsI,EAAWzD,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,cAAchC,QAElEmE,qBAAU,WACJmR,IACEA,EAASjU,OAAS,GAAGsU,EAAmB,8BACxCL,EAASjU,OAAS,IAAIsU,EAAmB,6BACzCL,EAASjU,QAAU,GAAKiU,EAASjU,QAAU,IAC7CsU,EAAmB,SAEtB,CAACL,IAEJ,IAAMrU,EAAWsC,cAsBjB,OACE,kBAACkK,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACToB,KAAK,SACLC,kBAAgB,eAChBC,mBAAiB,cACjBH,aAAW,SAEX,yBAAKpJ,UAAU,cACb,0BAAM+B,SAAUhD,GA/BL,SAACyK,EAAUrG,GAC1BA,EAAMoB,iBAEN5H,Edka2B,SAAClB,EAAIC,EAAME,EAAaC,EAAOC,GAC5D,IAAM0V,EAAU,CACd9V,OACAE,cACAC,QACAC,YAEF,OAAO,SAACa,EAAUC,GAChB,IAAMmT,EAAY,YAAOnT,IAAWM,MAAMC,eACpCO,EAAa,eAAQd,IAAWM,MAAMQ,eAC5CA,EAAc/B,MAAd,sBAA0B+B,EAAc/B,OAAxC,CAA+C6V,IAC/CzB,EAAatD,SAAQ,SAACxO,GAChBA,EAAKxC,KAAOA,IACdwC,EAAKtC,MAAL,sBAAiBsC,EAAKtC,OAAtB,CAA6B6V,QAGjC7U,EAAS,CACPpB,KAhhBmC,4BAihBnCkW,gBAAgB,YAAK1B,GACrBzR,iBAAiB,eAAMZ,McpbvBgU,CAAgBlU,EAAQwT,EAAUxH,EAAS5N,YAAaC,EAAOG,QA4B3D,kBAACyN,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,gBACtC,0DAAgC4M,IAElC,kBAACqB,EAAA,EAAD,CAAejO,GAAG,eAChB,yBACE4H,MAAO,CACLuG,QAAS,OACTsD,WAAY,WAGd,2BAAOvD,QAAQ,OAAOtG,MAAO,CAAEuG,QAAS,SAAxC,oBAIA,2BACEnO,GAAG,OACHF,KAAK,OACLG,KAAK,OACLsH,YAAY,uCACZC,IAAKsO,EACLvR,UAAU,uBACVqD,MAAO,CAAEgI,OAAQ,KACjBnI,SAAU,SAACC,GACT8N,EAAY9N,EAAMC,OAAOnH,UAG7B,2BAAO0N,QAAQ,cAActG,MAAO,CAAEuG,QAAS,SAA/C,oBAGA,kBAAC0F,EAAA,EAAD,CACE7T,GAAG,cACH4N,KAAK,WACL+F,eAAa,QACbG,aAAc1T,EAAQ,UAAY,OAClCwI,QAAS,WACPiN,GAAQzV,IAEVwH,MAAO,CAAEsO,WAAY,OAAQC,SAAU,YAG3C,uBAAG5R,UAAU,gBAAgBqD,MAAO,CAAEwG,aAAc,SACjDqH,GAEH,uBAAGlR,UAAU,gBAAgBqD,MAAO,CAAEwG,aAAc,SACjDuH,GAEH,2BAAOzH,QAAQ,cAActG,MAAO,CAAEuG,QAAS,SAA/C,2BAGA,8BACEnO,GAAG,cACHC,KAAK,cACLsH,YAAY,uBACZC,IAAK8N,EAAS,CACZc,SAAU,CACR5V,OAAO,KAGX+D,UAAU,wDAEZ,2BAAO2J,QAAQ,oBAAoBtG,MAAO,CAAEuG,QAAS,SAArD,iDAGA,kBAAC,GAAD,CACE5N,WAAYwM,EACZnF,MAAO,CAAEyG,SAAU,WAAYC,MAAO,UAExC,0BAAM1G,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,WAC9C,2BACEzO,KAAK,SACL8N,KAAK,SACLrJ,UAAU,SACV/D,MAAM,mBACNoI,QAAS,SAACC,GACR+M,EAAmB,MACnBA,EAAmB,MAnGnC,WACE,IAAIpH,GAAS,EAMb,MAL8C,KAA1C7C,SAAS+C,eAAe,QAAQlO,QAClCkV,EAAiB,uBACjBlH,GAAS,GAGJA,EA8FqBG,IAGY,OAAxBgH,GACe,OAAfpV,EAEAsI,EAAEC,iBAEF0D,KAGJ5E,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,kB,qBC9MpDzC,I,OAAmB,SAAC7C,GAAW,IAAD,EACkBtF,mBAAS,MAD3B,mBAC3BsI,EAD2B,KACPC,EADO,OAEavI,mBAAS,MAFtB,mBAE3BsM,EAF2B,KAECiF,EAFD,KAG5B7F,EAAgBlG,aAAY,SAACC,GAAD,mBAC7BA,EAAMtG,KAAKvC,WAAWuJ,KAAI,SAACsC,GAAD,OAASA,EAAInM,YAEtCiB,EAAWsC,cACX2R,EAAuBhM,aAC3B,SAACC,GAAD,OAAWA,EAAMtG,KAAKvC,WAAWe,UAO7BkO,EALsBrG,aAAY,SAACC,GAAD,OACtCA,EAAM3H,MAAMQ,cAAc1B,WAA1B,YACQ6I,EAAM3H,MAAMQ,cAAc1B,YAC9B,MAE2CuJ,KAAI,SAACsC,GACpD,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAI3L,UAEhCF,EAAe0I,EAAf1I,WAKR,OAJA6D,qBAAU,WACR7D,EAAW0L,KACV,CAACA,EAAoB1L,IAGtB,6BACE,kBAAC,KAAD,CACEP,GAAG,kBACHuH,YAAY,yBACZ6D,QAASoE,EACT/H,SAAU,SAACC,GACJA,EAGEA,EAAM0N,UAEY/F,EAAc7E,SAAS9C,EAAMjH,OAOhDyU,EACE,sFANFA,EAAS,MACThU,EAAS+B,EAAeyE,EAAMjH,QAC9BS,EAASyB,EAA2B+E,EAAMjH,QAC1CyL,EAAsBiJ,IAPJjJ,EAAsBxE,EAAMlH,OAFlD0L,EAAsB,OAkB1Bb,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZI,aAAW,EACXH,iBAAkBC,SAASC,KAC3BrH,UAAU,oBAEZ,uBAAGA,UAAU,iBAAiB0L,MAiLrBoG,GA5KK,SAAC,GAA6C,EAA3C9J,mBAA4C,IAAxBC,EAAuB,EAAvBA,QAAYC,EAAW,kDAC7BlJ,cAA3B+R,EADwD,EACxDA,SAAUhS,EAD8C,EAC9CA,aAD8C,EAI5BK,mBAAS,MAJmB,mBAIzDpD,EAJyD,KAI7CwM,EAJ6C,OAOtBpJ,mBAAS,MAPa,mBAOzDsJ,EAPyD,KAO1CC,EAP0C,OAWxCvJ,oBAAS,GAX+B,mBAWzDvD,EAXyD,KAWlDyV,EAXkD,KAa1DjJ,EAAWzD,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,cAAchC,QAbF,EAc9B0D,mBAEhC,MAhB8D,mBAczD2S,EAdyD,KAc9CC,EAd8C,OAmB1B5S,mBAAS,IAnBiB,mBAmBzD1C,EAnByD,KAmB5C+L,EAnB4C,KAyB1D9L,EAAWsC,cA6BjB,OACE,kBAACkK,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACToB,KAAK,SACLC,kBAAgB,iBAChBC,mBAAiB,mBACjBH,aAAW,SAEX,yBAAKpJ,UAAU,cACb,0BAAM+B,SAAUhD,GArCL,SAACyK,EAAUrG,GAC1BA,EAAMoB,iBACN5H,Ef6emB,SACrBjB,EACAG,EACAD,EACAE,EACAmW,EACA9V,GAEA,IAAM+V,EAAU,CACdxW,OACAG,QACAD,cACAE,WACAQ,QAAS2V,EACT9V,cAEF,OAAO,SAACQ,EAAUC,GAChB,IAAMuV,EAAa,eAAQvV,IAAWM,MAAMQ,eACtCJ,EAAS,YAAOV,IAAWM,MAAMI,WACvC6U,EAAcxW,MAAd,sBAA0BwW,EAAcxW,OAAxC,CAA+CuW,IAC/C5U,EAAUmP,SAAQ,SAACxO,GACbA,EAAKxC,KAAO0W,EAAc1W,KAC5BwC,EAAKtC,MAAL,sBAAiBsC,EAAKtC,OAAtB,CAA6BuW,QAGjCvV,EAAS,CACPpB,KA/lBkB,WAgmBlB6W,YAAY,YAAK9U,GACjBgB,iBAAiB,eAAM6T,MexgBvBE,CACE7I,EAAS9N,KACTG,EACA2N,EAAS5N,YACTI,EACA+V,EACArV,QA6BE,kBAAC+M,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,kBACtC,qDAA2B4M,IAE7B,kBAACqB,EAAA,EAAD,CAAejO,GAAG,oBAChB,yBACE4H,MAAO,CACLuG,QAAS,OACTsD,WAAY,WAGd,2BAAOvD,QAAQ,OAAOtG,MAAO,CAAEuG,QAAS,SAAxC,oBAGA,2BACEnO,GAAG,OACHF,KAAK,OACLG,KAAK,OACLsH,YAAY,kCACZC,IAAK8N,EAAS,CACZc,SAAU,CACR5V,OAAO,EACP2G,QAAS,wBAEX0P,UAAW,CACTrW,MAAO,EACP2G,QAAS,kBAEX2P,UAAW,CACTtW,MAAO,GACP2G,QAAS,mBAGb5C,UAAU,uBACVqD,MAAO,CAAEgI,OAAQ,OAEnB,kBAACiE,EAAA,EAAD,CACEjG,KAAK,WACL+F,eAAa,QACbG,aAAc1T,EAAQ,UAAY,OAClCwI,QAAS,WACPiN,GAAQzV,IAEVwH,MAAO,CAAEsO,WAAY,OAAQC,SAAU,YAG3C,uBAAG5R,UAAU,gBAAgBqD,MAAO,CAAEwG,aAAc,SACjDnB,GAEH,2BAAOiB,QAAQ,cAActG,MAAO,CAAEuG,QAAS,SAA/C,2BAGA,8BACEnO,GAAG,cACHC,KAAK,cACLsH,YAAY,uBACZC,IAAK8N,EAAS,CACZc,SAAU,CACR5V,OAAO,KAGX+D,UAAU,wDAEZ,2BAAO2J,QAAQ,kBAAkBtG,MAAO,CAAEuG,QAAS,SAAnD,2BAGA,kBAAC,GAAD,CACE5N,WAAYwM,EACZnF,MAAO,CAAEyG,SAAU,WAAYC,MAAO,UAExC,kBAAC,KAAD,CACExD,SAAUwL,EACV7O,SAAU,SAACC,GACT6O,EAAa7O,IAEfqP,gBAAc,EAGdC,WAAW,uBACXpP,MAAO,CACLyG,SAAU,WACV7C,OAAQ,QAEVyL,YAAU,EACVC,gBAAgB,6BAChB3S,UAAU,sBAEZ,kBAAC,EAAD,CAAgB8E,MAAO2D,EAAgBlN,KAAK,SAC5C,0BAAM8H,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,WAC9C,2BACEzO,KAAK,SACLyE,UAAU,SACV/D,MAAM,mBACNoI,QAAS,SAACC,IApHxB,WACE,IAAI2F,GAAS,EAMb,MAL8C,KAA1C7C,SAAS+C,eAAe,QAAQlO,QAClC0M,EAAiB,uBACjBsB,GAAS,GAGJA,GA8GqBG,IACc,OAAfpO,EAAqBsI,EAAEC,iBAC/B0D,KAEP5E,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,kBCpOpD4I,GAAyB,SAAClO,GAC9B,IAAMkD,EAAkBhD,aAAY,SAAC6C,GAAD,OAClCA,EAAMlJ,KAAKvC,WAAWuJ,KAAI,SAACsC,GACzB,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAInM,YAMpCmX,EAA8BjO,aAClC,SAAC6C,GAAD,OAAWA,EAAMvK,MAAMQ,cAAc1B,cAGjC8W,EAAgBD,EAA4BtN,KAAI,SAACsC,GACrD,MAAO,CAAE5L,MAAO4L,EAAI5L,MAAOC,MAAO2L,EAAI3L,UAdA,EAiBYkD,mBAAS,YACxDyT,IAlBmC,mBAiBjCnL,EAjBiC,KAiBbC,EAjBa,KAqBhC3L,EAAe0I,EAAf1I,WAKR,OAJA6D,qBAAU,WACR7D,EAAW0L,KACV,CAACA,EAAoB1L,IAGtB,6BACE,kBAAC,IAAD,CACE+W,aAAcD,EACdrX,GAAG,oBACHoL,QAASe,EACTE,SAAO,EACP5E,SAAU,SAACC,GACTwE,EAAsB,YAAIxE,KAE5B2D,OAAQ,CAAEC,WAAY,SAACC,GAAD,mBAAC,eAAeA,GAAhB,IAAsBC,OAAQ,SACpDC,cAAY,EACZC,iBAAkBC,SAASC,KAC3BrH,UAAU,kBACVsH,aAAW,IACV,MA2GM0L,GAtGE,SAAC,GAA6C,EAA3ChL,mBAA4C,IAAxBC,EAAuB,EAAvBA,QAAYC,EAAW,gDACrDnJ,EAAiBC,cAAjBD,aACFpC,EAAWsC,cAOXvB,GAN8BkH,aAAY,SAAC6C,GAAD,OAC9CA,EAAMvK,MAAMC,cAAcoI,KAAI,SAACtH,GAAD,OAAUA,EAAKvC,WAEhBkJ,aAAY,SAAC6C,GAAD,OACzCA,EAAMvK,MAAMI,UAAUiI,KAAI,SAACtH,GAAD,OAAUA,EAAKvC,WAErBkJ,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,kBATI,EAU7B0B,mBAAS,MAVoB,mBAUtDiJ,EAVsD,KAU5CC,EAV4C,OAazBlJ,mBAAS,IAbgB,mBAatDpD,EAbsD,KAa1CwM,EAb0C,OAevBpJ,mBAAS,IAfc,mBAetD1C,EAfsD,KAezC+L,EAfyC,OAiBnBrJ,mBAAS,MAjBU,gCAmBPA,mBAAS,OAnBF,gCAqBfA,mBAAS,OArBM,mBAuBvD4J,GAvBuD,UAuBzCC,uBAAY,SAACC,GAClB,OAATA,GACFA,EAAKnJ,UAEN,KAkBH,OACE,kBAACoJ,EAAA,EAAD,iBACMjB,EADN,CAEED,QAASA,EACTmB,aAAW,OACXC,KAAK,SACLC,kBAAgB,0BAChBC,mBAAiB,2BAEjB,yBAAKvJ,UAAU,cACb,0BAAM+B,SAAUhD,GA1BL,WhB4iBK,IACtBvB,EACAoN,EACAqI,EACAC,EACAC,EgBhjBExW,GhB4iBFa,EgB1iBME,EAAcjC,GhB2iBpBmP,EgB1iBMvC,EhB2iBN4K,EgB1iBMjX,EhB2iBNkX,EgB1iBMxW,EhB2iBNyW,EgB1iBMzV,EAAcnC,KhB4iBb,SAACoB,EAAUC,GAEhB,IAAMc,EAAa,eAAQd,IAAWM,MAAMQ,eAO5C,GANIkN,GAAWlN,EAAchC,OAASkP,IACpClN,EAAchC,KAAOkP,GAEnBqI,IACFvV,EAAc1B,WAAd,YAA+BiX,IAE7BC,EAAwB,CAC1B,IAAM7C,EAAQ6C,EAAuB3N,KAAI,SAAChH,GAAD,OAAUA,EAAKiH,QACxD9H,EAAcvB,WAAd,YAA+BkU,GAEjC1T,EAAS,CACPpB,KApoB6B,sBAqoB7BC,QAAQ,eAAMkC,KAEhB,IAAI0V,EAAgB,IAGlBA,EADe,aAAbD,EACcvW,IAAWM,MAAMC,cAEjBP,IAAWM,MAAMI,WAErBmP,SAAQ,SAACxO,GACrB,GAAIA,EAAKxC,KAAO+B,IACVoN,GAAWA,IAAY3M,EAAKvC,OAC9BuC,EAAKvC,KAAOkP,GAEVqI,IACFhV,EAAKjC,WAAL,YAAsBiX,IAEpBC,GAAwB,CAC1B,IAAM7C,EAAQ6C,EAAuB3N,KAAI,SAAChH,GAAD,OAAUA,EAAKiH,QACxDvH,EAAK9B,WAAL,YAAsBkU,OAIX,aAAb8C,EACFxW,EAAS,CACPpB,KA7pB0B,qBA8pB1BC,QAAQ,YAAK4X,KAEK,SAAbD,GACPxW,EAAS,CACPpB,KAjqBsB,iBAkqBtBC,QAAQ,YAAK4X,YgBtkBX,kBAAC3J,EAAA,EAAD,CAAazJ,UAAU,cAAcvE,GAAG,2BACtC,iDAAuBiC,EAAchC,OAEvC,kBAACgO,EAAA,EAAD,CAAejO,GAAG,0BAChB,2BAAOkO,QAAQ,OAAOtG,MAAO,CAAEuG,QAAS,SAAxC,yBAGA,2BACEnO,GAAG,OACHF,KAAK,OACLG,KAAK,OACLsH,YAAW,kCAA6BtF,EAAchC,MACtDuH,IAAK+F,EACLhJ,UAAU,uBACVkD,SAAU,SAACC,GAAD,OAAWmF,EAAYnF,EAAMC,OAAOnH,UAGhD,2BAAO0N,QAAQ,oBAAoBtG,MAAO,CAAEuG,QAAS,SAArD,iDAGA,kBAAC,GAAD,CACE5N,WAAYwM,EACZnF,MAAO,CAAEyG,SAAU,WAAYC,MAAO,UAExC,2BAAOJ,QAAQ,eAAetG,MAAO,CAAEuG,QAAS,SAAhD,gEAGA,kBAAC,EAAD,CAAgB9E,MAAO2D,IACvB,0BAAMpF,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,WAC9C,2BACEzO,KAAK,SACLyE,UAAU,SACV/D,MAAK,eAAUyB,EAAchC,MAC7B2I,QAAS,SAACC,GACR2D,KAEF5E,MAAO,CAAEuG,QAAS,OAAQI,eAAgB,kBC5IpDqJ,GAAoB,SAAC3O,GAAW,IAAD,EAI/B6I,aAAS,gBAAOC,EAAP,EAAGC,GAAUC,EAAb,EAAaA,SAAb,OACX,kBAAC,GAAD,CACEF,KAAMA,EACNE,SAAUA,EACVzF,QAASqL,OARsB,mBAEjCC,EAFiC,KAGjCD,EAHiC,OAe/B/F,aAAS,gBAAOC,EAAP,EAAGC,GAAUC,EAAb,EAAaA,SAAb,OACX,kBAAC,GAAD,CAAaF,KAAMA,EAAME,SAAUA,EAAUzF,QAASuL,OAhBrB,mBAajCC,EAbiC,KAcjCD,EAdiC,OAmBEjG,aAAS,gBAAOC,EAAP,EAAGC,GAAUC,EAAb,EAAaA,SAAb,OAC5C,kBAAC,GAAD,CAAUF,KAAMA,EAAME,SAAUA,EAAUzF,QAASyL,OApBlB,mBAmB5BC,EAnB4B,KAmBdD,EAnBc,KAsBnC,OACE,yBACE1T,UAAU,kDACVqD,MAAO,CACLuG,QAAS,OACTI,eAAgB,gBAChBkD,WAAY,SACZ0G,aAAc,WAGhB,wBAAI5T,UAAU,sBAAsB0E,EAAM2D,UAC1C,8BACE,4BAAQrI,UAAU,SAASqE,QAASsP,GAApC,aAGA,4BACE3T,UAAU,SACVqE,QACqB,aAAnBK,EAAMyO,SACFI,EACAE,GAGc,aAAnB/O,EAAMyO,SACL,0CAEA,8CAsBGU,GAdK,WAClB,IAAMC,EAAelP,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,iBACxD,OACE,yBAAK2F,MAAO,CAAEgI,OAAQ,WACpB,kBAAC,GAAD,CACEhD,SAAUyL,EAAapY,KACvByX,SAAUW,EAAavY,KACvBS,WAAY8X,EAAa9X,aAE3B,kBAAC,GAAD,CAAoBiC,KAAM6V,MC7D1BC,GAAkB,SAACrP,GAavB,OACE,0BACErB,MAAO,CACLuG,QAAS,OACTI,eAAgB,SAChBkD,WAAY,SACZjN,MAAO,OACPG,OAAQ,OACRyM,cAAe,WAIjB,yBAAK7M,UAAU,aACb,6BAAM,KAxByB,IAA/B0E,EAAMvH,cAAcJ,QAA2C,IAA3B2H,EAAMpH,UAAUP,OAEpD,wBAAIsG,MAAO,CAAE5E,MAAO,UAAWuV,WAAY,sBAA3C,0BAKK,wBAAIhU,UAAU,oBAAd,4BAoDEiU,GA5BS,WACtB,IAAMtX,EAAWsC,cACjBY,qBAAU,WAIR,OAHAlD,EAAS6B,KACT7B,EAASrB,KACTqB,EAASP,KACF,WACLO,ElBgXG,CACLpB,KAhauB,mBkBiDtB,CAACoB,IAEJ,IAAMQ,EAAgByH,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMC,iBACnDG,EAAYsH,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMI,aAC/CwW,EAAelP,aAAY,SAACC,GAAD,OAAWA,EAAM3H,MAAMQ,iBAExD,OACE,yBAAK2F,MAAO,CAAEpD,MAAO,SACO,IAAzB9C,EAAcJ,QACM,IAArBO,EAAUP,QAE2B,IAArCY,OAAOC,KAAKkW,GAAc/W,OACxB,kBAAC,GAAD,CAAiBI,cAAeA,EAAeG,UAAWA,IAE1D,kBAAC,GAAD,QCvBO4W,GA9BE,SAACpV,GAChB,IAAMnC,EAAWsC,cAUjB,OATAY,qBAAU,WAIR,OAHAlD,EAAS6B,KACT7B,EAASrB,KACTqB,EAASP,KACF,WACLO,EnB8YG,CACLpB,KAhauB,mBmBmBtB,CAACoB,IAGF,yBAAKqD,UAAU,qBACb,kBAAC,EAAD,MACA,yBACEqD,MAAO,CACLuG,QAAS,OACTiD,cAAe,MACf5M,MAAO,QACPkU,UAAW,UAGb,yBAAK9Q,MAAO,CAAEpD,MAAO,OAAQmU,SAAU,SACrC,kBAAC,EAAD,OAEF,kBAAC,GAAD,SCZOC,OAlBf,WACE,OACE,kBAAC,IAAD,CAAQC,SAAUC,eAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,sBACV,kBAAC,GAAD,UCRUC,QACW,cAA7BxU,OAAOyU,SAASC,UAEe,UAA7B1U,OAAOyU,SAASC,UAEhB1U,OAAOyU,SAASC,SAASC,MACvB,2D,uBChBAC,GAAe,CACnBzV,SAAU,MAeG0V,GAZM,WAAmC,IAAlCtN,EAAiC,uDAAzBqN,GAAcE,EAAW,uCACrD,OAAQA,EAAOzZ,MACb,InBNiB,QmBOf,OAAO,2BACFkM,GADL,IAEEpI,SAAU2V,EAAOxZ,UAErB,QACE,OAAOiM,ICZPqN,GAAe,GAaNG,GAXO,WAAmC,IAAlCxN,EAAiC,uDAAzBqN,GAAcE,EAAW,uCACtD,OAAQA,EAAOzZ,MACb,IlBNkB,SkBOhB,OAAO,eACFkM,GAEP,QACE,OAAOA,ICUPqN,GAAe,CACnB3X,cAAe,GACfG,UAAW,GAEXwH,MAAO,GACPpH,cAAe,IAwGFwX,GArGM,WAAmC,IAAlCzN,EAAiC,uDAAzBqN,GAAcE,EAAW,uCACrD,OAAQA,EAAOzZ,MACb,IxB/BsB,awBgCpB,OAAO,2BACFkM,GADL,IAEEtK,cAAc,YAAK6X,EAAOxZ,WAE9B,IxBlCqB,YwBuCrB,IxBtCwB,ewBuCtB,OAAO,2BACFiM,GADL,IAEEnK,UAAU,YAAK0X,EAAOxZ,WAE1B,IxB7C6B,uBwB8C3B,OAAO,2BACFiM,GADL,IAEEtK,cAAc,YAAK6X,EAAOxZ,WAG9B,IxBhDuB,cwBiDrB,OAAO,2BACFiM,GADL,IAEEzL,WAAY,GACZsB,UAAW,GACXH,cAAe,GACfO,cAAe,KAEnB,IxBvDiC,wBwBwD/B,OAAO,2BACF+J,GADL,IAEEtK,cAAc,YAAK6X,EAAOxZ,WAE9B,IxB3D6B,oBwB4D3B,OAAO,2BACFiM,GADL,IAEEnK,UAAU,YAAK0X,EAAOxZ,WAE1B,IxB/DqB,YwBgEnB,OAAO,2BACFiM,GADL,IAEE3C,MAAM,YAAKkQ,EAAOxZ,WAEtB,IxBnE0C,iCwBwE1C,IxBvEsC,6BwBwEpC,OAAO,2BACFiM,GADL,IAEE/J,cAAc,eAAMsX,EAAOxZ,WAE/B,IxB3EgC,uBwB4E9B,OAAO,2BACFiM,GADL,IAEE/J,cAAe,KAEnB,IxB/EqC,4BwBgFnC,OAAO,2BACF+J,GADL,IAEEtK,cAAc,YAAK6X,EAAOvD,iBAC1B/T,cAAc,eAAMsX,EAAO1W,oBAE/B,IxBnFF,qCwBoFI,OAAO,2BACFmJ,GADL,IAGE/J,cAAc,eAAMsX,EAAO1W,oBAE/B,IxBxFsB,awByFpB,OAAO,2BAAKmJ,GAAZ,IAAmB/J,cAAc,eAAMsX,EAAOxZ,WAChD,IxBxFoB,WwByFlB,OAAO,2BACFiM,GADL,IAEE/J,cAAc,eAAMsX,EAAO1W,kBAC3BhB,UAAU,YAAK0X,EAAO5C,eAE1B,IxB7F+B,sBwB8F7B,OAAO,2BACF3K,GADL,IAEE/J,cAAc,eAAMsX,EAAOxZ,WAE/B,IxBhG0B,iBwBiGxB,OAAO,2BACFiM,GADL,IAEEnK,UAAU,YAAK0X,EAAOxZ,WAE1B,IxBtG8B,qBwBuG5B,OAAO,2BACFiM,GADL,IAEEtK,cAAc,YAAK6X,EAAOxZ,WAE9B,QACE,OAAOiM,ICvHPqN,GAAe,CACnB9Y,WAAY,IA8BCmZ,GA3BK,WAAmC,IAAlC1N,EAAiC,uDAAzBqN,GAAcE,EAAW,uCACpD,OAAQA,EAAOzZ,MACb,IxBV0B,iBwBWxB,OAAO,2BACFkM,GADL,IAEEzL,WAAW,YAAKgZ,EAAOxZ,WAE3B,IxBlBwB,ewBuBxB,IxBtByB,gBwB2BzB,IxB1B2B,kBwB2BzB,OAAO,2BACFiM,GADL,IAEEzL,WAAYgZ,EAAOxZ,UAEvB,QACE,OAAOiM,ICrBE2N,GAPKC,2BAAgB,CAClCxS,MAAOkS,GACP3Q,OAAQ6Q,GACR/X,MAAOgY,GACP3W,KAAM4W,K,UCNFG,GAAmBpV,OAAOqV,sCAAwCC,WAMzD3Q,GALD4Q,uBACZL,GACAE,GAAiBI,2BAAgBC,QCGnCC,IAASC,OACP,kBAAC,IAAD,CAAUhR,MAAOA,IACf,kBAAC,IAAD,CAAeiR,cAAeC,MAC5B,kBAAC,GAAD,QAGJ3O,SAAS+C,eAAe,SPmHpB,kBAAmB6L,WACrBA,UAAUC,cAAcC,MACrB9T,MAAK,SAAA+T,GACJA,EAAaC,gBAEd5T,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMG,c","file":"static/js/main.d79c7b93.chunk.js","sourcesContent":["export const LOAD_LISTS = \"LOAD_LISTS\";\nexport const ADD_SHOPPING_LIST = \"CREATE_SHOPPING_LIST\";\nexport const GET_TODOS = \"GET_TODOS\";\nexport const ADD_TODOLIST = \"ADD_TODOLIST\";\nexport const CLEAN_LISTS = \"CLEAN_LISTS\";\nexport const CHANGE_CHECK_SHOPPING = \"CHANGE_CHECK_SHOPPING\";\nexport const CHANGE_CHECK_TODO = \"CHANGE_CHECK_TODO\";\nexport const GET_USERS = \"GET_USERS\";\nexport const LOAD_SHOPPING_LIST_IN_HOMEPAGE = \"LOAD_SHOPPING_LIST_IN_HOMEPAGE\";\nexport const LOAD_TODO_LIST_IN_HOMEPAGE = \"LOAD_TODO_LIST_IN_HOMEPAGE\";\nexport const CLEAR_DISPLAYED_LIST = \"CLEAR_DISPLAYED_LIST\";\nexport const ADD_ITEM_TO_SHOPPING_LIST = \"ADD_ITEM_TO_SHOPPING_LIST\";\nexport const ADD_NEW_CATEGORY_TO_LIST_DISPLAYED =\n  \"ADD_NEW_CATEGORY_TO_LIST_DISPLAYED\";\nexport const CHECK_ITEM = \"CHECK_ITEM\";\nexport const DELETE_ITEM = \"DELETE ITEM\";\nexport const ADD_TASK = \"ADD_TASK\";\nexport const EDIT_DISPLAYED_LIST = \"EDIT_DISPLAYED_LIST\";\nexport const EDIT_SHOPPING_LIST = \"EDIT_SHOPPING_LIST\";\nexport const EDIT_TODO_LIST = \"EDIT_TODO_LIST\";\n\nexport const loadShoppingLists = () => {\n  const lists = [\n    {\n      id: 0,\n      name: \"Cibo da comprare\",\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: true,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: false,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n      categories: [\n        { value: 0, label: \"Food\" },\n        { value: 1, label: \"Clothes\" },\n        { value: 2, label: \"Stuff\" },\n      ],\n      sharedWith: [\"prokkius\", \"boba\"],\n    },\n    {\n      id: 1,\n      name: \"Seconda lista\",\n      items: [],\n      categories: [{ id: 0, label: \"Food\" }],\n    },\n    {\n      id: 2,\n      name: \"AAA\",\n      categories: [\n        { value: 0, label: \"Food\" },\n        { value: 1, label: \"Clothes\" },\n        { value: 2, label: \"Stuff\" },\n      ],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 5,\n          name: \"giacca\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 1,\n          isChecked: false,\n        },\n        {\n          id: 6,\n          name: \"cose 1\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n        {\n          id: 7,\n          name: \"cose 2\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 2,\n          isChecked: false,\n        },\n      ],\n      sharedWith: [],\n    },\n    {\n      id: 3,\n      name: \"BBB\",\n      categories: [{ value: 0, label: \"Food\" }],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n      sharedWith: [\"banana\"],\n    },\n    {\n      id: 4,\n      name: \"CCC\",\n      categories: [{ value: 0, label: \"Food\" }],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n      sharedWith: [],\n    },\n    {\n      id: 5,\n      name: \"DDD\",\n      categories: [\n        { value: 0, label: \"Food\" },\n        { value: 1, label: \"Clothes\" },\n        { value: 2, label: \"Stuff\" },\n      ],\n      items: [\n        {\n          id: 0,\n          name: \"zucchine\",\n          description: \"molto buone\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 1,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 2,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 3,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n        {\n          id: 4,\n          name: \"scalogno\",\n          description: \"rubatissimo\",\n          isFav: true,\n          category: 0,\n          isChecked: false,\n        },\n      ],\n      sharedWith: [],\n    },\n  ];\n\n  return {\n    type: LOAD_LISTS,\n    payload: [...lists],\n  };\n};\n\nexport const getTodoLists = () => {\n  const todos = [\n    {\n      id: 0,\n      name: \"todo list 1\",\n      items: [\n        {\n          name: \"nome 1\",\n          isFav: true,\n          description: \"descrizione\",\n          dueDate: new Date(2020, 8, 27, 10, 33, 30, 0),\n          sharedWith: [\"prokkius\"],\n          category: 0,\n        },\n      ],\n      categories: [\n        { value: 0, label: \"Food\" },\n        { value: 1, label: \"Clothes\" },\n      ],\n    },\n    {\n      id: 1,\n      name: \"todo list 2\",\n      items: [],\n      categories: [{ value: 0, label: \"Food\" }],\n    },\n  ];\n  return {\n    type: GET_TODOS,\n    payload: [...todos],\n  };\n};\n\nconst addTodoList = (existingTodos, name, categories, sharingWith) => {\n  const obj = {\n    id: existingTodos.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingTodos.push(obj);\n  return {\n    type: ADD_TODOLIST,\n    payload: [...existingTodos],\n  };\n};\n\nconst addShoppingList = (\n  existingShoppingLists,\n  name,\n  categories,\n  sharingWith\n) => {\n  const obj = {\n    id: existingShoppingLists.length,\n    name: name,\n    categories: [...categories],\n    sharingWith: [...sharingWith],\n    items: [],\n  };\n  existingShoppingLists.push(obj);\n\n  return {\n    type: ADD_SHOPPING_LIST,\n    payload: [...existingShoppingLists],\n  };\n};\n\n/**\n * It invokes the right function to add a new list according to the type of the list that is being added (@see addShoppingList and @see addTodoList)\n * @param {string} name name of the list\n * @param {string} typeOfList either shopping or todo\n * @param {[number]} categories array containing the ids of the categories selected by the user\n * @param {[]} sharingWith array containing the users the list is shared with\n */\n\nexport const addList = (name, typeOfList, categories, sharingWith) => {\n  return (dispatch, getState) => {\n    if (typeOfList === \"shopping\") {\n      const existingLists = [...getState().lists.shoppingLists];\n      dispatch(addShoppingList(existingLists, name, categories, sharingWith));\n    } else if (typeOfList === \"todo\") {\n      const existingLists = [...getState().lists.todoLists];\n      dispatch(addTodoList(existingLists, name, categories, sharingWith));\n    }\n  };\n};\n\nexport const cleanLists = () => {\n  return {\n    type: CLEAN_LISTS,\n  };\n};\n\nexport const checkItem = (itemId) => {\n  return (dispatch, getState) => {\n    // here there will also be an API call\n    const newListDisplayed = { ...getState().lists.listDisplayed };\n    newListDisplayed.items.forEach((item) => {\n      if (item.id === itemId) {\n        item.isChecked = !item.isChecked;\n      }\n    });\n    dispatch({\n      type: CHECK_ITEM,\n      payload: { ...newListDisplayed },\n    });\n  };\n};\n\nexport const getUsers = () => {\n  const users = [\"boba\", \"banana\", \"prokkius\"];\n  return {\n    type: GET_USERS,\n    payload: [...users],\n  };\n};\n\n/**\n * Loads the right shopping list in the store so that the user can see it on their homnepace\n * @param {number}  listId id of the list\n * @param {Array} shoppingLists array of existing shopping lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadShoppingList = (listId, shoppingLists) => {\n  const rightList = shoppingLists.find((list) => list.id === listId);\n  rightList.type = \"shopping\";\n  if (rightList) {\n    return {\n      type: LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n/**\n * Loads the right todo list in the store so that the user can see it on their homepage\n * @param {number} listId id of the list\n * @param {Array} todoLists array of existing todo lists\n * @returns the list object if found, otherwise undefined\n */\nconst loadTodoList = (listId, todoLists) => {\n  const rightList = todoLists.find((list) => list.id === listId);\n  rightList.type = \"todo\";\n  if (rightList) {\n    return {\n      type: LOAD_TODO_LIST_IN_HOMEPAGE,\n      payload: { ...rightList },\n    };\n  }\n};\n\n/**\n * Loads a specific list in the store after the user clicked it from the sidebar.\n * This function is invoked after the user has clicked one of the lists on the homepage's sidebar. To load the correct list,\n * it invokes the right function: @see loadShoppingList() @see loadTodoList\n * @param {number} listId id of the list the user has chosen to display\n * @param {string} type type of list, whether it'' a shopping or a todo list\n */\nexport const loadSingleListInHomepage = (listId, type) => {\n  return (dispatch, getState) => {\n    // if listDisplayed is empty, we don't need to clean it\n    const isAListAlreadySelected = { ...getState().lists.listDisplayed };\n    if (\n      Object.keys(isAListAlreadySelected).length !== 0 &&\n      isAListAlreadySelected.constructor === Object\n    ) {\n      dispatch(clearDisplayedList());\n    }\n    if (type === \"shopping\") {\n      const shoppingLists = [...getState().lists.shoppingLists];\n      dispatch(loadShoppingList(listId, shoppingLists));\n    }\n    if (type === \"todo\") {\n      const todoLists = [...getState().lists.todoLists];\n      dispatch(loadTodoList(listId, todoLists));\n    }\n  };\n};\n\nconst clearDisplayedList = () => {\n  return {\n    type: CLEAR_DISPLAYED_LIST,\n  };\n};\n/**\n * Add an item to a shopping list.\n * @param {number} id list id\n * @param {string} name name of the item\n * @param {string} description description of the item\n * @param {boolean} isFav is favourite\n * @param {number }category\n */\nexport const addShoppingItem = (id, name, description, isFav, category) => {\n  const newItem = {\n    name,\n    description,\n    isFav,\n    category,\n  };\n  return (dispatch, getState) => {\n    const shoppingList = [...getState().lists.shoppingLists];\n    const listDisplayed = { ...getState().lists.listDisplayed };\n    listDisplayed.items = [...listDisplayed.items, newItem];\n    shoppingList.forEach((list) => {\n      if (list.id === id) {\n        list.items = [...list.items, newItem];\n      }\n    });\n    dispatch({\n      type: ADD_ITEM_TO_SHOPPING_LIST,\n      newShoppingList: [...shoppingList],\n      newListDisplayed: { ...listDisplayed },\n    });\n  };\n};\n\nexport const addCategoryToDisplayedList = (categoryName) => {\n  return (dispatch, getState) => {\n    const newListDisplayed = { ...getState().lists.listDisplayed };\n    if (getState().lists.listDisplayed.categories) {\n      newListDisplayed.categories = [\n        ...getState().lists.listDisplayed.categories,\n        { id: getState().user.categories.length, label: categoryName },\n      ];\n    } else {\n      newListDisplayed.categories = [\n        { id: getState().user.categories.length, label: categoryName },\n      ];\n    }\n    dispatch({\n      type: ADD_NEW_CATEGORY_TO_LIST_DISPLAYED,\n      newListDisplayed: { ...newListDisplayed },\n    });\n  };\n};\n\n/**\n * Deletes an item from a shopping or a to do list, given the item id\n * @param {number} itemId\n * @param {string} typeOfList can be either \"shopping\" or \"todo\"\n * @returns {function(...[*]=)}\n */\n\nexport const deleteItem = (itemId, typeOfList) => {\n  return (dispatch, getState) => {\n    const listId = getState().lists.listDisplayed.id;\n    var list = [];\n    if (typeOfList === \"shopping\") {\n      getState().lists.shoppingLists.forEach((shoppingList) => {\n        if (shoppingList.id === listId) {\n          list = shoppingList;\n        }\n      });\n    }\n  };\n};\n\n/**\n * Adds a task to a to do list\n * @param {string} name of the task\n * @param {boolean} isFav if the task is favourite or not\n * @param {string} description of the task\n * @param {number} category\n * @param {Date} dateAndTime\n * @param {String[]}sharedWith\n */\n\nexport const addTask = (\n  name,\n  isFav,\n  description,\n  category,\n  dateAndTime,\n  sharedWith\n) => {\n  const newTask = {\n    name,\n    isFav,\n    description,\n    category,\n    dueDate: dateAndTime,\n    sharedWith,\n  };\n  return (dispatch, getState) => {\n    const todoDisplayed = { ...getState().lists.listDisplayed };\n    const todoLists = [...getState().lists.todoLists];\n    todoDisplayed.items = [...todoDisplayed.items, newTask];\n    todoLists.forEach((list) => {\n      if (list.id === todoDisplayed.id) {\n        list.items = [...list.items, newTask];\n      }\n    });\n    dispatch({\n      type: ADD_TASK,\n      newTodoList: [...todoLists],\n      newListDisplayed: { ...todoDisplayed },\n    });\n  };\n};\n\n/**\n * Edits the list selected by the user\n * @param {number} listId\n * @param {string} newName\n * @param {number[]} newCategories\n * @param {string[]} newUsersItIsSharedWith\n * @param {string} listType can be \"shopping\" or \"todo\"\n * @returns {function(...[*]=)}\n */\n\nexport const editList = (\n  listId,\n  newName,\n  newCategories,\n  newUsersItIsSharedWith,\n  listType\n) => {\n  return (dispatch, getState) => {\n    //edit the displayed list\n    const listDisplayed = { ...getState().lists.listDisplayed };\n    if (newName && listDisplayed.name !== newName) {\n      listDisplayed.name = newName;\n    }\n    if (newCategories) {\n      listDisplayed.categories = [...newCategories];\n    }\n    if (newUsersItIsSharedWith) {\n      const names = newUsersItIsSharedWith.map((user) => user.text);\n      listDisplayed.sharedWith = [...names];\n    }\n    dispatch({\n      type: EDIT_DISPLAYED_LIST,\n      payload: { ...listDisplayed },\n    });\n    let listFromRedux = [];\n    //edit the actual list\n    if (listType === \"shopping\") {\n      listFromRedux = getState().lists.shoppingLists;\n    } else {\n      listFromRedux = getState().lists.todoLists;\n    }\n    listFromRedux.forEach((list) => {\n      if (list.id === listId) {\n        if (newName && newName !== list.name) {\n          list.name = newName;\n        }\n        if (newCategories) {\n          list.categories = [...newCategories];\n        }\n        if (newUsersItIsSharedWith) {\n          const names = newUsersItIsSharedWith.map((user) => user.text);\n          list.sharedWith = [...names];\n        }\n      }\n    });\n    if (listType === \"shopping\")\n      dispatch({\n        type: EDIT_SHOPPING_LIST,\n        payload: [...listFromRedux],\n      });\n    else if (listType === \"todo\") {\n      dispatch({\n        type: EDIT_TODO_LIST,\n        payload: [...listFromRedux],\n      });\n    }\n  };\n};\n","export const ADD_CATEGORY = \"ADD_CATEGORY\";\nexport const EDIT_CATEGORY = \"EDIT_CATEGORY\";\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\nexport const GET_CATEGORIES = \"GET_CATEGORIES\";\n\nexport const getCategories = () => {\n  const categories = [\n    { value: 0, name: \"Food\", color: \"rgba(255, 61, 139, 0.5)\" },\n    { value: 1, name: \"Clothes\", color: \"rgba(106, 255, 61, 0.5)\" },\n    { value: 2, name: \"Stuff\", color: \"rgba(61, 155, 255,0.5)\" },\n    { value: 3, name: \"AAA\", color: \"rgba(255, 216, 61, 0.5)\" },\n  ];\n  return {\n    type: GET_CATEGORIES,\n    payload: [...categories],\n  };\n};\n\n/**\n * Adds new category to the user and also associates it to the list currently on display\n * @param {string} categoryName name of the new category\n * @param {string} categoryColor color of the category\n * @returns {function(*): {payload: *[], type: string}}\n */\n\nexport const addNewCategory = (categoryName, categoryColor) => {\n  return (dispatch, getState) => {\n    /**\n     * adding to all categories in redux is useless.\n     * I'll replace this with an api call to add this in the db\n     */\n    const allCategories = [\n      ...getState().user.categories,\n      {\n        value: getState().user.categories.length,\n        name: categoryName,\n        color: categoryColor,\n      },\n    ];\n    //dispatch(addCategoryToDisplayedList(categoryName));\n    dispatch({\n      type: ADD_CATEGORY,\n      payload: [...allCategories],\n    });\n  };\n};\n\n/**\n * Edits the name of an existing category\n * @param {number} id id of the category to edit\n * @param {string} newName new name of the category\n * @param {string} categoryColor color of the category\n * @returns {function(...[*]=)}\n */\nexport const editCategory = (id, newName, categoryColor) => {\n  return (dispatch, getState) => {\n    const existingCategories = [...getState().user.categories];\n    existingCategories.forEach((cat) => {\n      if (cat.value === id) {\n        if (newName) cat.name = newName;\n        if (categoryColor) cat.category = categoryColor;\n      }\n    });\n    dispatch({\n      type: EDIT_CATEGORY,\n      payload: [...existingCategories],\n    });\n  };\n};\n\n/**\n * Deletes an existing category\n * @param {number} id id of the category to delete\n * @returns {function(...[*]=)}\n */\n\nexport const deleteCategory = (id) => {\n  return (dispatch, getState) => {\n    const existingCategories = [...getState().user.categories];\n    const filteredCategories = existingCategories.filter(\n      (cat) => cat.value !== id\n    );\n    dispatch({\n      type: DELETE_CATEGORY,\n      payload: [...filteredCategories],\n    });\n  };\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst Login = (_: void): React$Element<*> => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const [username, setUsername] = useState(null);\n  const [password, setPassword] = useState(null);\n  const usernameRef = useRef(null);\n\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    usernameRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (username && password) setErrorMessage(null);\n  }, [username, password]);\n\n  const onSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    if (username && password && !errorMessage) {\n      dispatch(login(username, password));\n      history.push(\n        `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n      );\n    } else {\n      setErrorMessage(\"Please insert username and password\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">Hello{username ? `, ${username}` : null}</h1>\n        <form onSubmit={handleSubmit(onSubmit)} className=\"form\">\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={usernameRef}\n            className=\"input\"\n            onChange={(event) => {\n              setUsername(event.target.value);\n            }}\n          />\n\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            className=\"input\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n          />\n          <p className=\"error-message\">{errorMessage}</p>\n          <input\n            type=\"submit\"\n            value=\"Login\"\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          />\n          <Link to=\"/signup\">\n            <button className=\"button\" style={{ width: \"5.5rem\" }}>\n              Sign up\n            </button>\n          </Link>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import axios from \"axios\";\n\nexport const LOGIN = \"LOGIN\";\n\nconst url = \"http://localhost:9487\";\n\nexport const login = (username, password) => {\n  // chiamata API per il login\n  localStorage.setItem(\"username\", username);\n  return (dispatch) => {\n    const obj = {\n      username,\n      password,\n    };\n    axios\n      .post(`${url}/users/login`, obj)\n      .then((response) => {\n        if (response) {\n          localStorage.setItem(\"username\", response.data.username);\n          localStorage.setItem(\"userId\", response.data.userId);\n        }\n      })\n      .catch((error) => {\n        console.log(error.message);\n      });\n    return {\n      type: LOGIN,\n      payload: username,\n    };\n  };\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { signup } from \"../Redux\";\nimport Particles from \"react-particles-js\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = (_: void): React$Element<*> => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const [username, setUsername] = useState(null);\n  const [errorUsername, setErrorUsername] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [errorEmail, setErrorEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [errorPassword, setErrorPassword] = useState(null);\n  const usernameRef = useRef();\n\n  useEffect(() => {\n    localStorage.clear();\n    usernameRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (email) {\n      const regex = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      if (!regex.test(String(email).toLowerCase())) {\n        setErrorEmail(\"Email format not valid\");\n      } else {\n        setErrorEmail(null);\n      }\n    }\n  }, [email]);\n  useEffect(() => {\n    if (username) {\n      if (username.length < 3)\n        setErrorUsername(\"The chosen username is too short\");\n      if (username.length > 32)\n        setErrorUsername(\"The chosen username is too long\");\n      if (username.length >= 3 && username.length <= 32) setErrorUsername(null);\n    }\n  }, [username]);\n  useEffect(() => {\n    if (password) {\n      if (password.length < 3)\n        setErrorPassword(\"The chosen password is too short\");\n      if (password.length > 32)\n        setErrorPassword(\"The chosen password is too long\");\n      if (password.length >= 3 && password.length <= 32) setErrorPassword(null);\n    }\n  }, [password]);\n\n  const onSubmit = () => {\n    localStorage.setItem(\"username\", username);\n    dispatch(signup(username, email, password));\n    history.push(\n      `/profile/${localStorage.getItem(\"username\").toLocaleLowerCase()}`\n    );\n  };\n  const history = useHistory();\n  return (\n    <div className=\"login-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`${window.innerHeight}px`}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 5,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"form-login-container\">\n        <h1 className=\"hello\">Welcome{username ? `, ${username}` : null}</h1>\n        <form\n          onSubmit={\n            !errorUsername &&\n            !errorEmail &&\n            !errorPassword &&\n            username &&\n            password &&\n            email\n              ? handleSubmit(onSubmit)\n              : null\n          }\n          className=\"form\"\n        >\n          <input\n            name=\"username\"\n            placeholder=\"Insert your username\"\n            type=\"text\"\n            ref={usernameRef}\n            className=\"input\"\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <p className=\"error-message\">{errorUsername}</p>\n          <input\n            name=\"email\"\n            placeholder=\"Insert your email\"\n            type=\"email\"\n            onChange={(event) => {\n              setEmail(event.target.value);\n            }}\n            className=\"input\"\n          />\n          <p className=\"error-message\">{errorEmail}</p>\n          <input\n            name=\"password\"\n            placeholder=\"Insert your password\"\n            type=\"password\"\n            onChange={(event) => {\n              setPassword(event.target.value);\n            }}\n            className=\"input\"\n          />\n          <p className=\"error-message\">{errorPassword}</p>\n\n          <input\n            type=\"submit\"\n            value=\"Confirm\"\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          />\n          <button\n            onClick={(e) => {\n              e.preventDefault();\n              history.goBack();\n            }}\n            className=\"button\"\n            style={{ width: \"5.5rem\" }}\n          >\n            Go back\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","export const SIGNUP = \"SIGNUP\";\n\n/**\n * Esegue la chiamata API per registrare un utente al db.\n * @param {string} name nome dell'utente\n * @param {string} email email dell'utente\n * @param {string} username username dell'utente\n * @param {string} password password dell'utente\n */\nexport const signup = (name, email, username, password) => {\n  /**\n   * chiamate api per registrare l'utente\n   * .then( (response) => {\n   *   localStorage.setItem('token', response.data.token);\n   *   localStorage.setItem('username', response.data.username)\n   * })\n   */\n  localStorage.setItem(\"username\", username);\n  return {\n    type: SIGNUP,\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getUsers } from \"../../../Redux\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\n\nconst ShareWithUsers = (props) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n\n  const existingUsers = useSelector((store) => store.lists.users);\n\n  const alreadySharingWith = useSelector((store) => {\n    if (props.newList) return [];\n    else return store.lists.listDisplayed.sharedWith;\n  });\n\n  const keyCodes = {\n    comma: 188,\n    enter: 13,\n  };\n\n  const delimiters = [keyCodes.comma, keyCodes.enter];\n\n  // I have the tags in userTags\n  const [userTags, setUserTags] = useState([]);\n\n  //error if user does not exist\n  const [errorUserDoesntExist, setErrorUser] = useState(null);\n\n  const { users } = props;\n  useEffect(() => {\n    users(userTags);\n    setErrorUser(null);\n  }, [userTags, users]);\n\n  useEffect(() => {\n    if (alreadySharingWith) {\n      const formattedExistingSharedUsers = alreadySharingWith.map((user) => {\n        const obj = { id: user, text: user };\n        return { ...obj };\n      });\n      setUserTags([...formattedExistingSharedUsers]);\n    }\n  }, []);\n\n  const handleDelete = (i) => {\n    const tags = userTags.filter((tag, index) => index !== i);\n    setUserTags([...tags]);\n  };\n\n  const handleAddition = (tag) => {\n    if (existingUsers.includes(tag.text))\n      setUserTags((userTags) => [...userTags, tag]);\n    else setErrorUser(`The user ${tag.text} does not exist`);\n  };\n\n  return (\n    <div>\n      {/*<p className=\"text-modal\">Share with</p>*/}\n      <span>\n        <ReactTags\n          id=\"choose-users\"\n          tags={userTags}\n          handleDelete={handleDelete}\n          handleAddition={handleAddition}\n          delimiters={delimiters}\n          allowUnique={true}\n          classNames={{\n            tagInputField: \"input input-new-list\",\n            tag: \"tag\",\n            tagInput: \"tagInput\",\n            tags: \"tags\",\n            remove: \"removeTag\",\n            selected: \"selected\",\n          }}\n          allowDragDrop={false}\n          inputFieldPosition=\"bottom\"\n          placeholder={\n            props.type === \"todo\" ? \"Share task with...\" : \"Share list with...\"\n          }\n          autofocus={false}\n        />\n      </span>\n      {errorUserDoesntExist ? (\n        <p className=\"error-message\">{errorUserDoesntExist}</p>\n      ) : null}\n    </div>\n  );\n};\n\nexport default ShareWithUsers;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addList } from \"../../../Redux\";\n\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst SelectListType = (props) => {\n  const [selected, changeSelected] = useState(null);\n  const listTypes = [\n    { value: \"shopping\", label: \"Shopping list\" },\n    { value: \"todo\", label: \"Todo list\" },\n  ];\n\n  /**\n   * Callback to pass data from the child component SelectListType to parent component CreateList!\n   * I used the useEffect hook that gets called every time *selected* changes, and it calls the type function inside the props.\n   */\n\n  const { type } = props;\n  useEffect(() => {\n    type(selected);\n  }, [selected, type]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">What kind of list is this?</p>\n      <Select\n        id=\"choose-list\"\n        options={listTypes}\n        onChange={(event) => {\n          if (event) {\n            changeSelected(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9998 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />\n    </div>\n  );\n};\n\nconst SelectCategories = (props) => {\n  const categoriesFromRedux = useSelector((state) => state.user.categories);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  //const [categories, selectCategories] = useState([...categoriesFromRedux]);\n  const reduxCategories = categoriesFromRedux.map((cat) => {\n    return { value: cat.value, label: cat.name };\n  });\n  /*useEffect(() => {\n    console.log(selectedCategories);\n\t}, [selectedCategories]);\n\n\t* inside selectedCategories there are the ids of the categories that the user selected\n\t*/\n\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <Select\n        id=\"choose-categories\"\n        options={reduxCategories}\n        isMulti\n        onChange={(event) => {\n          if (event && event.length !== 0) {\n            setSelectedCategories((selectedCategories) => [\n              ...selectedCategories,\n              {\n                id: event[event.length - 1].value,\n                label: event[event.length - 1].label,\n              },\n            ]);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9998 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />{\" \"}\n    </div>\n  );\n};\n\nconst CreateList = ({ createShoppingList, onClose, newList, ...rest }) => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const existingShopppingListsNames = useSelector((state) =>\n    state.lists.shoppingLists.map((list) => list.name)\n  );\n  const existingTodoListsNames = useSelector((state) =>\n    state.lists.todoLists.map((list) => list.name)\n  );\n\n  const [listName, setListName] = useState(null);\n  // what kind of list is the user adding\n  const [typeOfList, changeTypeOfList] = useState(null);\n  //which categories\n  const [categories, setCategories] = useState([]);\n  // who is this shared with\n  const [sharingWith, setSharingWith] = useState([]);\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error: name length not right\n  const [errorListNameLength, setErrorListNameLength] = useState(null);\n  // error a category wasn't selected\n  const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const listNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Select at least one category\");\n  }, [categories, typeOfList]);\n\n  useEffect(() => {\n    if (listName === \"\") {\n      setErrorListName(\"Please write a name\");\n    } else if (listName) {\n      if (listName.length < 3) {\n        setErrorListNameLength(\"List name is too short\");\n      }\n      if (listName.length > 32) {\n        setErrorListNameLength(\"List name is too long\");\n      }\n      if (listName.length <= 32 && listName.length >= 3) {\n        setErrorListNameLength(null);\n      }\n    }\n  }, [listName]);\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n\n    dispatch(addList(listName, typeOfList, categories, sharingWith));\n  };\n\n  /**\n   * Called when the user clicks the button to confirm they want to add a new list.\n   * Checks if:\n   * 1. the user selected the type of list\n   * 2. a list with that name already exists\n   * @returns {boolean}\n   */\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (!typeOfList) {\n      setErrorTypeOfList(\"Select a type of list to add\");\n      errors = true;\n    }\n    if (typeOfList === \"shopping\") {\n      const alreadyThere = existingShopppingListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A shopping list with this name already exists\");\n        errors = true;\n      } else if (!alreadyThere) {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    if (typeOfList === \"todo\") {\n      const alreadyThere = existingTodoListsNames.includes(\n        document.getElementById(\"name\").value\n      );\n      if (alreadyThere) {\n        setErrorListName(\"A todo list with this name already exists\");\n        errors = true;\n      } else {\n        setErrorListName(null);\n        errors = false;\n      }\n    }\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={onClose}\n      aria-modal=\"true\"\n      role=\"dialog\"\n      aria-labelledby=\"dialog-createlist-title\"\n      aria-describedby=\"dialog-createlist-desc\"\n    >\n      <div className=\"colorfulBg\">\n        <form\n          onSubmit={\n            !errorListName && !errorTypeOfList && !errorListNameLength\n              ? handleSubmit(onSubmit)\n              : null\n          }\n        >\n          <DialogTitle className=\"modal-title\" id=\"dialog-createlist-title\">\n            <strong>Create a new list</strong>\n          </DialogTitle>\n          <DialogContent id=\"dialog-createlist-desc\">\n            <label htmlFor=\"name\" style={{ display: \"none\" }}>\n              Name of the item\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Insert the name of the new todo list\"\n              ref={listNameRef}\n              className=\"input input-new-list\"\n              onChange={(event) => setListName(event.target.value)}\n            />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListNameLength}\n            </p>\n            <label htmlFor=\"choose-list\" style={{ display: \"none\" }}>\n              Choose if this is a to do list or a shopping list\n            </label>\n            <SelectListType type={changeTypeOfList} />\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorTypeOfList}\n            </p>\n            <label htmlFor=\"choose-categories\" style={{ display: \"none\" }}>\n              Choose the categories associated with this list\n            </label>\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <label htmlFor=\"choose-users\" style={{ display: \"none\" }}>\n              Choose the users you want to share this list with (optional)\n            </label>\n            <ShareWithUsers users={setSharingWith} newList={newList} />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new list\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error || errorListNameLength || errorListName)\n                    e.preventDefault();\n                  else onClose();\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default CreateList;\n","import React, { useState, useEffect } from \"react\";\nimport { ChromePicker } from \"react-color\";\n\nconst ColorPicker = (props) => {\n  const [color, setColor] = useState();\n\n  const { categoryColor } = props;\n  useEffect(() => {\n    if (color) categoryColor(color);\n  }, [categoryColor, color]);\n\n  return (\n    <div className=\"color-picker\">\n      <ChromePicker\n        color={color}\n        onChangeComplete={(color) => {\n          setColor(color.rgb);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { addNewCategory, deleteCategory, editCategory } from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport ColorPicker from \"../Utilities/ColorPicker\";\n\nconst EditCategory = (props) => {\n  // selectedCategory contains the id of the category selected\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [newName, setNewName] = useState(null);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.user.categories,\n  ]);\n  const categoryNames = useSelector((store) =>\n    store.user.categories.map((category) => category.name)\n  );\n  const [errorNameModifiedCategory, setErrorModifiedCategory] = useState(null);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.value, label: cat.name };\n  });\n  const {\n    category,\n    editedCategoryName,\n    idToEdit,\n    errorModifiedCategory,\n  } = props;\n  useEffect(() => {\n    category(selectedCategory);\n    editedCategoryName(newName);\n    errorModifiedCategory(errorNameModifiedCategory);\n  }, [\n    selectedCategory,\n    category,\n    editedCategoryName,\n    idToEdit,\n    newName,\n    errorModifiedCategory,\n    errorNameModifiedCategory,\n  ]);\n\n  return (\n    <div className=\"select-manage-categories\">\n      <label htmlFor=\"select-edit-category\" style={{ display: \"none\" }}>\n        Select the category you want to edit\n      </label>\n      <Select\n        id=\"select-edit-category\"\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            setSelectedCategory(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list \"\n        placeholder=\"Select the category you want to edit\"\n      />\n      <label htmlFor=\"newName\" style={{ display: \"none\" }}>\n        Write the new name for the selected category\n      </label>\n      <input\n        id=\"newName\"\n        type=\"text\"\n        name=\"newName\"\n        placeholder=\"Insert the new name\"\n        className=\"input input-new-item\"\n        style={{ margin: \"0\" }}\n        onChange={(event) => {\n          if (categoryNames.includes(event.target.value)) {\n            setErrorModifiedCategory(\n              \"A category with that name already exists\"\n            );\n          } else {\n            setErrorModifiedCategory(null);\n            setNewName(event.target.value);\n          }\n        }}\n      />\n      <p className=\"error-message\">{errorNameModifiedCategory}</p>\n    </div>\n  );\n};\n\nconst DeleteCategory = (props) => {\n  // selectedCategory contains the id of the category selected\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.user.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.value, label: cat.name };\n  });\n  const { category } = props;\n  useEffect(() => {\n    category(selectedCategory);\n  }, [selectedCategory, category]);\n\n  return (\n    <span>\n      <label htmlFor=\"select-delete-category\" style={{ display: \"none\" }}>\n        Select the category you want to delete\n      </label>\n      <Select\n        id=\"select-delete-category\"\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (event) {\n            setSelectedCategory(event.value);\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9999 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        placeholder=\"Select the category you want to delete\"\n      />\n    </span>\n  );\n};\n\nconst ManageCategories = ({ createShoppingList, onClose, ...rest }) => {\n  const { handleSubmit } = useForm();\n\n  const [newCategory, setNewCategory] = useState(null);\n  const [errorCategoryAlreadyExists, setErrorCategoryAlreadyExists] = useState(\n    null\n  );\n  //edit the category name\n  const [newEditedName, setNewEditedName] = useState(null);\n  const [idToEdit, setIdToEdit] = useState(null);\n  const [errorModifiedCategory, setErrorModifiedCategory] = useState(null);\n  // delete a category\n  const [idToDelete, setIdToDelete] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const categoryNames = useSelector((store) =>\n    store.user.categories.map((cat) => cat.name)\n  );\n\n  const [displayColorPicker, setDisplayColorPicker] = useState(false);\n  const [categoryColor, setCategoryColor] = useState(null);\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    if (newCategory && categoryColor) {\n      dispatch(\n        addNewCategory(\n          newCategory,\n          `rgba(${categoryColor.r}, ${categoryColor.g}, ${categoryColor.b}, ${categoryColor.a})`\n        )\n      );\n    }\n    if (idToEdit) {\n      dispatch(\n        editCategory(\n          idToEdit,\n          newEditedName,\n          `rgba(${categoryColor.r} ${categoryColor.g} ${categoryColor.b} ${categoryColor.a})`\n        )\n      );\n    }\n    if (idToDelete) {\n      dispatch(deleteCategory(idToDelete));\n    }\n  };\n\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={onClose}\n      role=\"dialog\"\n      aria-labelledby=\"manage-categories-title\"\n      aria-describedby=\"manage-categories-content\"\n      aria-modal=\"true\"\n    >\n      <div className=\"colorfulBg\">\n        <form\n          onSubmit={\n            errorCategoryAlreadyExists || errorModifiedCategory\n              ? null\n              : handleSubmit(onSubmit)\n          }\n        >\n          <DialogTitle className=\"modal-title\" id=\"manage-categories-title\">\n            <strong>Manage the categories</strong>\n          </DialogTitle>\n          <DialogContent id=\"manage-categories-content\">\n            <Accordion\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                height: \"100%\",\n              }}\n            >\n              <Accordion.Toggle\n                eventKey=\"0\"\n                className=\"button header-button\"\n                style={{ alignSelf: \"center\" }}\n              >\n                Add a new category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"0\">\n                <div className=\"select-manage-categories\">\n                  <label htmlFor=\"name\" style={{ display: \"none\" }}>\n                    Insert the name of the new category\n                  </label>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <input\n                      id=\"name\"\n                      type=\"text\"\n                      name=\"name\"\n                      placeholder=\"Insert the name of the new category\"\n                      className=\"input input-new-item\"\n                      style={{ margin: \"0\" }}\n                      onChange={(event) => {\n                        if (categoryNames.includes(event.target.value)) {\n                          setErrorCategoryAlreadyExists(\n                            \"A category with that name already exists!\"\n                          );\n                        } else {\n                          setErrorCategoryAlreadyExists(null);\n                          setNewCategory(event.target.value);\n                        }\n                      }}\n                    />\n                    <button\n                      className=\"button\"\n                      style={{ width: \"8rem\" }}\n                      onClick={() => {\n                        setDisplayColorPicker(!displayColorPicker);\n                      }}\n                    >\n                      Set color\n                    </button>\n                  </div>\n                  {displayColorPicker ? (\n                    <ColorPicker categoryColor={setCategoryColor} />\n                  ) : null}\n\n                  <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n                </div>\n              </Accordion.Collapse>\n              <Accordion.Toggle\n                eventKey=\"1\"\n                className=\"button header-button\"\n                style={{ alignSelf: \"center\" }}\n              >\n                Edit an existing category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"1\">\n                <div>\n                  {/*category contains the id of the category i'm editing*/}\n                  <EditCategory\n                    category={setIdToEdit}\n                    editedCategoryName={setNewEditedName}\n                    errorModifiedCategory={setErrorModifiedCategory}\n                  />\n                </div>\n              </Accordion.Collapse>\n              <Accordion.Toggle\n                eventKey=\"2\"\n                className=\"button header-button\"\n                style={{ alignSelf: \"center\" }}\n              >\n                Delete an existing category\n              </Accordion.Toggle>\n              <Accordion.Collapse eventKey=\"2\">\n                <div className=\"select-manage-categories\">\n                  <DeleteCategory category={setIdToDelete} />\n                </div>\n              </Accordion.Collapse>\n            </Accordion>\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Confirm\"\n                onClick={(e) => {\n                  if (!errorCategoryAlreadyExists && !errorModifiedCategory)\n                    onClose();\n                  else e.preventDefault();\n                  //}\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default ManageCategories;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport {} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport ColorPicker from \"../Utilities/ColorPicker\";\n\nconst ManageUserProfile = ({ onClose, ...rest }) => {\n  const [profileName, setProfileName] = useState(null);\n  const { handleSubmit } = useForm();\n\n  const dispatch = useDispatch();\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n  };\n\n  useEffect(() => {\n    setProfileName(window.localStorage.getItem(\"username\"));\n  }, []);\n\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n  console.log(window.localStorage);\n  if (profileName) {\n    return (\n      <Dialog\n        {...rest}\n        onClose={onClose}\n        role=\"dialog\"\n        aria-labelledby=\"manage-categories-title\"\n        aria-describedby=\"manage-categories-content\"\n        aria-modal=\"true\"\n      >\n        <div className=\"colorfulBg\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogTitle className=\"modal-title\" id=\"manage-categories-title\">\n              <strong>Hello {profileName}! </strong>\n            </DialogTitle>\n            <DialogContent style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <input\n                className=\"input input-new-item\"\n                placeholder=\"Change your username\"\n                style={{ margin: \"1rem 0\" }}\n              />\n              <input\n                className=\"input input-new-item\"\n                placeholder=\"Change your email\"\n                style={{ margin: \"1rem 0\" }}\n              />\n              <input\n                className=\"input input-new-item\"\n                placeholder=\"Change your password\"\n                style={{ margin: \"1rem 0\" }}\n              />\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <input type=\"submit\" className=\"button\" value=\"Confirm\" />\n                <input type=\"submit\" className=\"button\" value=\"Cancel\" />\n              </div>\n            </DialogContent>\n          </form>\n        </div>\n      </Dialog>\n    );\n  } else {\n    return (\n      <Dialog\n        {...rest}\n        onClose={onClose}\n        role=\"dialog\"\n        aria-labelledby=\"manage-categories-title\"\n        aria-describedby=\"manage-categories-content\"\n        aria-modal=\"true\"\n      >\n        <div className=\"colorfulBg\">\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <DialogTitle className=\"modal-title\" id=\"manage-categories-title\">\n              <strong>Hello! </strong>\n            </DialogTitle>\n            <DialogContent id=\"manage-categories-content\">\n              <p>Loading...</p>\n            </DialogContent>\n          </form>\n        </div>\n      </Dialog>\n    );\n  }\n};\n\nexport default ManageUserProfile;\n","import React from \"react\";\n\nimport Particles from \"react-particles-js\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { useHistory } from \"react-router\";\nimport { useModal } from \"react-modal-hook\";\nimport CreateList from \"./Modals/CreateList\";\nimport ManageCategories from \"./Modals/ManageCategories\";\nimport ManageUserProfile from \"./Modals/ManageUserProfile\";\n\nconst Header = () => {\n  const history = useHistory();\n  const [\n    showCreateList,\n    hideCreateList,\n  ] = useModal(({ in: open, onExited }) => (\n    <CreateList\n      open={open}\n      onExited={onExited}\n      onClose={hideCreateList}\n      newList={true}\n    />\n  ));\n  const [\n    showManageCategories,\n    hideManageCategories,\n  ] = useModal(({ in: open, onExited }) => (\n    <ManageCategories\n      open={open}\n      onExited={onExited}\n      onClose={hideManageCategories}\n    />\n  ));\n\n  const [\n    showYourProfile,\n    hideShowYourProfile,\n  ] = useModal(({ in: open, onExited }) => (\n    <ManageUserProfile\n      open={open}\n      onExited={onExited}\n      onClose={hideShowYourProfile}\n    />\n  ));\n\n  return (\n    <div className=\"header-container\">\n      <Particles\n        width={`${window.innerWidth}px`}\n        height={`10vh`}\n        params={{\n          particles: {\n            number: {\n              value: 60,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 4,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: \"top\",\n              out_mode: \"out\",\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: \"bubble\",\n              },\n              onclick: {\n                enable: true,\n                mode: \"repulse\",\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className=\"content-header-container\">\n        <header>\n          <span>\n            <h1 className=\"hello-profile\">\n              Hello, {localStorage.getItem(\"username\")}\n            </h1>\n          </span>\n          <span className=\"header-right\">\n            <button\n              className=\"button header-button\"\n              onClick={showManageCategories}\n            >\n              Manage the categories\n            </button>\n            <button className=\"button header-button\" onClick={showCreateList}>\n              Create a new list\n            </button>\n            <button className=\"button header-button\" onClick={showYourProfile}>\n              Manage your profile\n            </button>\n            <LogoutOutlined\n              className=\"header-icon\"\n              onClick={() => {\n                localStorage.clear();\n                history.push(\"/\");\n              }}\n            />\n          </span>\n        </header>\n      </div>{\" \"}\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { loadSingleListInHomepage } from \"../../Redux\";\n//import Select from \"react-select\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { motion, AnimateSharedLayout, AnimatePresence } from \"framer-motion\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ShoppingLists = () => {\n  const history = useHistory();\n  const shoppingLists = useSelector((store) => store.lists.shoppingLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  const listDisplayed = useSelector((store) => store.lists.listDisplayed);\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        Shopping lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {shoppingLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      history.push(\n                        `/profile/${localStorage\n                          .getItem(\"username\")\n                          .toLocaleLowerCase()}/shopping/${list.id}`\n                      );\n                      dispatch(loadSingleListInHomepage(list.id, \"shopping\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst TodoLists = () => {\n  const history = useHistory();\n\n  const todoLists = useSelector((state) => state.lists.todoLists);\n  const [showContent, setShowContent] = useState(true);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <h3\n        className=\"category-name-in-list\"\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          setShowContent(!showContent);\n        }}\n      >\n        To do lists\n      </h3>\n      <AnimatePresence>\n        {showContent && (\n          <motion.ul\n            /*animate={{\n          height: showContent ? \"auto\" : \"0px\",\n        }}*/\n            layout\n            initial={{ opacity: 0, height: \"0px\" }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: \"0px\" }}\n            transition={{ duration: 0.35 }}\n          >\n            <motion.ul\n              animate={{\n                opacity: showContent ? 1 : 0,\n              }}\n              transition={{ duration: 0.15 }}\n            >\n              <ul className=\"scroll-items menu-items\">\n                {todoLists.map((list, index) => (\n                  <li\n                    key={index}\n                    className=\"menu-list-name\"\n                    onClick={() => {\n                      history.push(\n                        `/profile/${localStorage\n                          .getItem(\"username\")\n                          .toLocaleLowerCase()}/todo/${list.id}`\n                      );\n                      dispatch(loadSingleListInHomepage(list.id, \"todo\"));\n                    }}\n                  >\n                    {list.name}\n                  </li>\n                ))}\n              </ul>\n            </motion.ul>\n          </motion.ul>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n};\n\nconst MenuLists = () => {\n  return (\n    <div className=\"menu-lists\">\n      <div className=\"menu-lists-container\">\n        <AnimateSharedLayout>\n          <motion.ul layout initial={{ height: \"auto\" }}>\n            <ShoppingLists />\n            <TodoLists />\n          </motion.ul>\n        </AnimateSharedLayout>\n      </div>\n    </div>\n  );\n};\n\nexport default MenuLists;\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport { checkItem, deleteItem } from \"../../Redux\";\nimport { useDispatch } from \"react-redux\";\nimport chroma from \"chroma-js\";\nconst DisplayListContent = (props) => {\n  const allCategories = useSelector((store) => store.user.categories);\n  const dispatch = useDispatch();\n  const items = useSelector((store) => [...store.lists.listDisplayed.items]);\n  const typeOfList = useSelector((store) => store.lists.listDisplayed.type);\n  /**\n   * Removes any duplicates from the category array I get from the items inside the list\n   * @returns {number[]} contains the ids of the categories that are present inside this list\n   */\n  const removeDuplicatesFromCategories = () => {\n    const categoriesInListWithDuplicates = props.list.items.map(\n      (item) => item.category\n    );\n    const uniqueSet = new Set(categoriesInListWithDuplicates);\n    return [...uniqueSet];\n  };\n\n  /**\n   * Returns the names of the categories contained in the specific list associated with their id.\n   * It also uses the generic list of categories to find the names.\n   * @param {number[]} categories array containing the ids of the categories associated with the specific list\n   * @returns {string[]}\n   */\n\n  const getTheNamesOfTheCategories = (categories) => {\n    let names = [];\n    categories.forEach((category) => {\n      return allCategories.map((cat) => {\n        if (cat.value === category) {\n          return (names = [\n            ...names,\n            { name: cat.name, value: cat.value, color: cat.color },\n          ]);\n        }\n      });\n    });\n    return names;\n  };\n\n  const loadTheItems = (categoryId) => {\n    return items.map((item, index) =>\n      item.category === categoryId ? (\n        <tr key={index}>\n          <td style={{ width: \"1rem\" }}>\n            <input\n              type=\"checkbox\"\n              className=\"inside-td\"\n              checked={item.isChecked}\n              role=\"checkbox\"\n              aria-checked=\"false\"\n              onChange={() => {\n                dispatch(checkItem(item.id));\n              }}\n            />\n          </td>\n          <td>\n            <span className=\"inside-td\">{item.name}</span>\n          </td>\n          <td>{item.isFav ? <HeartTwoTone twoToneColor=\"#faaca8\" /> : null}</td>\n          {typeOfList === \"todo\" ? (\n            <td style={{ minWidth: \"3rem\" }}>\n              <span className=\"inside-td\" style={{ width: \"100%\" }}>\n                {item.dueDate\n                  ? `${item.dueDate.getDate()}-${item.dueDate.getMonth() + 1}-\n                ${item.dueDate.getFullYear()} ${item.dueDate.getHours()}:\n                ${item.dueDate.getMinutes()}`\n                  : null}\n              </span>\n            </td>\n          ) : null}\n          <td style={{ width: \"3rem\", textAlign: \"center\" }}>\n            <button className=\"button button-list button-inside-td\">\n              Edit item\n            </button>\n          </td>\n          <td style={{ width: \"3rem\" }}>\n            <button\n              className=\"button button-list button-inside-td delete-button\"\n              onClick={() => dispatch(deleteItem(item.id, typeOfList))}\n            >\n              Delete item\n            </button>\n          </td>\n        </tr>\n      ) : null\n    );\n  };\n\n  const categories = removeDuplicatesFromCategories(props.list);\n  const categoryNames = [...getTheNamesOfTheCategories(categories)];\n\n  return (\n    <div id=\"display-list\">\n      <table>\n        {categoryNames.map((cat, index) => (\n          <React.Fragment key={index}>\n            <thead\n              className=\"list-name-homepage category-name-display cute-underline\"\n              style={{\n                backgroundImage: `linear-gradient(\n      180deg,\n      ${chroma(cat.color).alpha(0.5)},\n      ${chroma(cat.color).alpha(0.5)}\n    )\n  `,\n                color: \"black\",\n              }}\n            >\n              {cat.name}\n            </thead>\n            <tbody>{loadTheItems(cat.value)}</tbody>\n          </React.Fragment>\n        ))}\n      </table>\n    </div>\n  );\n};\n\nexport default DisplayListContent;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport {\n  addShoppingItem,\n  addNewCategory,\n  addCategoryToDisplayedList,\n} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport CreatableSelect from \"react-select/creatable\";\n\nconst SelectCategories = (props) => {\n  const [selectedCategories, setSelectedCategories] = useState(null);\n  const [errorCategoryAlreadyExists, setError] = useState(null);\n  const dispatch = useDispatch();\n  const userCategoriesLength = useSelector(\n    (store) => store.user.categories.length\n  );\n\n  const categoryNames = useSelector((store) => [\n    ...store.user.categories.map((cat) => cat.name),\n  ]);\n  const categoriesFromRedux = useSelector((store) => [\n    ...store.lists.listDisplayed.categories,\n  ]);\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.value, label: cat.label };\n  });\n  const { categories } = props;\n\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories, categoryNames]);\n\n  return (\n    <div>\n      <p className=\"text-modal\">Select all the categories</p>\n      <CreatableSelect\n        id=\"select-categories\"\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (!event) {\n            setSelectedCategories(null);\n          } else {\n            if (!event.__isNew__) setSelectedCategories(event.value);\n            else {\n              const alreadyThere = categoryNames.includes(event.label);\n              if (!alreadyThere) {\n                setError(null);\n                dispatch(addNewCategory(event.label));\n                dispatch(addCategoryToDisplayedList(event.label));\n                setSelectedCategories(userCategoriesLength);\n              } else {\n                setError(\n                  \"A category with that name already exists! Please link it to this list, if needed.\"\n                );\n              }\n            }\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9998 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />\n      <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n    </div>\n  );\n};\n\nconst AddShoppingItem = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n\n  const [itemName, setItemName] = useState(null);\n  const [categories, setCategories] = useState(null);\n  const [errorItemName, setErrorItemName] = useState(null);\n  const [errorItemNameLength, setErrorItemLength] = useState(null);\n  const [isFav, setFav] = useState(false);\n\n  const listId = useSelector((store) => store.lists.listDisplayed.id);\n\n  const itemNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  const listName = useSelector((store) => store.lists.listDisplayed.name);\n\n  useEffect(() => {\n    if (itemName) {\n      if (itemName.length < 3) setErrorItemLength(\"The item name is too short\");\n      if (itemName.length > 32) setErrorItemLength(\"The item name is too long\");\n      if (itemName.length >= 3 && itemName.length <= 32)\n        setErrorItemLength(null);\n    }\n  }, [itemName]);\n\n  const dispatch = useDispatch();\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n\n    dispatch(\n      addShoppingItem(listId, itemName, formData.description, isFav, categories)\n    );\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorItemName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={onClose}\n      role=\"dialog\"\n      aria-labelledby=\"dialog-title\"\n      aria-describedby=\"dialog-desc\"\n      aria-modal=\"true\"\n    >\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\" id=\"dialog-title\">\n            <strong>Add a shopping item to {listName}</strong>\n          </DialogTitle>\n          <DialogContent id=\"dialog-desc\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <label htmlFor=\"name\" style={{ display: \"none\" }}>\n                Name of the item\n              </label>\n\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Insert the name of the new todo list\"\n                ref={itemNameRef}\n                className=\"input input-new-item\"\n                style={{ margin: \"0\" }}\n                onChange={(event) => {\n                  setItemName(event.target.value);\n                }}\n              />\n              <label htmlFor=\"isFavourite\" style={{ display: \"none\" }}>\n                Set as favourite\n              </label>\n              <HeartTwoTone\n                id=\"isFavourite\"\n                role=\"checkbox\"\n                aria-checked=\"false\"\n                twoToneColor={isFav ? \"#faaca8\" : \"#fff\"}\n                onClick={() => {\n                  setFav(!isFav);\n                }}\n                style={{ marginLeft: \"1rem\", fontSize: \"1.5em\" }}\n              />\n            </div>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorItemName}\n            </p>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorItemNameLength}\n            </p>\n            <label htmlFor=\"description\" style={{ display: \"none\" }}>\n              Description of the item\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Insert a description\"\n              ref={register({\n                required: {\n                  value: false,\n                },\n              })}\n              className=\"input input-new-item input-description scroll-items\"\n            />\n            <label htmlFor=\"select-categories\" style={{ display: \"none\" }}>\n              Select the category associated with this item\n            </label>\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                role=\"button\"\n                className=\"button\"\n                value=\"Add the new item\"\n                onClick={(e) => {\n                  setErrorItemLength(null);\n                  setErrorItemLength(null);\n\n                  const error = checkIfThereAreErrors();\n                  if (\n                    error ||\n                    errorItemNameLength !== null ||\n                    categories === null\n                  ) {\n                    e.preventDefault();\n                  } else {\n                    onClose();\n                  }\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default AddShoppingItem;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { HeartTwoTone } from \"@ant-design/icons\";\nimport {\n  addTask,\n  addNewCategory,\n  addCategoryToDisplayedList,\n} from \"../../../Redux\";\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport CreatableSelect from \"react-select/creatable\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker-cssmodules.css\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst SelectCategories = (props) => {\n  const [selectedCategories, setSelectedCategories] = useState(null);\n  const [errorCategoryAlreadyExists, setError] = useState(null);\n  const categoryNames = useSelector((store) => [\n    ...store.user.categories.map((cat) => cat.name),\n  ]);\n  const dispatch = useDispatch();\n  const userCategoriesLength = useSelector(\n    (store) => store.user.categories.length\n  );\n  const categoriesFromRedux = useSelector((store) =>\n    store.lists.listDisplayed.categories\n      ? [...store.lists.listDisplayed.categories]\n      : []\n  );\n  const categoriesInsideList = categoriesFromRedux.map((cat) => {\n    return { value: cat.value, label: cat.label };\n  });\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <CreatableSelect\n        id=\"select-category\"\n        placeholder=\"Select the category...\"\n        options={categoriesInsideList}\n        onChange={(event) => {\n          if (!event) {\n            setSelectedCategories(null);\n          } else {\n            if (!event.__isNew__) setSelectedCategories(event.value);\n            else {\n              const alreadyThere = categoryNames.includes(event.label);\n              if (!alreadyThere) {\n                setError(null);\n                dispatch(addNewCategory(event.label));\n                dispatch(addCategoryToDisplayedList(event.label));\n                setSelectedCategories(userCategoriesLength);\n              } else {\n                setError(\n                  \"A category with that name already exists! Please link it to this list, if needed.\"\n                );\n              }\n            }\n          }\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9998 }) }}\n        isSearchable\n        isClearable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n      />\n      <p className=\"error-message\">{errorCategoryAlreadyExists}</p>\n    </div>\n  );\n};\n\nconst AddTodoItem = ({ createShoppingList, onClose, ...rest }) => {\n  const { register, handleSubmit } = useForm();\n  // what kind of list is the user adding\n  //which categories\n  const [categories, setCategories] = useState(null);\n  // who is this shared with\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error a category wasn't selected\n  //const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const [isFav, setFav] = useState(false);\n\n  const listName = useSelector((store) => store.lists.listDisplayed.name);\n  const [startDate, setStartDate] = useState(\n    //setHours(setMinutes(new Date(), 30), 17)\n    null\n  );\n\n  const [sharingWith, setSharingWith] = useState([]);\n  /*\n  useEffect(() => {\n    if (!categories) setErrorTypeOfList(\"Seleziona delle categorie\");\n  }, []);\n  */\n  const dispatch = useDispatch();\n\n  const onSubmit = (formData, event) => {\n    event.preventDefault();\n    dispatch(\n      addTask(\n        formData.name,\n        isFav,\n        formData.description,\n        categories,\n        startDate,\n        sharingWith\n      )\n    );\n  };\n\n  function checkIfThereAreErrors() {\n    let errors = false;\n    if (document.getElementById(\"name\").value === \"\") {\n      setErrorListName(\"Please write a name\");\n      errors = true;\n    }\n\n    return errors;\n  }\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={onClose}\n      role=\"dialog\"\n      aria-labelledby=\"add-task-title\"\n      aria-describedby=\"add-task-content\"\n      aria-modal=\"true\"\n    >\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\" id=\"add-task-title\">\n            <strong>Add a new task to {listName}</strong>\n          </DialogTitle>\n          <DialogContent id=\"add-task-content\">\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n              }}\n            >\n              <label htmlFor=\"name\" style={{ display: \"none\" }}>\n                Name of the task\n              </label>\n              <input\n                id=\"name\"\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"Insert the name of the new task\"\n                ref={register({\n                  required: {\n                    value: true,\n                    message: \"Please insert a name\",\n                  },\n                  minLength: {\n                    value: 3,\n                    message: \"Name too short\",\n                  },\n                  maxLength: {\n                    value: 32,\n                    message: \"Name too long\",\n                  },\n                })}\n                className=\"input input-new-item\"\n                style={{ margin: \"0\" }}\n              />\n              <HeartTwoTone\n                role=\"checkbox\"\n                aria-checked=\"false\"\n                twoToneColor={isFav ? \"#faaca8\" : \"#fff\"}\n                onClick={() => {\n                  setFav(!isFav);\n                }}\n                style={{ marginLeft: \"1rem\", fontSize: \"1.5em\" }}\n              />\n            </div>\n            <p className=\"error-message\" style={{ marginBottom: \"1rem\" }}>\n              {errorListName}\n            </p>\n            <label htmlFor=\"description\" style={{ display: \"none\" }}>\n              Description of the task\n            </label>\n            <textarea\n              id=\"description\"\n              name=\"description\"\n              placeholder=\"Insert a description\"\n              ref={register({\n                required: {\n                  value: false,\n                },\n              })}\n              className=\"input input-new-item input-description scroll-items\"\n            />\n            <label htmlFor=\"select-category\" style={{ display: \"none\" }}>\n              Description of the task\n            </label>\n            <SelectCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <DatePicker\n              selected={startDate}\n              onChange={(event) => {\n                setStartDate(event);\n              }}\n              showTimeSelect\n              //minTime={setHours(setMinutes(new Date(), 0), 17)}\n              //maxTime={setHours(setMinutes(new Date(), 30), 20)}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              style={{\n                position: \"relative\",\n                zIndex: \"9998\",\n              }}\n              withPortal\n              placeholderText=\"Select a due date and time\"\n              className=\"date-select input\"\n            />\n            <ShareWithUsers users={setSharingWith} type=\"todo\" />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value=\"Add the new task\"\n                onClick={(e) => {\n                  const error = checkIfThereAreErrors();\n                  if (error || categories === null) e.preventDefault();\n                  else onClose();\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default AddTodoItem;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { editList } from \"../../../Redux\";\n\nimport { Dialog, DialogContent, DialogTitle } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport ShareWithUsers from \"../Utilities/ShareWithUsers\";\n\nconst EditSelectedCategories = (props) => {\n  const reduxCategories = useSelector((state) =>\n    state.user.categories.map((cat) => {\n      return { value: cat.value, label: cat.name };\n    })\n  );\n\n  //const [categories, selectCategories] = useState([...categoriesFromRedux]);\n\n  const categoriesAlreadyAssociated = useSelector(\n    (state) => state.lists.listDisplayed.categories\n  );\n\n  const defaultValues = categoriesAlreadyAssociated.map((cat) => {\n    return { value: cat.value, label: cat.label };\n  });\n\n  const [selectedCategories, setSelectedCategories] = useState([\n    ...categoriesAlreadyAssociated,\n  ]);\n\n  const { categories } = props;\n  useEffect(() => {\n    categories(selectedCategories);\n  }, [selectedCategories, categories]);\n\n  return (\n    <div>\n      <Select\n        defaultValue={defaultValues}\n        id=\"choose-categories\"\n        options={reduxCategories}\n        isMulti\n        onChange={(event) => {\n          setSelectedCategories([...event]);\n        }}\n        styles={{ menuPortal: (base) => ({ ...base, zIndex: 9998 }) }}\n        isSearchable\n        menuPortalTarget={document.body}\n        className=\"select-add-list\"\n        isClearable\n      />{\" \"}\n    </div>\n  );\n};\n\nconst EditList = ({ createShoppingList, onClose, ...rest }) => {\n  const { handleSubmit } = useForm();\n  const dispatch = useDispatch();\n  const existingShopppingListsNames = useSelector((state) =>\n    state.lists.shoppingLists.map((list) => list.name)\n  );\n  const existingTodoListsNames = useSelector((state) =>\n    state.lists.todoLists.map((list) => list.name)\n  );\n  const listDisplayed = useSelector((store) => store.lists.listDisplayed);\n  const [listName, setListName] = useState(null);\n  // what kind of list is the user adding\n  //which categories\n  const [categories, setCategories] = useState([]);\n  // who is this shared with\n  const [sharingWith, setSharingWith] = useState([]);\n  // error: name already used\n  const [errorListName, setErrorListName] = useState(null);\n  // error: name length not right\n  const [errorListNameLength, setErrorListNameLength] = useState(null);\n  // error a category wasn't selected\n  const [errorTypeOfList, setErrorTypeOfList] = useState(null);\n\n  const listNameRef = useCallback((node) => {\n    if (node !== null) {\n      node.focus();\n    }\n  }, []);\n\n  const onSubmit = () => {\n    dispatch(\n      editList(\n        listDisplayed.id,\n        listName,\n        categories,\n        sharingWith,\n        listDisplayed.type\n      )\n    );\n  };\n\n  /**\n   * Inside the props of SelectedListType I'm passing the type prop: this allows for a callback to save inside typeOfList the right type of list that is being created.\n   */\n\n  return (\n    <Dialog\n      {...rest}\n      onClose={onClose}\n      aria-modal=\"true\"\n      role=\"dialog\"\n      aria-labelledby=\"dialog-createlist-title\"\n      aria-describedby=\"dialog-createlist-desc\"\n    >\n      <div className=\"colorfulBg\">\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle className=\"modal-title\" id=\"dialog-createlist-title\">\n            <strong>Edit the list {listDisplayed.name}</strong>\n          </DialogTitle>\n          <DialogContent id=\"dialog-createlist-desc\">\n            <label htmlFor=\"name\" style={{ display: \"none\" }}>\n              New name for the list\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              name=\"name\"\n              placeholder={`Insert the new name for ${listDisplayed.name}`}\n              ref={listNameRef}\n              className=\"input input-new-list\"\n              onChange={(event) => setListName(event.target.value)}\n            />\n\n            <label htmlFor=\"choose-categories\" style={{ display: \"none\" }}>\n              Edit the categories associated with this list\n            </label>\n            <EditSelectedCategories\n              categories={setCategories}\n              style={{ position: \"relative\", Index: \"5000\" }}\n            />\n            <label htmlFor=\"choose-users\" style={{ display: \"none\" }}>\n              Choose the users you want to share this list with (optional)\n            </label>\n            <ShareWithUsers users={setSharingWith} />\n            <span style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <input\n                type=\"submit\"\n                className=\"button\"\n                value={`Edit ${listDisplayed.name}`}\n                onClick={(e) => {\n                  onClose();\n                }}\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              />\n            </span>\n          </DialogContent>\n        </form>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default EditList;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport DisplayListContent from \"./DisplayListContent\";\nimport { useModal } from \"react-modal-hook\";\nimport AddShoppingItem from \"./Modals/AddShoppingItem\";\nimport AddTodoItem from \"./Modals/AddTodoItem\";\nimport EditList from \"./Modals/EditList\";\nconst DisplayListHeader = (props) => {\n  const [\n    showAddShoppingItem,\n    hideAddShoppingItem,\n  ] = useModal(({ in: open, onExited }) => (\n    <AddShoppingItem\n      open={open}\n      onExited={onExited}\n      onClose={hideAddShoppingItem}\n    />\n  ));\n\n  const [\n    showAddTodoItem,\n    hideAddSTodoItem,\n  ] = useModal(({ in: open, onExited }) => (\n    <AddTodoItem open={open} onExited={onExited} onClose={hideAddSTodoItem} />\n  ));\n\n  const [showEditList, hideEditList] = useModal(({ in: open, onExited }) => (\n    <EditList open={open} onExited={onExited} onClose={hideEditList} />\n  ));\n  return (\n    <div\n      className=\"category-name-in-list category-name-in-homepage\"\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n      }}\n    >\n      <h2 className=\"list-name-homepage\">{props.listName}</h2>\n      <span>\n        <button className=\"button\" onClick={showEditList}>\n          Edit list\n        </button>\n        <button\n          className=\"button\"\n          onClick={\n            props.listType === \"shopping\"\n              ? showAddShoppingItem\n              : showAddTodoItem\n          }\n        >\n          {props.listType === \"shopping\" ? (\n            <span>Add item</span>\n          ) : (\n            <span>Add task</span>\n          )}\n        </button>\n      </span>\n    </div>\n  );\n};\n\nconst DisplayList = () => {\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n  return (\n    <div style={{ margin: \"1.5rem\" }}>\n      <DisplayListHeader\n        listName={selectedList.name}\n        listType={selectedList.type}\n        categories={selectedList.categories}\n      />\n      <DisplayListContent list={selectedList} />\n    </div>\n  );\n};\n\nexport default DisplayList;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\n//import { ReactComponent as Image } from \"../../img/undraw_conceptual_idea_xw7k.svg\";\nimport DisplayList from \"./DisplayList\";\n\nconst ListNotSelected = (props) => {\n  const loadRightText = () => {\n    if (props.shoppingLists.length === 0 && props.todoLists.length === 0) {\n      return (\n        <h1 style={{ color: \"#ddd6f3\", textShadow: \" 0 0 20px #ddd6f3\" }}>\n          Create a list to start\n        </h1>\n      );\n    } else {\n      return <h1 className=\"select-list-text\">Select a list to start</h1>;\n    }\n  };\n\n  return (\n    <span\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n        height: \"100%\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/*<Image style={{ width: \"25vw\" }} />*/}\n      <div className=\"lds-heart\">\n        <div>{\"\"}</div>\n      </div>\n      {loadRightText()}\n    </span>\n  );\n};\n\nconst HomepageContent = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  const shoppingLists = useSelector((store) => store.lists.shoppingLists);\n  const todoLists = useSelector((store) => store.lists.todoLists);\n  const selectedList = useSelector((store) => store.lists.listDisplayed);\n\n  return (\n    <div style={{ width: \"75vw\" }}>\n      {shoppingLists.length === 0 ||\n      todoLists.length === 0 ||\n      // checks if object is empty\n      Object.keys(selectedList).length === 0 ? (\n        <ListNotSelected shoppingLists={shoppingLists} todoLists={todoLists} />\n      ) : (\n        <DisplayList />\n      )}\n    </div>\n  );\n};\nexport default HomepageContent;\n","// @flow\n\nimport React, { useEffect } from \"react\";\nimport Header from \"./Header\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  getCategories,\n  loadShoppingLists,\n  getTodoLists,\n  cleanLists,\n} from \"../../Redux\";\nimport MenuLists from \"./MenuLists\";\nimport HomepageContent from \"./HomepageContent\";\n\nconst Homepage = (_: void): React$Element<*> => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getCategories());\n    dispatch(loadShoppingLists());\n    dispatch(getTodoLists());\n    return () => {\n      dispatch(cleanLists());\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"profile-container\">\n      <Header />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100vw\",\n          maxHeight: \"100vh\",\n        }}\n      >\n        <div style={{ width: \"25vw\", maxWidth: \"25vw\" }}>\n          <MenuLists />\n        </div>\n        <HomepageContent />\n      </div>\n    </div>\n  );\n};\nexport default Homepage;\n","import React from \"react\";\nimport Login from \"./Pages/Login\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Style/style.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Signup from \"./Pages/Signup\";\nimport Profile from \"./Pages/Homepage/Homepage\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/profile/:username\">\n          <Profile />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { LOGIN } from \"./loginActions\";\n\nconst initialState = {\n  username: null,\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return {\n        ...state,\n        username: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import { SIGNUP } from \"./signupActions\";\n\nconst initialState = {};\n\nconst signupReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNUP:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default signupReducer;\n","import {\n  LOAD_LISTS,\n  ADD_SHOPPING_LIST,\n  GET_TODOS,\n  ADD_TODOLIST,\n  CLEAN_LISTS,\n  CHANGE_CHECK_TODO,\n  CHANGE_CHECK_SHOPPING,\n  GET_USERS,\n  LOAD_SHOPPING_LIST_IN_HOMEPAGE,\n  LOAD_TODO_LIST_IN_HOMEPAGE,\n  CLEAR_DISPLAYED_LIST,\n  ADD_ITEM_TO_SHOPPING_LIST,\n  ADD_NEW_CATEGORY_TO_LIST_DISPLAYED,\n  CHECK_ITEM,\n  ADD_TASK,\n  EDIT_DISPLAYED_LIST,\n  EDIT_SHOPPING_LIST,\n  EDIT_TODO_LIST,\n} from \"./listsActions\";\n\nconst initialState = {\n  shoppingLists: [],\n  todoLists: [],\n  //categories: [],\n  users: [],\n  listDisplayed: {},\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD_LISTS:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case GET_TODOS:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_TODOLIST:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case ADD_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n\n    case CLEAN_LISTS:\n      return {\n        ...state,\n        categories: [],\n        todoLists: [],\n        shoppingLists: [],\n        listDisplayed: {},\n      };\n    case CHANGE_CHECK_SHOPPING:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    case CHANGE_CHECK_TODO:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case GET_USERS:\n      return {\n        ...state,\n        users: [...action.payload],\n      };\n    case LOAD_SHOPPING_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case LOAD_TODO_LIST_IN_HOMEPAGE:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case CLEAR_DISPLAYED_LIST:\n      return {\n        ...state,\n        listDisplayed: {},\n      };\n    case ADD_ITEM_TO_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.newShoppingList],\n        listDisplayed: { ...action.newListDisplayed },\n      };\n    case ADD_NEW_CATEGORY_TO_LIST_DISPLAYED:\n      return {\n        ...state,\n        //categories: [...action.payload],\n        listDisplayed: { ...action.newListDisplayed },\n      };\n    case CHECK_ITEM:\n      return { ...state, listDisplayed: { ...action.payload } };\n    case ADD_TASK:\n      return {\n        ...state,\n        listDisplayed: { ...action.newListDisplayed },\n        todoLists: [...action.newTodoList],\n      };\n    case EDIT_DISPLAYED_LIST:\n      return {\n        ...state,\n        listDisplayed: { ...action.payload },\n      };\n    case EDIT_TODO_LIST:\n      return {\n        ...state,\n        todoLists: [...action.payload],\n      };\n    case EDIT_SHOPPING_LIST:\n      return {\n        ...state,\n        shoppingLists: [...action.payload],\n      };\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import {\n  ADD_CATEGORY,\n  EDIT_CATEGORY,\n  DELETE_CATEGORY,\n  GET_CATEGORIES,\n} from \"./userActions\";\n\nconst initialState = {\n  categories: [],\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.payload],\n      };\n    case ADD_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    case EDIT_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    case DELETE_CATEGORY:\n      return {\n        ...state,\n        categories: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport loginReducer from \"./login/loginReducer\";\nimport signupReducer from \"./signup/signupReducer\";\nimport listsReducer from \"./lists/listsReducer\";\nimport userReducer from \"./user/userReducer\";\n\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  signup: signupReducer,\n  lists: listsReducer,\n  user: userReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport rootReducer from \"./rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { ModalProvider } from \"react-modal-hook\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ModalProvider rootComponent={TransitionGroup}>\n      <App />\n    </ModalProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}